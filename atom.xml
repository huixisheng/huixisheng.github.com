<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>前端开发者说</title>
  <icon>https://www.gravatar.com/avatar/46ae1663601bb0d8d81023f699fae75b</icon>
  <subtitle>记录开发的故事</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://huixisheng.github.io/"/>
  <updated>2018-03-26T01:21:33.809Z</updated>
  <id>http://huixisheng.github.io/</id>
  
  <author>
    <name>huixisheng</name>
    <email>huxisheng@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>项目脚手架</title>
    <link href="http://huixisheng.github.io/scaffold/"/>
    <id>http://huixisheng.github.io/scaffold/</id>
    <published>2018-03-24T17:31:11.000Z</published>
    <updated>2018-03-26T01:21:33.809Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h2><ul><li>vue-cli</li><li>vue-template</li><li>poi</li></ul><h2 id="Node"><a href="#Node" class="headerlink" title="Node"></a>Node</h2><ul><li><a href="https://github.com/yeoman/generator-node" target="_blank" rel="noopener">https://github.com/yeoman/generator-node</a></li></ul><h2 id="综合资源"><a href="#综合资源" class="headerlink" title="综合资源"></a>综合资源</h2><ul><li><a href="http://www.boilrplate.com/language/nodejs" target="_blank" rel="noopener">BOILRPLATE</a> A curated directory of boilerplates to help you start your projects!</li><li><a href="http://yeoman.io/generators/" target="_blank" rel="noopener">http://yeoman.io/generators/</a></li></ul><h2 id="小程序"><a href="#小程序" class="headerlink" title="小程序"></a>小程序</h2><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Vue&quot;&gt;&lt;a href=&quot;#Vue&quot; class=&quot;headerlink&quot; title=&quot;Vue&quot;&gt;&lt;/a&gt;Vue&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;vue-cli&lt;/li&gt;
&lt;li&gt;vue-template&lt;/li&gt;
&lt;li&gt;poi&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id
      
    
    </summary>
    
    
      <category term="Vue" scheme="http://huixisheng.github.io/tags/Vue/"/>
    
      <category term="scaffold" scheme="http://huixisheng.github.io/tags/scaffold/"/>
    
      <category term="startkit" scheme="http://huixisheng.github.io/tags/startkit/"/>
    
      <category term="generator" scheme="http://huixisheng.github.io/tags/generator/"/>
    
      <category term="boilrplate" scheme="http://huixisheng.github.io/tags/boilrplate/"/>
    
  </entry>
  
  <entry>
    <title>es6相关资源记录</title>
    <link href="http://huixisheng.github.io/awesome-es6/"/>
    <id>http://huixisheng.github.io/awesome-es6/</id>
    <published>2018-03-24T17:19:25.000Z</published>
    <updated>2018-03-24T17:32:00.909Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="http://es6-features.org/#Constants" target="_blank" rel="noopener">ECMAScript 6 — New Features: Overview &amp; Comparison</a></li><li><a href="https://github.com/lukehoban/es6features" target="_blank" rel="noopener">Overview of ECMAScript 6 features</a></li><li><a href="https://es6.io/" target="_blank" rel="noopener">es6学习视频教程</a></li><li><a href="https://babeljs.io/learn-es2015/" target="_blank" rel="noopener">babel Learn ES2015</a></li><li><a href="http://devhints.cn/es6" target="_blank" rel="noopener">ES2015+ 速查表</a></li><li><a href="https://github.com/tc39/ecma262" target="_blank" rel="noopener">https://github.com/tc39/ecma262</a></li><li><a href="https://www.ecma-international.org/default.htm" target="_blank" rel="noopener">https://www.ecma-international.org/default.htm</a></li><li><a href="https://en.wikipedia.org/wiki/ECMAScript" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/ECMAScript</a></li><li><a href="https://github.com/justjavac/programming-mindmap" target="_blank" rel="noopener">编程相关的思维导图-JavaScript 内置对象</a></li><li><a href="https://node.green/" target="_blank" rel="noopener">Nodejs 兼容性</a></li><li><a href="http://kangax.github.io/compat-table/es2016plus/" target="_blank" rel="noopener">浏览器兼容性表</a></li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://es6-features.org/#Constants&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ECMAScript 6 — New Features: Overview &amp;amp; Comparison&lt;
      
    
    </summary>
    
    
      <category term="es6" scheme="http://huixisheng.github.io/tags/es6/"/>
    
      <category term="文档" scheme="http://huixisheng.github.io/tags/%E6%96%87%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title>碰到的问题简单记录</title>
    <link href="http://huixisheng.github.io/some-problems/"/>
    <id>http://huixisheng.github.io/some-problems/</id>
    <published>2018-03-14T01:39:47.000Z</published>
    <updated>2018-03-14T03:33:03.398Z</updated>
    
    <content type="html"><![CDATA[<p>对碰到的问题做个简单的记录，方便后期汇总整理。大部分答案来源于互联网，感谢默默奉献的人，有些没有及时注明出处，后期就找不到相关的文章了，😓😓</p><h2 id="git-如何推送tag"><a href="#git-如何推送tag" class="headerlink" title="git 如何推送tag"></a>git 如何推送tag</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 推送全部tag</span><br><span class="line">$ git push origin --tags</span><br><span class="line"># 推送指定tag</span><br><span class="line">$ git push tag 0.0.1</span><br></pre></td></tr></table></figure><ul><li><a href="http://yijiebuyi.com/blog/007269d04d5096d9397ce3daf9d84c48.html" target="_blank" rel="noopener">http://yijiebuyi.com/blog/007269d04d5096d9397ce3daf9d84c48.html</a></li><li><a href="http://blog.csdn.net/shines/article/details/8558293" target="_blank" rel="noopener">http://blog.csdn.net/shines/article/details/8558293</a></li><li><a href="http://80x86.io/post/how-to-push-and-delete-a-remote-git-tag" target="_blank" rel="noopener">http://80x86.io/post/how-to-push-and-delete-a-remote-git-tag</a></li></ul><h2 id="git设置远程origin"><a href="#git设置远程origin" class="headerlink" title="git设置远程origin"></a>git设置远程origin</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 修改已有的origin</span><br><span class="line">$ git remote set-url --delete https://github.com/CocoaPods/Specs.git</span><br><span class="line">$ git remote set-url --add origin  https://github.com/CocoaPods/Specs.git</span><br><span class="line"></span><br><span class="line"># 空项目添加origin #</span><br><span class="line">$ git remote add origin https://github.com/CocoaPods/Specs.git</span><br><span class="line">$ git push -u origin master</span><br></pre></td></tr></table></figure><h2 id="tar压缩忽略指定目录"><a href="#tar压缩忽略指定目录" class="headerlink" title="tar压缩忽略指定目录"></a>tar压缩忽略指定目录</h2><blockquote><p>Mac下<code>--exclude</code>需要写在前面</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tar -czvf /Users/huixisheng/Desktop/j-excel.tar.gz --exclude j-excel/node_modules j-excel/</span><br></pre></td></tr></table></figure><h2 id="Nodejs守护进程"><a href="#Nodejs守护进程" class="headerlink" title="Nodejs守护进程"></a>Nodejs守护进程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup node index.js &gt; error.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nohup: redirecting stderr to stdout</span><br><span class="line"></span><br><span class="line">$  &gt; error.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><ul><li><a href="http://blog.csdn.net/iechenyb/article/details/76270595" target="_blank" rel="noopener">http://blog.csdn.net/iechenyb/article/details/76270595</a></li></ul><h2 id="centos7安装nodejs8-x"><a href="#centos7安装nodejs8-x" class="headerlink" title="centos7安装nodejs8.x"></a>centos7安装nodejs8.x</h2><p>直接安装过Node6.x，需要在机器上部署yapi。需要升级Node。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 这个是否需要不确定</span><br><span class="line">$ yum clean all</span><br><span class="line">$ curl -sL https://rpm.nodesource.com/setup_8.x | bash -</span><br><span class="line"># 安装不了，需要卸载重新安装</span><br><span class="line">$ yum install -y nodejs</span><br><span class="line">$ yum erase nodejs npm -y</span><br><span class="line">$ yum install -y nodejs</span><br></pre></td></tr></table></figure><h2 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h2><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;对碰到的问题做个简单的记录，方便后期汇总整理。大部分答案来源于互联网，感谢默默奉献的人，有些没有及时注明出处，后期就找不到相关的文章了，😓😓&lt;/p&gt;
&lt;h2 id=&quot;git-如何推送tag&quot;&gt;&lt;a href=&quot;#git-如何推送tag&quot; class=&quot;headerlin
      
    
    </summary>
    
    
      <category term="git" scheme="http://huixisheng.github.io/tags/git/"/>
    
      <category term="Nodejs" scheme="http://huixisheng.github.io/tags/Nodejs/"/>
    
  </entry>
  
  <entry>
    <title>无密码登录远程服务器</title>
    <link href="http://huixisheng.github.io/ssh-with-no-pwd/"/>
    <id>http://huixisheng.github.io/ssh-with-no-pwd/</id>
    <published>2018-02-09T02:40:35.000Z</published>
    <updated>2018-03-14T01:34:44.349Z</updated>
    
    <content type="html"><![CDATA[<p>每次<code>ssh</code>连接都要输入密码，真的很麻烦。</p><p>[ykq@10-10-215-141 .ssh]$ ll<br>total 8<br>-rw-r–r– 1 ykq root  417 Aug 21 21:29 authorized_keys<br>-rw-r–r– 1 ykq root 1987 Feb  9 11:25 known_hosts</p><p>   20  vi /etc/ssh/ssh_config<br>   21  vi /etc/ssh/sshd_config<br>   22  sudo chmod 755 ~/webpack-mhome.json<br>   23  sudo chmod 777 ~/webpack-mhome.json<br>   24  vi /etc/ssh/sshd_config<br>   25  sudo vi /etc/ssh/sshd_config<br>   26  sudo service ssh restart<br>   27  which ssh<br>   28  sudo chown ykq ~/webpack-mhome.json<br>   29  sudo chown a+x ~/webpack-mhome.json<br>   30  sudo vi /etc/ssh/sshd_config</p><p>   PasswordAuthentication yes</p><p>➜ ssh-copy-id -i ~/.ssh/motian-server.pub <a href="mailto:root@xx.xx" target="_blank" rel="noopener">root@xx.xx</a><br>/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: “/Users/huixisheng/.ssh/motian-server.pub”<br>/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed<br>/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed – if you are prompted now it is to install the new keys<br><a href="mailto:root@xx.xx" target="_blank" rel="noopener">root@xx.xx</a>‘s password:<br>/etc/profile.d/lang.sh: line 19: warning: setlocale: LC_CTYPE: cannot change locale (UTF-8): No such file or directory</p><p>Number of key(s) added:        1</p><p>Now try logging into the machine, with:   “ssh <a href="mailto:&#39;root@xx.com" target="_blank" rel="noopener">&#39;root@xx.com</a>‘“<br>and check to make sure that only the key(s) you wanted were added.</p><p>Permission denied (publickey,gssapi-keyex,gssapi-with-mic).</p><h2 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h2><pre><code>ssh-keygen -t rsa -f ~/.ssh/github -C &quot;emailssh-add ~/.ssh/githubhttp://www.html-js.com/article/2379</code></pre><p>sudo vim /etc/ssh/sshd_config<br>PubkeyAuthentication yes</p><p>PasswordAuthentication yes</p><p>Redirecting to /bin/systemctl restart ssh.service<br>Failed to restart ssh.service: Unit not found.</p><p>centos7下重启sshd服务的操作方法<br>在centos7下重启服务不再是 service 服务名称 动作 这样的方式的.而是:</p><p>systemctl 动作 服务名.service</p><ol><li>查看sshd服务是否启动了.</li></ol><p>systemctl status sshd.service</p><p>看到的这样的信息就可以确定是启动了.</p><ol><li>如果没有启动,则需要启动该服务:</li></ol><p>systemctl start sshd.service</p><ol><li>如果需要重启sshd服务可使得</li></ol><p>systemctl restart sshd.service</p><ol><li>设置为开机启动可使用:</li></ol><p>systemctl enable sshd.service</p><ul><li><a href="http://www.cnblogs.com/prettyisshit/p/5584558.html" target="_blank" rel="noopener">http://www.cnblogs.com/prettyisshit/p/5584558.html</a></li><li><a href="http://www.cnblogs.com/lovlos/p/6596796.html" target="_blank" rel="noopener">http://www.cnblogs.com/lovlos/p/6596796.html</a></li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="http://www.ruanyifeng.com/blog/2011/12/ssh_remote_login.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2011/12/ssh_remote_login.html</a></li><li><a href="https://www.w3ctech.com/topic/1602" target="_blank" rel="noopener">https://www.w3ctech.com/topic/1602</a></li><li><a href="https://segmentfault.com/a/1190000008479071" target="_blank" rel="noopener">https://segmentfault.com/a/1190000008479071</a></li><li><a href="https://stackoverflow.com/questions/19777357/getting-permission-denied-for-scp-over-ssh-server-to-local" target="_blank" rel="noopener">https://stackoverflow.com/questions/19777357/getting-permission-denied-for-scp-over-ssh-server-to-local</a></li><li><a href="http://www.worldhello.net/2010/04/08/1026.html" target="_blank" rel="noopener">http://www.worldhello.net/2010/04/08/1026.html</a></li><li><a href="https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/" target="_blank" rel="noopener">https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/</a></li><li><a href="https://gist.github.com/jexchan/2351996" target="_blank" rel="noopener">https://gist.github.com/jexchan/2351996</a></li><li><a href="https://help.github.com/articles/using-ssh-over-the-https-port/" target="_blank" rel="noopener">https://help.github.com/articles/using-ssh-over-the-https-port/</a></li><li><a href="http://blog.csdn.net/u012865381/article/details/78521087" target="_blank" rel="noopener">http://blog.csdn.net/u012865381/article/details/78521087</a></li><li><a href="https://help.aliyun.com/knowledge_detail/41487.html" target="_blank" rel="noopener">https://help.aliyun.com/knowledge_detail/41487.html</a></li><li><a href="http://blog.csdn.net/u013240609/article/details/78540795" target="_blank" rel="noopener">http://blog.csdn.net/u013240609/article/details/78540795</a></li></ul><p>用mac终端命令登录阿里云服务器，出现错误提示Permission denied (publickey,gssapi-keyex,gssapi-with-mic).<br><a href="http://blog.csdn.net/gigijingjing/article/details/76726564" target="_blank" rel="noopener">http://blog.csdn.net/gigijingjing/article/details/76726564</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;每次&lt;code&gt;ssh&lt;/code&gt;连接都要输入密码，真的很麻烦。&lt;/p&gt;
&lt;p&gt;[ykq@10-10-215-141 .ssh]$ ll&lt;br&gt;total 8&lt;br&gt;-rw-r–r– 1 ykq root  417 Aug 21 21:29 authorized_keys
      
    
    </summary>
    
    
      <category term="ssh" scheme="http://huixisheng.github.io/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>Uncaught SyntaxError: Use of const in strict mode. 报错解决方法记录</title>
    <link href="http://huixisheng.github.io/webpack-syntaxerror-use-of-const-in-strict-mode/"/>
    <id>http://huixisheng.github.io/webpack-syntaxerror-use-of-const-in-strict-mode/</id>
    <published>2018-02-07T05:37:51.000Z</published>
    <updated>2018-03-14T01:17:05.569Z</updated>
    
    <content type="html"><![CDATA[<p>项目中用<code>vue</code>，<code>vue-router</code>实现的页面在该设备下<code>&quot;Mozilla/5.0 (Linux; Android 5.1.1; YQ601 Build/LMY47V) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/39.0.0.0 Mobile Safari/537.36,Cosmeapp/9.1.0&quot;</code>空白。其他现有设备是正常的。想到可以连接真机设备进行调试，根据报错定位到相关的代码有问题，还是资源加载异常（比如cdn的资源在某些环境下异常）。然而连接<code>usb</code>无发审查元素。于是跑源码在本地环境下进行局域调试，结果页面也是空白。在页面注入<code>weinre</code>。有报错，但是不要定位，只是显示了报错。这里不得不吐槽下<code>weinre</code>确实不怎么好用。有看到过资料安卓的真机调试是需要客户端支持的。</p><p><code>Uncaught SyntaxError: Use of const in strict mode.</code></p><p><a href="mailto:node_modules/_strip-ansi@4.0.0" target="_blank" rel="noopener">node_modules/_strip-ansi@4.0.0</a>@strip-ansi/index.js</p><p>// ‘use strict’;<br>// var ansiRegex = require(‘ansi-regex’);</p><p>// module.exports = input =&gt; typeof input === ‘string’ ? input.replace(ansiRegex(), ‘’) : input;</p><p>‘use strict’;<br>var ansiRegex = require(‘ansi-regex’)();</p><p>module.exports = function (str) {<br>  return typeof str === ‘string’ ? str.replace(ansiRegex, ‘’) : str;<br>};</p><p>// <a href="mailto:node_modules/_ansi-regex@3.0.0" target="_blank" rel="noopener">node_modules/_ansi-regex@3.0.0</a>@ansi-regex/index.js</p><p>‘use strict’;</p><p>module.exports = function() {<br>    // const -&gt; var<br>    var pattern = [<br>        ‘[\u001B\u009B][<a href="">\</a>#;?]<em>(?:(?:(?:[a-zA-Z\d]</em>(?:;[a-zA-Z\d]<em>)</em>)?\u0007)’,<br>        ‘(?:(?:\d{1,4}(?:;\d{0,4})*)?[\dA-PRZcf-ntqry=&gt;&lt;~]))’<br>    ].join(‘|’);</p><pre><code>return new RegExp(pattern, &apos;g&apos;);</code></pre><p>};</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://github.com/mrdulin/blog/issues/35" target="_blank" rel="noopener">https://github.com/mrdulin/blog/issues/35</a></li><li><a href="https://stackoverflow.com/questions/36789889/syntaxerror-use-of-const-in-strict-mode" target="_blank" rel="noopener">https://stackoverflow.com/questions/36789889/syntaxerror-use-of-const-in-strict-mode</a></li><li><a href="http://www.mind-geek.net/javascript/syntaxerror-use-of-const-in-strict-mode/" target="_blank" rel="noopener">http://www.mind-geek.net/javascript/syntaxerror-use-of-const-in-strict-mode/</a></li><li><a href="https://segmentfault.com/q/1010000007415253" target="_blank" rel="noopener">https://segmentfault.com/q/1010000007415253</a></li><li>移动端真机调试指南 <a href="https://aotu.io/notes/2017/02/24/Mobile-debug/index.html" target="_blank" rel="noopener">https://aotu.io/notes/2017/02/24/Mobile-debug/index.html</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;项目中用&lt;code&gt;vue&lt;/code&gt;，&lt;code&gt;vue-router&lt;/code&gt;实现的页面在该设备下&lt;code&gt;&amp;quot;Mozilla/5.0 (Linux; Android 5.1.1; YQ601 Build/LMY47V) AppleWebKit/537.
      
    
    </summary>
    
    
      <category term="webpack" scheme="http://huixisheng.github.io/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>前端静态资源CDN公共库整理</title>
    <link href="http://huixisheng.github.io/cdn/"/>
    <id>http://huixisheng.github.io/cdn/</id>
    <published>2017-12-02T09:06:42.000Z</published>
    <updated>2017-12-03T07:33:03.512Z</updated>
    
    <content type="html"><![CDATA[<p>开放的CDN最好是速度快，库全，支持快速检索。本文将列举国内外常用的前端静态资源CDN公共库。用开发的CDN写写demo，体验新框架的语法，但是用到生成环境，还需谨慎。虽然方便，但是万一库挂了，被人恶意注意代码，用多了影响还是很大。</p><a id="more"></a><h2 id="jsDelivr"><a href="#jsDelivr" class="headerlink" title="jsDelivr"></a>jsDelivr</h2><blockquote><p>Open Source CDN free, fast, and reliable</p></blockquote><p>官方网址: <a href="https://www.jsdelivr.com/" target="_blank" rel="noopener">https://www.jsdelivr.com/</a><br>GitHub仓库：<a href="https://github.com/jsdelivr/jsdelivr" target="_blank" rel="noopener">https://github.com/jsdelivr/jsdelivr</a></p><p>支持<code>npm</code>仓库资源同步, <code>github</code> 资源同步，还支持<code>WordPress.org plugins</code>。就目前体验而言，速度还不错。提供相关的<a href="https://www.cdnperf.com/" target="_blank" rel="noopener">CDN分析工具</a>，支持combo合并，自动压缩资源，支持SRI。还有<a href="https://www.dnsperf.com/" target="_blank" rel="noopener">DNS分析工具</a> 功能不要太强大，如果访问速度不会因为xx被阻拦在门口，绝对是最佳选择。五星好评推荐。</p><h2 id="BootCDN"><a href="#BootCDN" class="headerlink" title="BootCDN"></a>BootCDN</h2><blockquote><p>稳定、快速、免费的前端开源项目 CDN 加速服务。截止写这个文章共收录了 3245 个前端开源项目</p></blockquote><p>官方网址: <a href="http://www.bootcdn.cn/" target="_blank" rel="noopener">http://www.bootcdn.cn/</a></p><p>支持检索，速度还不错，但是就是相比<a href="https://unpkg.com/#/" target="_blank" rel="noopener">unpkg.com</a>资源欠缺。</p><h2 id="unpkg-com"><a href="#unpkg-com" class="headerlink" title="unpkg.com"></a>unpkg.com</h2><p>官方网址: <a href="https://unpkg.com/#/" target="_blank" rel="noopener">https://unpkg.com/#/</a></p><p>资源绝对丰富，同步npmjs.com。但是速度不行，可惜。同时不支持检索，当然检索可以用<a href="https://www.npmjs.com/" target="_blank" rel="noopener">https://www.npmjs.com/</a> 搜索替代。</p><h2 id="css-net"><a href="#css-net" class="headerlink" title="css.net"></a>css.net</h2><blockquote><p>常用前端公共库 CDN 服务<br>常用前端公共库 &amp; 和谐使用 Google 公共库、字体库的方法</p></blockquote><p>官方网址: <a href="https://css.net/" target="_blank" rel="noopener">https://css.net/</a></p><h2 id="cdnjs-com"><a href="#cdnjs-com" class="headerlink" title="cdnjs.com"></a>cdnjs.com</h2><p>官网网址: <a href="http://cdnjs.com/" target="_blank" rel="noopener">http://cdnjs.com/</a></p><blockquote><p>静态资源<code>CDN</code>公共库是指一些服务商将我们常用的前端资源<code>JavaScript</code>,<code>CSS</code> 等前端静态资源存放在网上，方便直接引用，并且提供<code>CDN</code>加速服务，这样一来可以让用户加速访问这些资源，二来还可节约自己服务器的流量。本文介绍常用的前端静态资源CDN公共库。</p></blockquote><h2 id="什么是cdn"><a href="#什么是cdn" class="headerlink" title="什么是cdn"></a>什么是cdn</h2><p>CDN的全称是<code>Content Delivery Network</code>，即内容分发网络。其基本思路是尽可能避开互联网上有可能影响数据传输速度和稳定性的瓶颈和环节，使内容传输的更快、更稳定。通过在网络各处放置节点服务器所构成的在现有的互联网基础之上的一层智能虚拟网络，CDN系统能够实时地根据网络流量和各节点的连接、负载状况以及到用户的距离和响应时间等综合信息将用户的请求重新导向离用户最近的服务节点上。其目的是使用户可就近取得所需内容，解决 Internet网络拥挤的状况，提高用户访问网站的响应速度。</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul><li><a href="http://jscdn.upai.com/" target="_blank" rel="noopener">又拍云JS库加速服务</a>资源比较少</li><li><a href="http://staticfile.org/" target="_blank" rel="noopener">开放静态文件 CDN staticfile</a>，<a href="https://github.com/staticfile/static" target="_blank" rel="noopener">七牛云存储提供支持 GitHub</a></li><li><a href="http://developer.baidu.com/wiki/index.php?title=docs/cplat/libs" target="_blank" rel="noopener">百度开发者中心CDN公共库</a></li><li><a href="http://cdn.code.baidu.com/" target="_blank" rel="noopener">百度静态资源公共库</a>,<a href="https://github.com/Clouda-team/baiducdnstatic" target="_blank" rel="noopener">github地址</a></li><li><a href="http://lib.sinaapp.com/" target="_blank" rel="noopener">新浪</a></li><li><a href="http://libs.useso.com/" target="_blank" rel="noopener">360网站卫士常用前端公共库CDN服务资源丰富</a> 提供<a href="http://ajax.googleapis.com" target="_blank" rel="noopener">Google公共库</a>、<a href="http://fonts.googleapis.com" target="_blank" rel="noopener">Google字体库</a>替换服务有时在国外无法加载，导致网页加载被阻塞。推荐一个插件<a href="https://github.com/jiacai2050/gooreplacer#diy" target="_blank" rel="noopener">gooreplacer</a>一个用于替换网页中Google Fonts,API,themes</li><li><a href="https://developers.google.com/speed/libraries/devguide?csw=1" target="_blank" rel="noopener">Google CDN</a></li><li><a href="http://www.asp.net/ajaxlibrary/cdn.ashx" target="_blank" rel="noopener">微软CDN</a></li></ul><h2 id="2017-12-02-补充"><a href="#2017-12-02-补充" class="headerlink" title="2017-12-02 补充"></a>2017-12-02 补充</h2><p>知乎做的<a href="https://unpkg.com/#/" target="_blank" rel="noopener">https://unpkg.com/#/</a>的镜像 unpkg.zhimg.com。</p><p>饿了么做的<a href="https://unpkg.com/#/" target="_blank" rel="noopener">https://unpkg.com/#/</a>的镜像<br>npm.elemecdn.com。例 <code>https://npm.elemecdn.com/jquery@3.2.1/dist/jquery.min.js</code></p><p>饿了么做的<a href="https://unpkg.com/#/" target="_blank" rel="noopener">https://unpkg.com/#/</a>的镜像</p><p>例外还有github.elemecdn.com。例如 <a href="https://github.elemecdn.com/eleme/ubt-web/1.3.4/ubt.min.js。规则没有琢磨透。" target="_blank" rel="noopener">https://github.elemecdn.com/eleme/ubt-web/1.3.4/ubt.min.js。规则没有琢磨透。</a></p><p>以上并没有开源，没有开发访问。不建议使用。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="http://baike.baidu.com/view/8689800.htm?fromId=21895&amp;redirected=seachword" target="_blank" rel="noopener">cdn 百度百科</a></li><li><a href="http://www.zhihu.com/question/20227463" target="_blank" rel="noopener">国内有哪些靠谱的 Javascript 库 CDN可用？</a></li><li><a href="https://segmentfault.com/a/1190000000311560" target="_blank" rel="noopener">程序员福利：常用的 JavaScript 库 CDN 加速服务</a></li><li><a href="https://zhanqi.net/post/170425/" target="_blank" rel="noopener">https://zhanqi.net/post/170425/</a></li><li><a href="https://www.zhihu.com/question/20227463" target="_blank" rel="noopener">https://www.zhihu.com/question/20227463</a></li><li><a href="http://dyhdyh.com/archives/22.html" target="_blank" rel="noopener">http://dyhdyh.com/archives/22.html</a></li></ul><h2 id="更新历史"><a href="#更新历史" class="headerlink" title="更新历史"></a>更新历史</h2><p>2016-10-21</p><ul><li>合并<a href="https://github.com/huixisheng/lab/issues/1" target="_blank" rel="noopener">issue</a>整理的内容</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;开放的CDN最好是速度快，库全，支持快速检索。本文将列举国内外常用的前端静态资源CDN公共库。用开发的CDN写写demo，体验新框架的语法，但是用到生成环境，还需谨慎。虽然方便，但是万一库挂了，被人恶意注意代码，用多了影响还是很大。&lt;/p&gt;
    
    </summary>
    
    
      <category term="前端工具" scheme="http://huixisheng.github.io/tags/%E5%89%8D%E7%AB%AF%E5%B7%A5%E5%85%B7/"/>
    
      <category term="cdn" scheme="http://huixisheng.github.io/tags/cdn/"/>
    
      <category term="前端资源" scheme="http://huixisheng.github.io/tags/%E5%89%8D%E7%AB%AF%E8%B5%84%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>变量的解构赋值和展开运算符</title>
    <link href="http://huixisheng.github.io/es6-destructuring-and-spread-operator/"/>
    <id>http://huixisheng.github.io/es6-destructuring-and-spread-operator/</id>
    <published>2017-09-20T14:13:09.000Z</published>
    <updated>2017-09-20T16:12:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文对<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment" target="_blank" rel="noopener">变量的解构赋值(destructing)</a>和<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Spread_operator" target="_blank" rel="noopener">展开运算符(spread operator …)</a>做个简单的介绍。</p><p>本文首发在<a href="https://huixisheng.github.io/es6-destructuring-and-spread-operator/">前端开发说</a></p><a id="more"></a><h2 id="变量的解构赋值"><a href="#变量的解构赋值" class="headerlink" title="变量的解构赋值"></a>变量的解构赋值</h2><p>以下例子通过<code>Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3216.0 Safari/537.36</code>测试。</p><h3 id="数组赋值"><a href="#数组赋值" class="headerlink" title="数组赋值"></a>数组赋值</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">let [a, b] = [1, 2];</span><br><span class="line">console.log(a); // 1</span><br><span class="line">console.log(b); // 2</span><br><span class="line"></span><br><span class="line">let [a, b, ...rest] = [1, 2, 3, 4, 5];</span><br><span class="line">console.log(a); // 1</span><br><span class="line">console.log(b); // 2</span><br><span class="line">console.log(rest); // [3, 4, 5]</span><br><span class="line"></span><br><span class="line">// 不完全解构</span><br><span class="line">let [a, b] = [1, 2, 3]</span><br><span class="line">console.log(a); // 1</span><br><span class="line">console.log(b); // 2</span><br><span class="line"></span><br><span class="line">// 设置默认值</span><br><span class="line">let [a = 1] = []</span><br><span class="line">console.log(a); // 1</span><br></pre></td></tr></table></figure><h3 id="对象赋值"><a href="#对象赋值" class="headerlink" title="对象赋值"></a>对象赋值</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 用于提取数据</span><br><span class="line">const &#123;a, b, ...rest&#125; = &#123;a:1, b:2, c:3, d:4&#125;</span><br><span class="line">console.log(a); // 1</span><br><span class="line">console.log(b); // 2</span><br><span class="line">console.log(rest); // &#123;c: 3, d: 4&#125;</span><br></pre></td></tr></table></figure><h3 id="函数参数"><a href="#函数参数" class="headerlink" title="函数参数"></a>函数参数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 默认值设置</span><br><span class="line">function fun([a, b = 3]) &#123;</span><br><span class="line">    return a + b;</span><br><span class="line">&#125;</span><br><span class="line">fun([1]) // 4</span><br><span class="line"></span><br><span class="line">[[1, 2], [3, 4]].map(([a, b]) =&gt; a + b) // [3, 7]</span><br></pre></td></tr></table></figure><h2 id="对象展开运算符"><a href="#对象展开运算符" class="headerlink" title="对象展开运算符"></a>对象展开运算符</h2><p>扩展运算符（spread operator …）将一个数组、类数组、字符串转为用逗号分隔的序列。</p><p>最早是在<a href="https://vuex.vuejs.org/zh-cn/state.html" target="_blank" rel="noopener">Vuex</a>文档看到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">computed: &#123;</span><br><span class="line">  localComputed () &#123; /* ... */ &#125;,</span><br><span class="line">  // 使用对象展开运算符将此对象混入到外部对象中</span><br><span class="line">  ...mapState(&#123;</span><br><span class="line">    // ...</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line">// 来自: https://vuex.vuejs.org/zh-cn/state.html</span><br></pre></td></tr></table></figure><p>得知是<a href="https://github.com/tc39/proposal-object-rest-spread" target="_blank" rel="noopener">对象展开运算符</a>。查阅资料发现属于ES6变量的解构赋值的内容。说来也惭愧<a href="http://es6.ruanyifeng.com/" target="_blank" rel="noopener">《ES6 标准入门》</a>第1版，第2版都看过，当初看的不深入，很多知识点都有漏洞。而今天在封装<code>Vue组件</code>的时候，如下代码看的甚是变扭，ES6模块和CommonJS规范糅杂在一起。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import components from &apos;./components&apos;;</span><br><span class="line"></span><br><span class="line">const install = function (Vue) &#123;</span><br><span class="line">  Object.keys(components).forEach((key) =&gt; &#123;</span><br><span class="line">    Vue.component(key, components[key]);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">if (typeof window !== &apos;undefined&apos; &amp;&amp; window.Vue) &#123;</span><br><span class="line">  install(window.Vue);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">module.exports = Object.assign(components, &#123; install &#125;);  // eslint-disable-line no-undef</span><br></pre></td></tr></table></figure><p>于是做了如下调整</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">export default &#123;</span><br><span class="line">  install,</span><br><span class="line">  ...packages,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>Vuex的文档中有介绍对象展开运算符（现处于 ECMASCript 提案 stage-3 阶段）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">The TC39 categorizes proposals into the following stages:</span><br><span class="line"></span><br><span class="line">Stage 0 - Strawman: just an idea, possible Babel plugin.</span><br><span class="line">Stage 1 - Proposal: this is worth working on.</span><br><span class="line">Stage 2 - Draft: initial spec.</span><br><span class="line">Stage 3 - Candidate: complete spec and initial browser implementations.</span><br><span class="line">Stage 4 - Finished: will be added to the next yearly release.</span><br><span class="line"></span><br><span class="line">摘自文档 https://babeljs.io/docs/plugins/</span><br></pre></td></tr></table></figure><p>大致翻译如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Stage 0 - Strawman（展示阶段）</span><br><span class="line">Stage 1 - Proposal（征求意见阶段）</span><br><span class="line">Stage 2 - Draft（草案阶段）</span><br><span class="line">Stage 3 - Candidate（候选人阶段）</span><br><span class="line">Stage 4 - Finished（定案阶段）</span><br><span class="line">进入 2 阶段，基本上都已经确定要发布了。</span><br><span class="line"></span><br><span class="line">在 2015 年进入 stage4 的叫做 es2015</span><br><span class="line">在 2016 年进入 stage4 的叫做 es2016</span><br><span class="line">以此类推</span><br><span class="line"></span><br><span class="line">作者：Yugo</span><br><span class="line">链接：http://www.jianshu.com/p/41d3f7768095</span><br></pre></td></tr></table></figure></p><h3 id="对象合并"><a href="#对象合并" class="headerlink" title="对象合并"></a>对象合并</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">const a = [1, 2];</span><br><span class="line">const b = [3, 4];</span><br><span class="line">console.log(a.concat(b));</span><br><span class="line">const c = [...a, ...b]; // [1, 2, 3, 4]</span><br><span class="line"></span><br><span class="line">const a1 = &#123; a: 1&#125;;</span><br><span class="line">const b2 = &#123; b: 2&#125;;</span><br><span class="line">console.log(Object.assign(a1, b2));</span><br><span class="line">console.log(&#123; ...a1, ...b2&#125;); // &#123;a: 1, b: 2&#125;</span><br></pre></td></tr></table></figure><h3 id="函数传参"><a href="#函数传参" class="headerlink" title="函数传参"></a>函数传参</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">function fun(...args) &#123;</span><br><span class="line">    console.log(args) //  [1, 2]</span><br><span class="line">&#125;</span><br><span class="line">fun(1, 2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function func2(a, b, c) &#123;</span><br><span class="line">    console.log(a, b, c) // &#123;a: 1&#125; 3 &quot;cc&quot;</span><br><span class="line">&#125;</span><br><span class="line">let rest = [3];</span><br><span class="line">func2(&#123;a: 1&#125;, ...rest, &apos;cc&apos;);</span><br></pre></td></tr></table></figure><h3 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h3><ul><li><a href="http://www.zcfy.cc/article/6-great-uses-of-the-spread-operator-3268.html" target="_blank" rel="noopener">展开运算符的 6 种绝妙用法</a></li><li><a href="http://blog.csdn.net/qq_30100043/article/details/53424750" target="_blank" rel="noopener">http://blog.csdn.net/qq_30100043/article/details/53424750</a></li><li><a href="https://blog.fundebug.com/2017/07/19/master_object_spread_operator/" target="_blank" rel="noopener">ES6之Spread Operater拷贝对象</a></li><li><a href="http://blog.csdn.net/qq_30100043/article/details/53391308" target="_blank" rel="noopener">es6 扩展运算符 三个点（…）</a></li><li><a href="https://sagittarius-rev.gitbooks.io/understanding-ecmascript-6-zh-ver/chapter_4.html" target="_blank" rel="noopener">第四章 扩展的对象功能</a></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>知识点的理解结合具体的项目代码，能快速掌握。不清楚不懂的查漏补缺，just-do-it，对!就是立刻做，这是你知识体系的短板，深挖进去发现会收获很多。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="http://es6.ruanyifeng.com/#docs/destructuring" target="_blank" rel="noopener">http://es6.ruanyifeng.com/#docs/destructuring</a></li><li><a href="https://github.com/thejameskyle/babel-handbook/blob/master/translations/zh-Hans/user-handbook.md" target="_blank" rel="noopener">https://github.com/thejameskyle/babel-handbook/blob/master/translations/zh-Hans/user-handbook.md</a></li><li><a href="https://excaliburhan.com/post/babel-preset-and-plugins.html" target="_blank" rel="noopener">https://excaliburhan.com/post/babel-preset-and-plugins.html</a></li><li><a href="https://segmentfault.com/a/1190000010468759" target="_blank" rel="noopener">https://segmentfault.com/a/1190000010468759</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文对&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;变量的解构赋值(destructing)&lt;/a&gt;和&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Spread_operator&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;展开运算符(spread operator …)&lt;/a&gt;做个简单的介绍。&lt;/p&gt;
&lt;p&gt;本文首发在&lt;a href=&quot;https://huixisheng.github.io/es6-destructuring-and-spread-operator/&quot;&gt;前端开发说&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="ES6" scheme="http://huixisheng.github.io/tags/ES6/"/>
    
  </entry>
  
  <entry>
    <title>npm相关资源整理</title>
    <link href="http://huixisheng.github.io/npm-source/"/>
    <id>http://huixisheng.github.io/npm-source/</id>
    <published>2017-09-19T11:41:35.000Z</published>
    <updated>2017-11-02T01:25:37.912Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>npm（全称Node Package Manager，即node包管理器）是Node.js默认的、以JavaScript编写的软件包管理系统。 - <a href="https://zh.wikipedia.org/wiki/Npm" target="_blank" rel="noopener">来自wikipedia</a></p></blockquote><p>本文首发在<a href="https://cosmeapp.github.io/2017/09/19/npm-source/" target="_blank" rel="noopener">美妆心得技术博客</a>，同步到前端开发者说博客。</p><h2 id="npm镜像"><a href="#npm镜像" class="headerlink" title="npm镜像"></a>npm镜像</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm config set registry &quot;https://registry.npm.taobao.org&quot;</span><br></pre></td></tr></table></figure><p>其他镜像，用于提高安装速度，比如用<code>vue-cli</code>初始化项目。在<code>~/.npmrc</code>中添加如下配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">registry=https://registry.npm.taobao.org/</span><br><span class="line">// https://registry.npmjs.org=true</span><br><span class="line">// https://blog.niceue.com/front-end-development/using-domestic-npm-images.html=true</span><br><span class="line">// http://www.cnblogs.com/huang0925/archive/2013/05/17/3083207.html=true</span><br><span class="line">electron_mirror=https://npm.taobao.org/dist/electron/</span><br><span class="line">sass_binary_site=https://npm.taobao.org/dist/node-sass</span><br><span class="line">phantomjs_cdnurl=https://npm.taobao.org/dist/phantomjs</span><br><span class="line">// https://gist.github.com/52cik/c1de8926e20971f415dd=true</span><br><span class="line">chromedriver_cdnurl=https://npm.taobao.org/dist/chromedriver</span><br><span class="line">disturl=https://npm.taobao.org/dist</span><br><span class="line">operadriver_cdnurl=https://npm.taobao.org/mirrors/operadriver</span><br><span class="line">selenium_cdnurl=https://npm.taobao.org/mirrors/selenium</span><br><span class="line">node_inspector_cdnurl=https://npm.taobao.org/mirrors/node-inspector</span><br><span class="line">// 自定义的npm scope</span><br><span class="line">@x-scaffold:registry=https://registry.npmjs.org/</span><br></pre></td></tr></table></figure><p>关于关于更多的镜像资料，可以参考我之前写的文章<a href="https://huixisheng.github.io/%2Fmirror%2F">国内镜像源整理</a></p><h2 id="npm搜索"><a href="#npm搜索" class="headerlink" title="npm搜索"></a>npm搜索</h2><p><a href="https://libraries.io/npm" target="_blank" rel="noopener">https://libraries.io/npm</a> 相关资源的各种排行榜</p><p><a href="https://npms.io/" target="_blank" rel="noopener">npms</a> A better and open source search for node packages</p><p><a href="https://www.npmjs.com/browse/updated" target="_blank" rel="noopener">recently updated packages</a></p><p><a href="https://unpkg.com/#/" target="_blank" rel="noopener">npm 资源的cdn</a></p><p><a href="https://github.com/anvaka/npmrank/tree/master/sample" target="_blank" rel="noopener">整理的Top100</a></p><p><a href="https://www.npmjs.com/browse/depended" target="_blank" rel="noopener">most depended-upon packages</a></p><p><a href="https://colorlib.com/wp/npm-packages-node-js/" target="_blank" rel="noopener">Top 30 NPM Packages for Node.js Developers 2016</a></p><p><a href="https://www.npmjs.com/browse/depended" target="_blank" rel="noopener">most depended-upon packages</a></p><h2 id="包管理工具"><a href="#包管理工具" class="headerlink" title="包管理工具"></a>包管理工具</h2><p><a href="https://pnpm.js.org/" target="_blank" rel="noopener">pnpm</a> Fast, disk space efficient package manager</p><p><a href="https://npm.taobao.org/" target="_blank" rel="noopener">cnpm</a> 淘宝 NPM 镜像</p><p><a href="https://yarnpkg.com/zh-Hans/" target="_blank" rel="noopener">yarn</a></p><blockquote><p>Yarn 对你的代码来说是一个包管理器， 它允许你使用并分享代码给全世界的开发者， Yarn 做这些快捷、安全、可靠，所以你不用担心什么。</p></blockquote><p>设置国内镜像<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ yarn config set registry https://registry.npm.taobao.org --global</span><br><span class="line">$ yarn config set disturl https://npm.taobao.org/dist --global</span><br></pre></td></tr></table></figure></p><p>这个facebook应该不会加类似React的协议吧？</p><p>会生成一个<code>yarn.lock</code>锁定依赖。</p><p>优点(摘自官网)</p><ul><li>离线模式</li><li>确定性</li><li>网络性能</li><li>相同的软件包</li><li>网络适应</li><li>扁平模式</li></ul><p>例外有看到社区</p><p><a href="https://cnodejs.org/topic/57ff0541487e1e4578afb48d" target="_blank" rel="noopener">「CYarn」使用 cnpm 源的 Yarn</a></p><p><a href="https://github.com/qiu8310/smart-npm/" target="_blank" rel="noopener">smart-npm</a> 在各大社区发布后，就没看到更多了。</p><p><a href="https://zhuanlan.zhihu.com/p/27832595" target="_blank" rel="noopener">npx: npm 5.2.0 内置的包执行器</a></p><p>推荐阅读</p><ul><li><a href="http://geek.csdn.net/news/detail/197339" target="_blank" rel="noopener">一文看懂npm、yarn、pnpm之间的区别</a></li><li><a href="https://zhuanlan.zhihu.com/p/23493436" target="_blank" rel="noopener">Yarn vs npm：你需要知道的一切</a></li><li><a href="https://github.com/pnpm/node-package-manager-benchmark" target="_blank" rel="noopener">更多npm与yarn的性能对比</a></li><li><a href="https://mp.weixin.qq.com/s/9BGiuO-clwe4AAlV9Puqng" target="_blank" rel="noopener">npm 5.0 新版功能特性解析及与 yarn 评测对比</a></li><li><a href="https://www.zhihu.com/question/24414899" target="_blank" rel="noopener">npm、bower、jamjs 等包管理器，哪个比较好用？</a></li><li><a href="https://www.zhihu.com/question/51502849" target="_blank" rel="noopener">如何评价Facebook推出的JavaScript模块管理器yarn？</a></li><li><a href="">在中国，安装 &amp; 升级 npm 依赖的正确方法</a></li></ul><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><ul><li><a href="https://docs.npmjs.com/" target="_blank" rel="noopener">https://docs.npmjs.com/</a></li><li><a href="http://semver.org/lang/zh-CN/" target="_blank" rel="noopener">semver语义化版本 2.0.0</a></li><li><a href="http://www.cnblogs.com/huang0925/archive/2013/05/17/3083207.html" target="_blank" rel="noopener">Npm的配置管理及设置代理</a></li></ul><h2 id="依赖升级"><a href="#依赖升级" class="headerlink" title="依赖升级"></a>依赖升级</h2><p>见 <a href="https://docs.npmjs.com/cli/update" target="_blank" rel="noopener">npm update [-g] [<pkg>…]</pkg></a></p><p><a href="https://www.npmjs.com/package/npm-check-updates" target="_blank" rel="noopener">npm-check-updates</a></p><p><a href="https://github.com/dylang/npm-check" target="_blank" rel="noopener">npm-check</a></p><blockquote><p>Check for outdated, incorrect, and unused dependencies.</p></blockquote><p><img src="/images/npm/npm-check.jpeg" alt=""></p><p>相关的介绍可以参考<a href="https://cnodejs.org/topic/5705cd70c5f5b4a959e9192a" target="_blank" rel="noopener">Node.js开源项目推荐：npm模块升级工具 npm-check</a></p><h3 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h3><ul><li><a href="https://gxnotes.com/article/12726.html" target="_blank" rel="noopener">如何将package.json中的每个依赖关系更新为最新版本？</a></li></ul><h2 id="Node升级"><a href="#Node升级" class="headerlink" title="Node升级"></a>Node升级</h2><h3 id="n"><a href="#n" class="headerlink" title="n"></a><a href="https://github.com/tj/n" target="_blank" rel="noopener">n</a></h3><blockquote><p>Node.js version management: no subshells, no profile setup, no convoluted API, just simple.</p></blockquote><h3 id="nvm"><a href="#nvm" class="headerlink" title="nvm"></a><a href="https://github.com/creationix/nvm" target="_blank" rel="noopener">nvm</a></h3><blockquote><p>Node Version Manager - Simple bash script to manage multiple active node.js versions</p></blockquote><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p><a href="https://github.com/siddharthkp/cost-of-modules" target="_blank" rel="noopener">Cost of modules</a></p><blockquote><p>Find out which of your dependencies is slowing you down</p></blockquote><p><img src="https://raw.githubusercontent.com/siddharthkp/cost-of-modules/master/screenshot.jpg" alt=""></p><p><a href="https://github.com/sindresorhus/awesome-npm" target="_blank" rel="noopener">https://github.com/sindresorhus/awesome-npm</a></p><p><a href="https://juejin.im/post/59256b6f8d6d810058045336" target="_blank" rel="noopener">【译】用8个 npm 技巧打动你的同事</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;npm（全称Node Package Manager，即node包管理器）是Node.js默认的、以JavaScript编写的软件包管理系统。 - &lt;a href=&quot;https://zh.wikipedia.org/wiki/Npm&quot; target
      
    
    </summary>
    
    
      <category term="npm" scheme="http://huixisheng.github.io/tags/npm/"/>
    
      <category term="nodejs" scheme="http://huixisheng.github.io/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>git利用rebase修改历史提交记录</title>
    <link href="http://huixisheng.github.io/git-rebase/"/>
    <id>http://huixisheng.github.io/git-rebase/</id>
    <published>2017-08-27T08:45:15.000Z</published>
    <updated>2017-08-27T10:13:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>有时候在<code>git</code>的操作中相同的功能提交多次。相同<code>git log</code>看着很难受，特别是有代码洁癖的开发者。本文通过实例来说一说<code>rebase</code>命令如何修改<code>git</code>的<code>history</code>。</p><a id="more"></a><p>通过<code>git rebase --help</code>可以查看命令的使用方法，官网文档是最权威的教程。</p><h2 id="git-log查看历史记录"><a href="#git-log查看历史记录" class="headerlink" title="git log查看历史记录"></a><code>git log</code>查看历史记录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">commit ac041371bd1f34a53b0136f6cdec07a1dd746de4</span><br><span class="line">Author: huixisheng &lt;huixisheng@huixishengdeMacBook-Pro.local&gt;</span><br><span class="line">Date:   Sun Aug 27 16:55:06 2017 +0800</span><br><span class="line"></span><br><span class="line">    修改记录4用于测试git rebase</span><br><span class="line"></span><br><span class="line">commit 029f5f0abf5d4f5fbe6871791b026de4599258c6</span><br><span class="line">Author: huixisheng &lt;huixisheng@huixishengdeMacBook-Pro.local&gt;</span><br><span class="line">Date:   Sun Aug 27 16:54:45 2017 +0800</span><br><span class="line"></span><br><span class="line">    修改记录4用于测试git rebase</span><br><span class="line"></span><br><span class="line">commit e0929b7b2f037df666164c19fea82551f54ebce5</span><br><span class="line">Author: huixisheng &lt;huixisheng@huixishengdeMacBook-Pro.local&gt;</span><br><span class="line">Date:   Sun Aug 27 16:53:30 2017 +0800</span><br><span class="line"></span><br><span class="line">    修改记录2用于测试git rebase</span><br><span class="line"></span><br><span class="line">commit 737b13660618a261ae1c72f6f4b9970a14ca9a68</span><br><span class="line">Author: huixisheng &lt;huixisheng@huixishengdeMacBook-Pro.local&gt;</span><br><span class="line">Date:   Sun Aug 27 16:53:08 2017 +0800</span><br><span class="line"></span><br><span class="line">    修改记录1用于测试git rebase</span><br></pre></td></tr></table></figure><p>历史记录存在重复的修改记录，相同的记录需要合并，最近的四次如何合并为一个。</p><h2 id="修改某一次的log记录"><a href="#修改某一次的log记录" class="headerlink" title="修改某一次的log记录"></a>修改某一次的log记录</h2><p><code>git rebase -i HEAD~4</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">pick 737b136 修改记录1用于测试git rebase</span><br><span class="line">pick e0929b7 修改记录2用于测试git rebase</span><br><span class="line">pick 029f5f0 修改记录4用于测试git rebase</span><br><span class="line">pick ac04137 修改记录4用于测试git rebase</span><br><span class="line"></span><br><span class="line"># Rebase 9dcc03c..ac04137 onto 9dcc03c (4 commands)</span><br><span class="line">#</span><br><span class="line"># Commands:</span><br><span class="line"># p, pick = use commit</span><br><span class="line"># r, reword = use commit, but edit the commit message</span><br><span class="line"># e, edit = use commit, but stop for amending</span><br><span class="line"># s, squash = use commit, but meld into previous commit</span><br><span class="line"># f, fixup = like &quot;squash&quot;, but discard this commit&apos;s log message</span><br><span class="line"># x, exec = run command (the rest of the line) using shell</span><br><span class="line"># d, drop = remove commit</span><br><span class="line">#</span><br><span class="line"># These lines can be re-ordered; they are executed from top to bottom.</span><br><span class="line">#</span><br><span class="line"># If you remove a line here THAT COMMIT WILL BE LOST.</span><br><span class="line">#</span><br><span class="line"># However, if you remove everything, the rebase will be aborted.</span><br><span class="line">#</span><br><span class="line"># Note that empty commits are commented out</span><br></pre></td></tr></table></figure><blockquote><p>p, pick 使用这条 commit<br>r, reword 使用这条 commit 但是要修改 commit message<br>e, edit 使用这条 commit 但是要修改 commit messaage // 这里和 reword 使用方法一样, 但 reword 在 :wq 后会直接让你进入修改编辑, edit :wq 后要再使用 git commit –amend 进入修改<br>s, squash 使用这条 commit, 但是要与上一条 commit 合并, 并保留自身 commit message<br>f, fixup 与 squash 一样, 但是舍弃 自身 commit message<br>x, exec 执行命令<br>来自: <a href="http://noyobo.com/2014/04/06/git-rebase-commits.html" target="_blank" rel="noopener">http://noyobo.com/2014/04/06/git-rebase-commits.html</a></p></blockquote><p>修改如下 <strong>可以使用缩写命令</strong>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pick 737b136 修改记录1用于测试git rebase</span><br><span class="line">pick e0929b7 修改记录2用于测试git rebase</span><br><span class="line">edit 029f5f0 修改记录4用于测试git rebase</span><br><span class="line">pick ac04137 修改记录4用于测试git rebase</span><br></pre></td></tr></table></figure><p>提示如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">➜  do git:(git-rebase-test) git rebase -i HEAD~4</span><br><span class="line">Stopped at f83b625... 修改记录3用于测试git rebase</span><br><span class="line">You can amend the commit now, with</span><br><span class="line"></span><br><span class="line">    git commit --amend</span><br><span class="line"></span><br><span class="line">Once you are satisfied with your changes, run</span><br><span class="line"></span><br><span class="line">    git rebase --continue</span><br></pre></td></tr></table></figure><p>使用<code>git commit --amend</code>。修改历史记录，<code>git rebase --continue</code>。于是得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">commit a360c19ef0ad51ed407ff9f2f55c009ffa766441</span><br><span class="line">Author: huixisheng &lt;huixisheng@huixishengdeMacBook-Pro.local&gt;</span><br><span class="line">Date:   Sun Aug 27 16:55:06 2017 +0800</span><br><span class="line"></span><br><span class="line">    修改记录4用于测试git rebase</span><br><span class="line"></span><br><span class="line">commit da93f076239de04e1cf4ade0da069562342c79ff</span><br><span class="line">Author: huixisheng &lt;huixisheng@huixishengdeMacBook-Pro.local&gt;</span><br><span class="line">Date:   Sun Aug 27 16:54:45 2017 +0800</span><br><span class="line"></span><br><span class="line">    修改记录3用于测试git rebase</span><br><span class="line"></span><br><span class="line">commit e0929b7b2f037df666164c19fea82551f54ebce5</span><br><span class="line">Author: huixisheng &lt;huixisheng@huixishengdeMacBook-Pro.local&gt;</span><br><span class="line">Date:   Sun Aug 27 16:53:30 2017 +0800</span><br><span class="line"></span><br><span class="line">    修改记录2用于测试git rebase</span><br><span class="line"></span><br><span class="line">commit 737b13660618a261ae1c72f6f4b9970a14ca9a68</span><br><span class="line">Author: huixisheng &lt;huixisheng@huixishengdeMacBook-Pro.local&gt;</span><br><span class="line">Date:   Sun Aug 27 16:53:08 2017 +0800</span><br><span class="line"></span><br><span class="line">    修改记录1用于测试git rebase</span><br></pre></td></tr></table></figure><h2 id="合并最后4次的提交记录"><a href="#合并最后4次的提交记录" class="headerlink" title="合并最后4次的提交记录"></a>合并最后4次的提交记录</h2><p><code>git rebase -i HEAD~4</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pick 737b136 修改记录1用于测试git rebase</span><br><span class="line">squash e0929b7 修改记录2用于测试git rebase</span><br><span class="line">sqaush da93f07 修改记录3-1用于测试git rebase</span><br><span class="line">squash a360c19 修改记录4用于测试git rebase</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># This is a combination of 4 commits.</span><br><span class="line"># This is the 1st commit message:</span><br><span class="line">合并修改记录1-4用于测试git rebase</span><br><span class="line"></span><br><span class="line"># This is the commit message #2:</span><br><span class="line"></span><br><span class="line"># 修改记录2用于测试git rebase</span><br><span class="line"></span><br><span class="line"># This is the commit message #3:</span><br><span class="line"></span><br><span class="line">#修改记录3-1用于测试git rebase</span><br><span class="line"></span><br><span class="line"># This is the commit message #4:</span><br><span class="line"></span><br><span class="line">#修改记录4用于测试git rebase</span><br></pre></td></tr></table></figure><p>于是得到如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">commit f9064cdf6355268e83365e094939144a000c0a68</span><br><span class="line">Author: huixisheng &lt;huixisheng@huixishengdeMacBook-Pro.local&gt;</span><br><span class="line">Date:   Sun Aug 27 16:53:08 2017 +0800</span><br><span class="line"></span><br><span class="line">    合并修改记录1-4用于测试git rebase</span><br></pre></td></tr></table></figure><h2 id="实战过程碰到的问题"><a href="#实战过程碰到的问题" class="headerlink" title="实战过程碰到的问题"></a>实战过程碰到的问题</h2><p>误操作使用<code>git rebase --abort</code></p><p>合并<code>log</code>后无法<code>push</code>。需要强推<code>-f</code></p><p>log修改为限行提交参考 <a href="https://backlogtool.com/git-tutorial/cn/stepup/stepup2_8.html" target="_blank" rel="noopener">https://backlogtool.com/git-tutorial/cn/stepup/stepup2_8.html</a></p><p>处理过程中会出现冲突，修改冲突后,<code>git rebase --continue</code></p><p><code>git rebase -i HEAd~4</code>出现的log居然是倒序排列的</p><p>多人操作同一分支，强行提交提交，<code>pull</code>下来会出现冲突</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><h3 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h3><ul><li><a href="http://blog.csdn.net/itfootball/article/details/44154121" target="_blank" rel="noopener">http://blog.csdn.net/itfootball/article/details/44154121</a></li><li><a href="https://backlogtool.com/git-tutorial/cn/stepup/stepup1_1.html" target="_blank" rel="noopener">https://backlogtool.com/git-tutorial/cn/stepup/stepup1_1.html</a></li><li><a href="http://www.ruanyifeng.com/blog/2015/08/git-use-process.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2015/08/git-use-process.html</a></li><li><a href="http://noyobo.com/2014/04/06/git-rebase-commits.html" target="_blank" rel="noopener">http://noyobo.com/2014/04/06/git-rebase-commits.html</a></li></ul><h3 id="命令查看的文档"><a href="#命令查看的文档" class="headerlink" title="命令查看的文档"></a>命令查看的文档</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br></pre></td><td class="code"><pre><span class="line">GIT-REBASE(1)                     Git Manual                     GIT-REBASE(1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">NAME</span><br><span class="line">       git-rebase - Reapply commits on top of another base tip</span><br><span class="line"></span><br><span class="line">SYNOPSIS</span><br><span class="line">       git rebase [-i | --interactive] [options] [--exec &lt;cmd&gt;] [--onto &lt;newbase&gt;]</span><br><span class="line">               [&lt;upstream&gt; [&lt;branch&gt;]]</span><br><span class="line">       git rebase [-i | --interactive] [options] [--exec &lt;cmd&gt;] [--onto &lt;newbase&gt;]</span><br><span class="line">               --root [&lt;branch&gt;]</span><br><span class="line">       git rebase --continue | --skip | --abort | --edit-todo</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DESCRIPTION</span><br><span class="line">       If &lt;branch&gt; is specified, git rebase will perform an automatic git</span><br><span class="line">       checkout &lt;branch&gt; before doing anything else. Otherwise it remains on</span><br><span class="line">       the current branch.</span><br><span class="line"></span><br><span class="line">       If &lt;upstream&gt; is not specified, the upstream configured in</span><br><span class="line">       branch.&lt;name&gt;.remote and branch.&lt;name&gt;.merge options will be used (see</span><br><span class="line">       git-config(1) for details) and the --fork-point option is assumed. If</span><br><span class="line">       you are currently not on any branch or if the current branch does not</span><br><span class="line">       have a configured upstream, the rebase will abort.</span><br><span class="line"></span><br><span class="line">       All changes made by commits in the current branch but that are not in</span><br><span class="line">       &lt;upstream&gt; are saved to a temporary area. This is the same set of</span><br><span class="line">       commits that would be shown by git log &lt;upstream&gt;..HEAD; or by git log</span><br><span class="line">       &apos;fork_point&apos;..HEAD, if --fork-point is active (see the description on</span><br><span class="line">       --fork-point below); or by git log HEAD, if the --root option is</span><br><span class="line">       specified.</span><br><span class="line"></span><br><span class="line">       The current branch is reset to &lt;upstream&gt;, or &lt;newbase&gt; if the --onto</span><br><span class="line">       option was supplied. This has the exact same effect as git reset --hard</span><br><span class="line">       &lt;upstream&gt; (or &lt;newbase&gt;). ORIG_HEAD is set to point at the tip of the</span><br><span class="line">       branch before the reset.</span><br><span class="line"></span><br><span class="line">       The commits that were previously saved into the temporary area are then</span><br><span class="line">       reapplied to the current branch, one by one, in order. Note that any</span><br><span class="line">       commits in HEAD which introduce the same textual changes as a commit in</span><br><span class="line">       HEAD..&lt;upstream&gt; are omitted (i.e., a patch already accepted upstream</span><br><span class="line">       with a different commit message or timestamp will be skipped).</span><br><span class="line"></span><br><span class="line">       It is possible that a merge failure will prevent this process from</span><br><span class="line">       being completely automatic. You will have to resolve any such merge</span><br><span class="line">       failure and run git rebase --continue. Another option is to bypass the</span><br><span class="line">       commit that caused the merge failure with git rebase --skip. To check</span><br><span class="line">       out the original &lt;branch&gt; and remove the .git/rebase-apply working</span><br><span class="line">       files, use the command git rebase --abort instead.</span><br><span class="line"></span><br><span class="line">       Assume the following history exists and the current branch is &quot;topic&quot;:</span><br><span class="line"></span><br><span class="line">                     A---B---C topic</span><br><span class="line">                    /</span><br><span class="line">               D---E---F---G master</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       From this point, the result of either of the following commands:</span><br><span class="line"></span><br><span class="line">           git rebase master</span><br><span class="line">           git rebase master topic</span><br><span class="line"></span><br><span class="line">       would be:</span><br><span class="line"></span><br><span class="line">                             A&apos;--B&apos;--C&apos; topic</span><br><span class="line">                            /</span><br><span class="line">               D---E---F---G master</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       NOTE: The latter form is just a short-hand of git checkout topic</span><br><span class="line">       followed by git rebase master. When rebase exits topic will remain the</span><br><span class="line">       checked-out branch.</span><br><span class="line"></span><br><span class="line">       If the upstream branch already contains a change you have made (e.g.,</span><br><span class="line">       because you mailed a patch which was applied upstream), then that</span><br><span class="line">       commit will be skipped. For example, running git rebase master on the</span><br><span class="line">       following history (in which A&apos; and A introduce the same set of changes,</span><br><span class="line">       but have different committer information):</span><br><span class="line"></span><br><span class="line">                     A---B---C topic</span><br><span class="line">                    /</span><br><span class="line">               D---E---A&apos;---F master</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       will result in:</span><br><span class="line"></span><br><span class="line">                              B&apos;---C&apos; topic</span><br><span class="line">                             /</span><br><span class="line">               D---E---A&apos;---F master</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       Here is how you would transplant a topic branch based on one branch to</span><br><span class="line">       another, to pretend that you forked the topic branch from the latter</span><br><span class="line">       branch, using rebase --onto.</span><br><span class="line"></span><br><span class="line">       First let&apos;s assume your topic is based on branch next. For example, a</span><br><span class="line">       feature developed in topic depends on some functionality which is found</span><br><span class="line">       in next.</span><br><span class="line"></span><br><span class="line">               o---o---o---o---o  master</span><br><span class="line">                    \</span><br><span class="line">                     o---o---o---o---o  next</span><br><span class="line">                                      \</span><br><span class="line">                                       o---o---o  topic</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       We want to make topic forked from branch master; for example, because</span><br><span class="line">       the functionality on which topic depends was merged into the more</span><br><span class="line">       stable master branch. We want our tree to look like this:</span><br><span class="line"></span><br><span class="line">               o---o---o---o---o  master</span><br><span class="line">                   |            \</span><br><span class="line">                   |             o&apos;--o&apos;--o&apos;  topic</span><br><span class="line">                    \</span><br><span class="line">                     o---o---o---o---o  next</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       We can get this using the following command:</span><br><span class="line"></span><br><span class="line">           git rebase --onto master next topic</span><br><span class="line"></span><br><span class="line">       Another example of --onto option is to rebase part of a branch. If we</span><br><span class="line">       have the following situation:</span><br><span class="line"></span><br><span class="line">                                       H---I---J topicB</span><br><span class="line">                                      /</span><br><span class="line">                             E---F---G  topicA</span><br><span class="line">                            /</span><br><span class="line">               A---B---C---D  master</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       then the command</span><br><span class="line"></span><br><span class="line">           git rebase --onto master topicA topicB</span><br><span class="line"></span><br><span class="line">       would result in:</span><br><span class="line"></span><br><span class="line">                            H&apos;--I&apos;--J&apos;  topicB</span><br><span class="line">                           /</span><br><span class="line">                           | E---F---G  topicA</span><br><span class="line">                           |/</span><br><span class="line">               A---B---C---D  master</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       This is useful when topicB does not depend on topicA.</span><br><span class="line"></span><br><span class="line">       A range of commits could also be removed with rebase. If we have the</span><br><span class="line">       following situation:</span><br><span class="line"></span><br><span class="line">               E---F---G---H---I---J  topicA</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       then the command</span><br><span class="line"></span><br><span class="line">           git rebase --onto topicA~5 topicA~3 topicA</span><br><span class="line"></span><br><span class="line">       would result in the removal of commits F and G:</span><br><span class="line"></span><br><span class="line">               E---H&apos;---I&apos;---J&apos;  topicA</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       This is useful if F and G were flawed in some way, or should not be</span><br><span class="line">       part of topicA. Note that the argument to --onto and the &lt;upstream&gt;</span><br><span class="line">       parameter can be any valid commit-ish.</span><br><span class="line"></span><br><span class="line">       In case of conflict, git rebase will stop at the first problematic</span><br><span class="line">       commit and leave conflict markers in the tree. You can use git diff to</span><br><span class="line">       locate the markers (&lt;&lt;&lt;&lt;&lt;&lt;) and make edits to resolve the conflict. For</span><br><span class="line">       each file you edit, you need to tell Git that the conflict has been</span><br><span class="line">       resolved, typically this would be done with</span><br><span class="line"></span><br><span class="line">           git add &lt;filename&gt;</span><br><span class="line"></span><br><span class="line">       After resolving the conflict manually and updating the index with the</span><br><span class="line">       desired resolution, you can continue the rebasing process with</span><br><span class="line"></span><br><span class="line">           git rebase --continue</span><br><span class="line"></span><br><span class="line">       Alternatively, you can undo the git rebase with</span><br><span class="line"></span><br><span class="line">           git rebase --abort</span><br><span class="line"></span><br><span class="line">CONFIGURATION</span><br><span class="line">       rebase.stat</span><br><span class="line">           Whether to show a diffstat of what changed upstream since the last</span><br><span class="line">           rebase. False by default.</span><br><span class="line"></span><br><span class="line">       rebase.autoSquash</span><br><span class="line">           If set to true enable --autosquash option by default.</span><br><span class="line"></span><br><span class="line">       rebase.autoStash</span><br><span class="line">           If set to true enable --autostash option by default.</span><br><span class="line"></span><br><span class="line">       rebase.missingCommitsCheck</span><br><span class="line">           If set to &quot;warn&quot;, print warnings about removed commits in</span><br><span class="line">           interactive mode. If set to &quot;error&quot;, print the warnings and stop</span><br><span class="line">           the rebase. If set to &quot;ignore&quot;, no checking is done. &quot;ignore&quot; by</span><br><span class="line">           default.</span><br><span class="line"></span><br><span class="line">       rebase.instructionFormat</span><br><span class="line">           Custom commit list format to use during an --interactive rebase.</span><br><span class="line"></span><br><span class="line">OPTIONS</span><br><span class="line">       --onto &lt;newbase&gt;</span><br><span class="line">           Starting point at which to create the new commits. If the --onto</span><br><span class="line">           option is not specified, the starting point is &lt;upstream&gt;. May be</span><br><span class="line">           any valid commit, and not just an existing branch name.</span><br><span class="line"></span><br><span class="line">           As a special case, you may use &quot;A...B&quot; as a shortcut for the merge</span><br><span class="line">           base of A and B if there is exactly one merge base. You can leave</span><br><span class="line">           out at most one of A and B, in which case it defaults to HEAD.</span><br><span class="line"></span><br><span class="line">       &lt;upstream&gt;</span><br><span class="line">           Upstream branch to compare against. May be any valid commit, not</span><br><span class="line">           just an existing branch name. Defaults to the configured upstream</span><br><span class="line">           for the current branch.</span><br><span class="line"></span><br><span class="line">       &lt;branch&gt;</span><br><span class="line">           Working branch; defaults to HEAD.</span><br><span class="line"></span><br><span class="line">       --continue</span><br><span class="line">           Restart the rebasing process after having resolved a merge</span><br><span class="line">           conflict.</span><br><span class="line"></span><br><span class="line">       --abort</span><br><span class="line">           Abort the rebase operation and reset HEAD to the original branch.</span><br><span class="line">           If &lt;branch&gt; was provided when the rebase operation was started,</span><br><span class="line">           then HEAD will be reset to &lt;branch&gt;. Otherwise HEAD will be reset</span><br><span class="line">           to where it was when the rebase operation was started.</span><br><span class="line"></span><br><span class="line">       --keep-empty</span><br><span class="line">           Keep the commits that do not change anything from its parents in</span><br><span class="line">           the result.</span><br><span class="line"></span><br><span class="line">       --skip</span><br><span class="line">           Restart the rebasing process by skipping the current patch.</span><br><span class="line"></span><br><span class="line">       --edit-todo</span><br><span class="line">           Edit the todo list during an interactive rebase.</span><br><span class="line"></span><br><span class="line">       -m, --merge</span><br><span class="line">           Use merging strategies to rebase. When the recursive (default)</span><br><span class="line">           merge strategy is used, this allows rebase to be aware of renames</span><br><span class="line">           on the upstream side.</span><br><span class="line"></span><br><span class="line">           Note that a rebase merge works by replaying each commit from the</span><br><span class="line">           working branch on top of the &lt;upstream&gt; branch. Because of this,</span><br><span class="line">           when a merge conflict happens, the side reported as ours is the</span><br><span class="line">           so-far rebased series, starting with &lt;upstream&gt;, and theirs is the</span><br><span class="line">           working branch. In other words, the sides are swapped.</span><br><span class="line"></span><br><span class="line">       -s &lt;strategy&gt;, --strategy=&lt;strategy&gt;</span><br><span class="line">           Use the given merge strategy. If there is no -s option git</span><br><span class="line">           merge-recursive is used instead. This implies --merge.</span><br><span class="line"></span><br><span class="line">           Because git rebase replays each commit from the working branch on</span><br><span class="line">           top of the &lt;upstream&gt; branch using the given strategy, using the</span><br><span class="line">           ours strategy simply discards all patches from the &lt;branch&gt;, which</span><br><span class="line">           makes little sense.</span><br><span class="line"></span><br><span class="line">       -X &lt;strategy-option&gt;, --strategy-option=&lt;strategy-option&gt;</span><br><span class="line">           Pass the &lt;strategy-option&gt; through to the merge strategy. This</span><br><span class="line">           implies --merge and, if no strategy has been specified, -s</span><br><span class="line">           recursive. Note the reversal of ours and theirs as noted above for</span><br><span class="line">           the -m option.</span><br><span class="line"></span><br><span class="line">       -S[&lt;keyid&gt;], --gpg-sign[=&lt;keyid&gt;]</span><br><span class="line">           GPG-sign commits. The keyid argument is optional and defaults to</span><br><span class="line">           the committer identity; if specified, it must be stuck to the</span><br><span class="line">           option without a space.</span><br><span class="line"></span><br><span class="line">       -q, --quiet</span><br><span class="line">           Be quiet. Implies --no-stat.</span><br><span class="line"></span><br><span class="line">       -v, --verbose</span><br><span class="line">           Be verbose. Implies --stat.</span><br><span class="line"></span><br><span class="line">       --stat</span><br><span class="line">           Show a diffstat of what changed upstream since the last rebase. The</span><br><span class="line">           diffstat is also controlled by the configuration option</span><br><span class="line">           rebase.stat.</span><br><span class="line"></span><br><span class="line">       -n, --no-stat</span><br><span class="line">           Do not show a diffstat as part of the rebase process.</span><br><span class="line"></span><br><span class="line">       --no-verify</span><br><span class="line">           This option bypasses the pre-rebase hook. See also githooks(5).</span><br><span class="line"></span><br><span class="line">       --verify</span><br><span class="line">           Allows the pre-rebase hook to run, which is the default. This</span><br><span class="line">           option can be used to override --no-verify. See also githooks(5).</span><br><span class="line"></span><br><span class="line">       -C&lt;n&gt;</span><br><span class="line">           Ensure at least &lt;n&gt; lines of surrounding context match before and</span><br><span class="line">           after each change. When fewer lines of surrounding context exist</span><br><span class="line">           they all must match. By default no context is ever ignored.</span><br><span class="line"></span><br><span class="line">       -f, --force-rebase</span><br><span class="line">           Force a rebase even if the current branch is up-to-date and the</span><br><span class="line">           command without --force would return without doing anything.</span><br><span class="line"></span><br><span class="line">           You may find this (or --no-ff with an interactive rebase) helpful</span><br><span class="line">           after reverting a topic branch merge, as this option recreates the</span><br><span class="line">           topic branch with fresh commits so it can be remerged successfully</span><br><span class="line">           without needing to &quot;revert the reversion&quot; (see the</span><br><span class="line">           revert-a-faulty-merge How-To[1] for details).</span><br><span class="line"></span><br><span class="line">       --fork-point, --no-fork-point</span><br><span class="line">           Use reflog to find a better common ancestor between &lt;upstream&gt; and</span><br><span class="line">           &lt;branch&gt; when calculating which commits have been introduced by</span><br><span class="line">           &lt;branch&gt;.</span><br><span class="line"></span><br><span class="line">           When --fork-point is active, fork_point will be used instead of</span><br><span class="line">           &lt;upstream&gt; to calculate the set of commits to rebase, where</span><br><span class="line">           fork_point is the result of git merge-base --fork-point &lt;upstream&gt;</span><br><span class="line">           &lt;branch&gt; command (see git-merge-base(1)). If fork_point ends up</span><br><span class="line">           being empty, the &lt;upstream&gt; will be used as a fallback.</span><br><span class="line"></span><br><span class="line">           If either &lt;upstream&gt; or --root is given on the command line, then</span><br><span class="line">           the default is --no-fork-point, otherwise the default is</span><br><span class="line">           --fork-point.</span><br><span class="line"></span><br><span class="line">       --ignore-whitespace, --whitespace=&lt;option&gt;</span><br><span class="line">           These flag are passed to the git apply program (see git-apply(1))</span><br><span class="line">           that applies the patch. Incompatible with the --interactive option.</span><br><span class="line"></span><br><span class="line">       --committer-date-is-author-date, --ignore-date</span><br><span class="line">           These flags are passed to git am to easily change the dates of the</span><br><span class="line">           rebased commits (see git-am(1)). Incompatible with the</span><br><span class="line">           --interactive option.</span><br><span class="line"></span><br><span class="line">       -i, --interactive</span><br><span class="line">           Make a list of the commits which are about to be rebased. Let the</span><br><span class="line">           user edit that list before rebasing. This mode can also be used to</span><br><span class="line">           split commits (see SPLITTING COMMITS below).</span><br><span class="line"></span><br><span class="line">           The commit list format can be changed by setting the configuration</span><br><span class="line">           option rebase.instructionFormat. A customized instruction format</span><br><span class="line">           will automatically have the long commit hash prepended to the</span><br><span class="line">           format.</span><br><span class="line"></span><br><span class="line">       -p, --preserve-merges</span><br><span class="line">           Recreate merge commits instead of flattening the history by</span><br><span class="line">           replaying commits a merge commit introduces. Merge conflict</span><br><span class="line">           resolutions or manual amendments to merge commits are not</span><br><span class="line">           preserved.</span><br><span class="line"></span><br><span class="line">           This uses the --interactive machinery internally, but combining it</span><br><span class="line">           with the --interactive option explicitly is generally not a good</span><br><span class="line">           idea unless you know what you are doing (see BUGS below).</span><br><span class="line"></span><br><span class="line">       -x &lt;cmd&gt;, --exec &lt;cmd&gt;</span><br><span class="line">           Append &quot;exec &lt;cmd&gt;&quot; after each line creating a commit in the final</span><br><span class="line">           history. &lt;cmd&gt; will be interpreted as one or more shell commands.</span><br><span class="line"></span><br><span class="line">           You may execute several commands by either using one instance of</span><br><span class="line">           --exec with several commands:</span><br><span class="line"></span><br><span class="line">               git rebase -i --exec &quot;cmd1 &amp;&amp; cmd2 &amp;&amp; ...&quot;</span><br><span class="line"></span><br><span class="line">           or by giving more than one --exec:</span><br><span class="line"></span><br><span class="line">               git rebase -i --exec &quot;cmd1&quot; --exec &quot;cmd2&quot; --exec ...</span><br><span class="line"></span><br><span class="line">           If --autosquash is used, &quot;exec&quot; lines will not be appended for the</span><br><span class="line">           intermediate commits, and will only appear at the end of each</span><br><span class="line">           squash/fixup series.</span><br><span class="line"></span><br><span class="line">           This uses the --interactive machinery internally, but it can be run</span><br><span class="line">           without an explicit --interactive.</span><br><span class="line"></span><br><span class="line">       --root</span><br><span class="line">           Rebase all commits reachable from &lt;branch&gt;, instead of limiting</span><br><span class="line">           them with an &lt;upstream&gt;. This allows you to rebase the root</span><br><span class="line">           commit(s) on a branch. When used with --onto, it will skip changes</span><br><span class="line">           already contained in &lt;newbase&gt; (instead of &lt;upstream&gt;) whereas</span><br><span class="line">           without --onto it will operate on every change. When used together</span><br><span class="line">           with both --onto and --preserve-merges, all root commits will be</span><br><span class="line">           rewritten to have &lt;newbase&gt; as parent instead.</span><br><span class="line"></span><br><span class="line">       --autosquash, --no-autosquash</span><br><span class="line">           When the commit log message begins with &quot;squash! ...&quot; (or &quot;fixup!</span><br><span class="line">           ...&quot;), and there is a commit whose title begins with the same ...,</span><br><span class="line">           automatically modify the todo list of rebase -i so that the commit</span><br><span class="line">           marked for squashing comes right after the commit to be modified,</span><br><span class="line">           and change the action of the moved commit from pick to squash (or</span><br><span class="line">           fixup). Ignores subsequent &quot;fixup! &quot; or &quot;squash! &quot; after the first,</span><br><span class="line">           in case you referred to an earlier fixup/squash with git commit</span><br><span class="line">           --fixup/--squash.</span><br><span class="line"></span><br><span class="line">           This option is only valid when the --interactive option is used.</span><br><span class="line"></span><br><span class="line">           If the --autosquash option is enabled by default using the</span><br><span class="line">           configuration variable rebase.autoSquash, this option can be used</span><br><span class="line">           to override and disable this setting.</span><br><span class="line"></span><br><span class="line">       --autostash, --no-autostash</span><br><span class="line">           Automatically create a temporary stash before the operation begins,</span><br><span class="line">           and apply it after the operation ends. This means that you can run</span><br><span class="line">           rebase on a dirty worktree. However, use with care: the final stash</span><br><span class="line">           application after a successful rebase might result in non-trivial</span><br><span class="line">           conflicts.</span><br><span class="line"></span><br><span class="line">       --no-ff</span><br><span class="line">           With --interactive, cherry-pick all rebased commits instead of</span><br><span class="line">           fast-forwarding over the unchanged ones. This ensures that the</span><br><span class="line">           entire history of the rebased branch is composed of new commits.</span><br><span class="line"></span><br><span class="line">           Without --interactive, this is a synonym for --force-rebase.</span><br><span class="line"></span><br><span class="line">           You may find this helpful after reverting a topic branch merge, as</span><br><span class="line">           this option recreates the topic branch with fresh commits so it can</span><br><span class="line">           be remerged successfully without needing to &quot;revert the reversion&quot;</span><br><span class="line">           (see the revert-a-faulty-merge How-To[1] for details).</span><br><span class="line"></span><br><span class="line">MERGE STRATEGIES</span><br><span class="line">       The merge mechanism (git merge and git pull commands) allows the</span><br><span class="line">       backend merge strategies to be chosen with -s option. Some strategies</span><br><span class="line">       can also take their own options, which can be passed by giving</span><br><span class="line">       -X&lt;option&gt; arguments to git merge and/or git pull.</span><br><span class="line"></span><br><span class="line">       resolve</span><br><span class="line">           This can only resolve two heads (i.e. the current branch and</span><br><span class="line">           another branch you pulled from) using a 3-way merge algorithm. It</span><br><span class="line">           tries to carefully detect criss-cross merge ambiguities and is</span><br><span class="line">           considered generally safe and fast.</span><br><span class="line"></span><br><span class="line">       recursive</span><br><span class="line">           This can only resolve two heads using a 3-way merge algorithm. When</span><br><span class="line">           there is more than one common ancestor that can be used for 3-way</span><br><span class="line">           merge, it creates a merged tree of the common ancestors and uses</span><br><span class="line">           that as the reference tree for the 3-way merge. This has been</span><br><span class="line">           reported to result in fewer merge conflicts without causing</span><br><span class="line">           mismerges by tests done on actual merge commits taken from Linux</span><br><span class="line">           2.6 kernel development history. Additionally this can detect and</span><br><span class="line">           handle merges involving renames. This is the default merge strategy</span><br><span class="line">           when pulling or merging one branch.</span><br><span class="line"></span><br><span class="line">           The recursive strategy can take the following options:</span><br><span class="line"></span><br><span class="line">           ours</span><br><span class="line">               This option forces conflicting hunks to be auto-resolved</span><br><span class="line">               cleanly by favoring our version. Changes from the other tree</span><br><span class="line">               that do not conflict with our side are reflected to the merge</span><br><span class="line">               result. For a binary file, the entire contents are taken from</span><br><span class="line">               our side.</span><br><span class="line"></span><br><span class="line">               This should not be confused with the ours merge strategy, which</span><br><span class="line">               does not even look at what the other tree contains at all. It</span><br><span class="line">               discards everything the other tree did, declaring our history</span><br><span class="line">               contains all that happened in it.</span><br><span class="line"></span><br><span class="line">           theirs</span><br><span class="line">               This is the opposite of ours.</span><br><span class="line"></span><br><span class="line">           patience</span><br><span class="line">               With this option, merge-recursive spends a little extra time to</span><br><span class="line">               avoid mismerges that sometimes occur due to unimportant</span><br><span class="line">               matching lines (e.g., braces from distinct functions). Use this</span><br><span class="line">               when the branches to be merged have diverged wildly. See also</span><br><span class="line">               git-diff(1)--patience.</span><br><span class="line"></span><br><span class="line">           diff-algorithm=[patience|minimal|histogram|myers]</span><br><span class="line">               Tells merge-recursive to use a different diff algorithm, which</span><br><span class="line">               can help avoid mismerges that occur due to unimportant matching</span><br><span class="line">               lines (such as braces from distinct functions). See also git-</span><br><span class="line">               diff(1)--diff-algorithm.</span><br><span class="line"></span><br><span class="line">           ignore-space-change, ignore-all-space, ignore-space-at-eol</span><br><span class="line">               Treats lines with the indicated type of whitespace change as</span><br><span class="line">               unchanged for the sake of a three-way merge. Whitespace changes</span><br><span class="line">               mixed with other changes to a line are not ignored. See also</span><br><span class="line">               git-diff(1)-b, -w, and --ignore-space-at-eol.</span><br><span class="line"></span><br><span class="line">               o   If their version only introduces whitespace changes to a</span><br><span class="line">                   line, our version is used;</span><br><span class="line"></span><br><span class="line">               o   If our version introduces whitespace changes but their</span><br><span class="line">                   version includes a substantial change, their version is</span><br><span class="line">                   used;</span><br><span class="line"></span><br><span class="line">               o   Otherwise, the merge proceeds in the usual way.</span><br><span class="line"></span><br><span class="line">           renormalize</span><br><span class="line">               This runs a virtual check-out and check-in of all three stages</span><br><span class="line">               of a file when resolving a three-way merge. This option is</span><br><span class="line">               meant to be used when merging branches with different clean</span><br><span class="line">               filters or end-of-line normalization rules. See &quot;Merging</span><br><span class="line">               branches with differing checkin/checkout attributes&quot; in</span><br><span class="line">               gitattributes(5) for details.</span><br><span class="line"></span><br><span class="line">           no-renormalize</span><br><span class="line">               Disables the renormalize option. This overrides the</span><br><span class="line">               merge.renormalize configuration variable.</span><br><span class="line"></span><br><span class="line">           no-renames</span><br><span class="line">               Turn off rename detection. See also git-diff(1)--no-renames.</span><br><span class="line"></span><br><span class="line">           find-renames[=&lt;n&gt;]</span><br><span class="line">               Turn on rename detection, optionally setting the similarity</span><br><span class="line">               threshold. This is the default. See also git-</span><br><span class="line">               diff(1)--find-renames.</span><br><span class="line"></span><br><span class="line">           rename-threshold=&lt;n&gt;</span><br><span class="line">               Deprecated synonym for find-renames=&lt;n&gt;.</span><br><span class="line"></span><br><span class="line">           subtree[=&lt;path&gt;]</span><br><span class="line">               This option is a more advanced form of subtree strategy, where</span><br><span class="line">               the strategy makes a guess on how two trees must be shifted to</span><br><span class="line">               match with each other when merging. Instead, the specified path</span><br><span class="line">               is prefixed (or stripped from the beginning) to make the shape</span><br><span class="line">               of two trees to match.</span><br><span class="line"></span><br><span class="line">       octopus</span><br><span class="line">           This resolves cases with more than two heads, but refuses to do a</span><br><span class="line">           complex merge that needs manual resolution. It is primarily meant</span><br><span class="line">           to be used for bundling topic branch heads together. This is the</span><br><span class="line">           default merge strategy when pulling or merging more than one</span><br><span class="line">           branch.</span><br><span class="line"></span><br><span class="line">       ours</span><br><span class="line">           This resolves any number of heads, but the resulting tree of the</span><br><span class="line">           merge is always that of the current branch head, effectively</span><br><span class="line">           ignoring all changes from all other branches. It is meant to be</span><br><span class="line">           used to supersede old development history of side branches. Note</span><br><span class="line">           that this is different from the -Xours option to the recursive</span><br><span class="line">           merge strategy.</span><br><span class="line"></span><br><span class="line">       subtree</span><br><span class="line">           This is a modified recursive strategy. When merging trees A and B,</span><br><span class="line">           if B corresponds to a subtree of A, B is first adjusted to match</span><br><span class="line">           the tree structure of A, instead of reading the trees at the same</span><br><span class="line">           level. This adjustment is also done to the common ancestor tree.</span><br><span class="line"></span><br><span class="line">       With the strategies that use 3-way merge (including the default,</span><br><span class="line">       recursive), if a change is made on both branches, but later reverted on</span><br><span class="line">       one of the branches, that change will be present in the merged result;</span><br><span class="line">       some people find this behavior confusing. It occurs because only the</span><br><span class="line">       heads and the merge base are considered when performing a merge, not</span><br><span class="line">       the individual commits. The merge algorithm therefore considers the</span><br><span class="line">       reverted change as no change at all, and substitutes the changed</span><br><span class="line">       version instead.</span><br><span class="line"></span><br><span class="line">NOTES</span><br><span class="line">       You should understand the implications of using git rebase on a</span><br><span class="line">       repository that you share. See also RECOVERING FROM UPSTREAM REBASE</span><br><span class="line">       below.</span><br><span class="line"></span><br><span class="line">       When the git-rebase command is run, it will first execute a</span><br><span class="line">       &quot;pre-rebase&quot; hook if one exists. You can use this hook to do sanity</span><br><span class="line">       checks and reject the rebase if it isn&apos;t appropriate. Please see the</span><br><span class="line">       template pre-rebase hook script for an example.</span><br><span class="line"></span><br><span class="line">       Upon completion, &lt;branch&gt; will be the current branch.</span><br><span class="line"></span><br><span class="line">INTERACTIVE MODE</span><br><span class="line">       Rebasing interactively means that you have a chance to edit the commits</span><br><span class="line">       which are rebased. You can reorder the commits, and you can remove them</span><br><span class="line">       (weeding out bad or otherwise unwanted patches).</span><br><span class="line"></span><br><span class="line">       The interactive mode is meant for this type of workflow:</span><br><span class="line"></span><br><span class="line">        1. have a wonderful idea</span><br><span class="line"></span><br><span class="line">        2. hack on the code</span><br><span class="line"></span><br><span class="line">        3. prepare a series for submission</span><br><span class="line"></span><br><span class="line">        4. submit</span><br><span class="line"></span><br><span class="line">       where point 2. consists of several instances of</span><br><span class="line"></span><br><span class="line">       a) regular use</span><br><span class="line"></span><br><span class="line">        1. finish something worthy of a commit</span><br><span class="line"></span><br><span class="line">        2. commit</span><br><span class="line"></span><br><span class="line">       b) independent fixup</span><br><span class="line"></span><br><span class="line">        1. realize that something does not work</span><br><span class="line"></span><br><span class="line">        2. fix that</span><br><span class="line"></span><br><span class="line">        3. commit it</span><br><span class="line"></span><br><span class="line">       Sometimes the thing fixed in b.2. cannot be amended to the not-quite</span><br><span class="line">       perfect commit it fixes, because that commit is buried deeply in a</span><br><span class="line">       patch series. That is exactly what interactive rebase is for: use it</span><br><span class="line">       after plenty of &quot;a&quot;s and &quot;b&quot;s, by rearranging and editing commits, and</span><br><span class="line">       squashing multiple commits into one.</span><br><span class="line"></span><br><span class="line">       Start it with the last commit you want to retain as-is:</span><br><span class="line"></span><br><span class="line">           git rebase -i &lt;after-this-commit&gt;</span><br><span class="line"></span><br><span class="line">       An editor will be fired up with all the commits in your current branch</span><br><span class="line">       (ignoring merge commits), which come after the given commit. You can</span><br><span class="line">       reorder the commits in this list to your heart&apos;s content, and you can</span><br><span class="line">       remove them. The list looks more or less like this:</span><br><span class="line"></span><br><span class="line">           pick deadbee The oneline of this commit</span><br><span class="line">           pick fa1afe1 The oneline of the next commit</span><br><span class="line">           ...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       The oneline descriptions are purely for your pleasure; git rebase will</span><br><span class="line">       not look at them but at the commit names (&quot;deadbee&quot; and &quot;fa1afe1&quot; in</span><br><span class="line">       this example), so do not delete or edit the names.</span><br><span class="line"></span><br><span class="line">       By replacing the command &quot;pick&quot; with the command &quot;edit&quot;, you can tell</span><br><span class="line">       git rebase to stop after applying that commit, so that you can edit the</span><br><span class="line">       files and/or the commit message, amend the commit, and continue</span><br><span class="line">       rebasing.</span><br><span class="line"></span><br><span class="line">       If you just want to edit the commit message for a commit, replace the</span><br><span class="line">       command &quot;pick&quot; with the command &quot;reword&quot;.</span><br><span class="line"></span><br><span class="line">       To drop a commit, replace the command &quot;pick&quot; with &quot;drop&quot;, or just</span><br><span class="line">       delete the matching line.</span><br><span class="line"></span><br><span class="line">       If you want to fold two or more commits into one, replace the command</span><br><span class="line">       &quot;pick&quot; for the second and subsequent commits with &quot;squash&quot; or &quot;fixup&quot;.</span><br><span class="line">       If the commits had different authors, the folded commit will be</span><br><span class="line">       attributed to the author of the first commit. The suggested commit</span><br><span class="line">       message for the folded commit is the concatenation of the commit</span><br><span class="line">       messages of the first commit and of those with the &quot;squash&quot; command,</span><br><span class="line">       but omits the commit messages of commits with the &quot;fixup&quot; command.</span><br><span class="line"></span><br><span class="line">       git rebase will stop when &quot;pick&quot; has been replaced with &quot;edit&quot; or when</span><br><span class="line">       a command fails due to merge errors. When you are done editing and/or</span><br><span class="line">       resolving conflicts you can continue with git rebase --continue.</span><br><span class="line"></span><br><span class="line">       For example, if you want to reorder the last 5 commits, such that what</span><br><span class="line">       was HEAD~4 becomes the new HEAD. To achieve that, you would call git</span><br><span class="line">       rebase like this:</span><br><span class="line"></span><br><span class="line">           $ git rebase -i HEAD~5</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       And move the first patch to the end of the list.</span><br><span class="line"></span><br><span class="line">       You might want to preserve merges, if you have a history like this:</span><br><span class="line"></span><br><span class="line">                      X</span><br><span class="line">                       \</span><br><span class="line">                    A---M---B</span><br><span class="line">                   /</span><br><span class="line">           ---o---O---P---Q</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       Suppose you want to rebase the side branch starting at &quot;A&quot; to &quot;Q&quot;. Make</span><br><span class="line">       sure that the current HEAD is &quot;B&quot;, and call</span><br><span class="line"></span><br><span class="line">           $ git rebase -i -p --onto Q O</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       Reordering and editing commits usually creates untested intermediate</span><br><span class="line">       steps. You may want to check that your history editing did not break</span><br><span class="line">       anything by running a test, or at least recompiling at intermediate</span><br><span class="line">       points in history by using the &quot;exec&quot; command (shortcut &quot;x&quot;). You may</span><br><span class="line">       do so by creating a todo list like this one:</span><br><span class="line"></span><br><span class="line">           pick deadbee Implement feature XXX</span><br><span class="line">           fixup f1a5c00 Fix to feature XXX</span><br><span class="line">           exec make</span><br><span class="line">           pick c0ffeee The oneline of the next commit</span><br><span class="line">           edit deadbab The oneline of the commit after</span><br><span class="line">           exec cd subdir; make test</span><br><span class="line">           ...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       The interactive rebase will stop when a command fails (i.e. exits with</span><br><span class="line">       non-0 status) to give you an opportunity to fix the problem. You can</span><br><span class="line">       continue with git rebase --continue.</span><br><span class="line"></span><br><span class="line">       The &quot;exec&quot; command launches the command in a shell (the one specified</span><br><span class="line">       in $SHELL, or the default shell if $SHELL is not set), so you can use</span><br><span class="line">       shell features (like &quot;cd&quot;, &quot;&gt;&quot;, &quot;;&quot; ...). The command is run from the</span><br><span class="line">       root of the working tree.</span><br><span class="line"></span><br><span class="line">           $ git rebase -i --exec &quot;make test&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       This command lets you check that intermediate commits are compilable.</span><br><span class="line">       The todo list becomes like that:</span><br><span class="line"></span><br><span class="line">           pick 5928aea one</span><br><span class="line">           exec make test</span><br><span class="line">           pick 04d0fda two</span><br><span class="line">           exec make test</span><br><span class="line">           pick ba46169 three</span><br><span class="line">           exec make test</span><br><span class="line">           pick f4593f9 four</span><br><span class="line">           exec make test</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SPLITTING COMMITS</span><br><span class="line">       In interactive mode, you can mark commits with the action &quot;edit&quot;.</span><br><span class="line">       However, this does not necessarily mean that git rebase expects the</span><br><span class="line">       result of this edit to be exactly one commit. Indeed, you can undo the</span><br><span class="line">       commit, or you can add other commits. This can be used to split a</span><br><span class="line">       commit into two:</span><br><span class="line"></span><br><span class="line">       o   Start an interactive rebase with git rebase -i &lt;commit&gt;^, where</span><br><span class="line">           &lt;commit&gt; is the commit you want to split. In fact, any commit range</span><br><span class="line">           will do, as long as it contains that commit.</span><br><span class="line"></span><br><span class="line">       o   Mark the commit you want to split with the action &quot;edit&quot;.</span><br><span class="line"></span><br><span class="line">       o   When it comes to editing that commit, execute git reset HEAD^. The</span><br><span class="line">           effect is that the HEAD is rewound by one, and the index follows</span><br><span class="line">           suit. However, the working tree stays the same.</span><br><span class="line"></span><br><span class="line">       o   Now add the changes to the index that you want to have in the first</span><br><span class="line">           commit. You can use git add (possibly interactively) or git gui (or</span><br><span class="line">           both) to do that.</span><br><span class="line"></span><br><span class="line">       o   Commit the now-current index with whatever commit message is</span><br><span class="line">           appropriate now.</span><br><span class="line"></span><br><span class="line">       o   Repeat the last two steps until your working tree is clean.</span><br><span class="line"></span><br><span class="line">       o   Continue the rebase with git rebase --continue.</span><br><span class="line"></span><br><span class="line">       If you are not absolutely sure that the intermediate revisions are</span><br><span class="line">       consistent (they compile, pass the testsuite, etc.) you should use git</span><br><span class="line">       stash to stash away the not-yet-committed changes after each commit,</span><br><span class="line">       test, and amend the commit if fixes are necessary.</span><br><span class="line"></span><br><span class="line">RECOVERING FROM UPSTREAM REBASE</span><br><span class="line">       Rebasing (or any other form of rewriting) a branch that others have</span><br><span class="line">       based work on is a bad idea: anyone downstream of it is forced to</span><br><span class="line">       manually fix their history. This section explains how to do the fix</span><br><span class="line">       from the downstream&apos;s point of view. The real fix, however, would be to</span><br><span class="line">       avoid rebasing the upstream in the first place.</span><br><span class="line"></span><br><span class="line">       To illustrate, suppose you are in a situation where someone develops a</span><br><span class="line">       subsystem branch, and you are working on a topic that is dependent on</span><br><span class="line">       this subsystem. You might end up with a history like the following:</span><br><span class="line"></span><br><span class="line">               o---o---o---o---o---o---o---o---o  master</span><br><span class="line">                    \</span><br><span class="line">                     o---o---o---o---o  subsystem</span><br><span class="line">                                      \</span><br><span class="line">                                       *---*---*  topic</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       If subsystem is rebased against master, the following happens:</span><br><span class="line"></span><br><span class="line">               o---o---o---o---o---o---o---o  master</span><br><span class="line">                    \                       \</span><br><span class="line">                     o---o---o---o---o       o&apos;--o&apos;--o&apos;--o&apos;--o&apos;  subsystem</span><br><span class="line">                                      \</span><br><span class="line">                                       *---*---*  topic</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       If you now continue development as usual, and eventually merge topic to</span><br><span class="line">       subsystem, the commits from subsystem will remain duplicated forever:</span><br><span class="line"></span><br><span class="line">               o---o---o---o---o---o---o---o  master</span><br><span class="line">                    \                       \</span><br><span class="line">                     o---o---o---o---o       o&apos;--o&apos;--o&apos;--o&apos;--o&apos;--M  subsystem</span><br><span class="line">                                      \                         /</span><br><span class="line">                                       *---*---*-..........-*--*  topic</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       Such duplicates are generally frowned upon because they clutter up</span><br><span class="line">       history, making it harder to follow. To clean things up, you need to</span><br><span class="line">       transplant the commits on topic to the new subsystem tip, i.e., rebase</span><br><span class="line">       topic. This becomes a ripple effect: anyone downstream from topic is</span><br><span class="line">       forced to rebase too, and so on!</span><br><span class="line"></span><br><span class="line">       There are two kinds of fixes, discussed in the following subsections:</span><br><span class="line"></span><br><span class="line">       Easy case: The changes are literally the same.</span><br><span class="line">           This happens if the subsystem rebase was a simple rebase and had no</span><br><span class="line">           conflicts.</span><br><span class="line"></span><br><span class="line">       Hard case: The changes are not the same.</span><br><span class="line">           This happens if the subsystem rebase had conflicts, or used</span><br><span class="line">           --interactive to omit, edit, squash, or fixup commits; or if the</span><br><span class="line">           upstream used one of commit --amend, reset, or filter-branch.</span><br><span class="line"></span><br><span class="line">   The easy case</span><br><span class="line">       Only works if the changes (patch IDs based on the diff contents) on</span><br><span class="line">       subsystem are literally the same before and after the rebase subsystem</span><br><span class="line">       did.</span><br><span class="line"></span><br><span class="line">       In that case, the fix is easy because git rebase knows to skip changes</span><br><span class="line">       that are already present in the new upstream. So if you say (assuming</span><br><span class="line">       you&apos;re on topic)</span><br><span class="line"></span><br><span class="line">               $ git rebase subsystem</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       you will end up with the fixed history</span><br><span class="line"></span><br><span class="line">               o---o---o---o---o---o---o---o  master</span><br><span class="line">                                            \</span><br><span class="line">                                             o&apos;--o&apos;--o&apos;--o&apos;--o&apos;  subsystem</span><br><span class="line">                                                              \</span><br><span class="line">                                                               *---*---*  topic</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   The hard case</span><br><span class="line">       Things get more complicated if the subsystem changes do not exactly</span><br><span class="line">       correspond to the ones before the rebase.</span><br><span class="line"></span><br><span class="line">           Note</span><br><span class="line">           While an &quot;easy case recovery&quot; sometimes appears to be successful</span><br><span class="line">           even in the hard case, it may have unintended consequences. For</span><br><span class="line">           example, a commit that was removed via git rebase --interactive</span><br><span class="line">           will be resurrected!</span><br><span class="line"></span><br><span class="line">       The idea is to manually tell git rebase &quot;where the old subsystem ended</span><br><span class="line">       and your topic began&quot;, that is, what the old merge-base between them</span><br><span class="line">       was. You will have to find a way to name the last commit of the old</span><br><span class="line">       subsystem, for example:</span><br><span class="line"></span><br><span class="line">       o   With the subsystem reflog: after git fetch, the old tip of</span><br><span class="line">           subsystem is at subsystem@&#123;1&#125;. Subsequent fetches will increase the</span><br><span class="line">           number. (See git-reflog(1).)</span><br><span class="line"></span><br><span class="line">       o   Relative to the tip of topic: knowing that your topic has three</span><br><span class="line">           commits, the old tip of subsystem must be topic~3.</span><br><span class="line"></span><br><span class="line">       You can then transplant the old subsystem..topic to the new tip by</span><br><span class="line">       saying (for the reflog case, and assuming you are on topic already):</span><br><span class="line"></span><br><span class="line">               $ git rebase --onto subsystem subsystem@&#123;1&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       The ripple effect of a &quot;hard case&quot; recovery is especially bad: everyone</span><br><span class="line">       downstream from topic will now have to perform a &quot;hard case&quot; recovery</span><br><span class="line">       too!</span><br><span class="line"></span><br><span class="line">BUGS</span><br><span class="line">       The todo list presented by --preserve-merges --interactive does not</span><br><span class="line">       represent the topology of the revision graph. Editing commits and</span><br><span class="line">       rewording their commit messages should work fine, but attempts to</span><br><span class="line">       reorder commits tend to produce counterintuitive results.</span><br><span class="line"></span><br><span class="line">       For example, an attempt to rearrange</span><br><span class="line"></span><br><span class="line">           1 --- 2 --- 3 --- 4 --- 5</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       to</span><br><span class="line"></span><br><span class="line">           1 --- 2 --- 4 --- 3 --- 5</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       by moving the &quot;pick 4&quot; line will result in the following history:</span><br><span class="line"></span><br><span class="line">                   3</span><br><span class="line">                  /</span><br><span class="line">           1 --- 2 --- 4 --- 5</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GIT</span><br><span class="line">       Part of the git(1) suite</span><br><span class="line"></span><br><span class="line">NOTES</span><br><span class="line">        1. revert-a-faulty-merge How-To</span><br><span class="line">           git-htmldocs/howto/revert-a-faulty-merge.html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Git 2.10.0                        09/02/2016                     GIT-REBASE(1)</span><br><span class="line">(END)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有时候在&lt;code&gt;git&lt;/code&gt;的操作中相同的功能提交多次。相同&lt;code&gt;git log&lt;/code&gt;看着很难受，特别是有代码洁癖的开发者。本文通过实例来说一说&lt;code&gt;rebase&lt;/code&gt;命令如何修改&lt;code&gt;git&lt;/code&gt;的&lt;code&gt;history&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
    
      <category term="git" scheme="http://huixisheng.github.io/tags/git/"/>
    
      <category term="rebase" scheme="http://huixisheng.github.io/tags/rebase/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript如何遍历Object</title>
    <link href="http://huixisheng.github.io/object-loop/"/>
    <id>http://huixisheng.github.io/object-loop/</id>
    <published>2017-06-03T13:50:56.000Z</published>
    <updated>2017-06-04T05:36:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>遍历对象的方法:</p><ol><li>for … in</li><li>Object.getOwnPropertyNames</li><li>Object.keys</li><li>for … of ES6</li><li>Object.values ES7</li><li>Object.entries ES7</li></ol><h2 id="for-…-in"><a href="#for-…-in" class="headerlink" title="for … in"></a><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/for...in" target="_blank" rel="noopener">for … in</a></h2><blockquote><p>for…in 循环只遍历可枚举属性。像 Array 和 Object 使用内置构造函数所创建的对象都会继承自 Object.prototype 和 String.prototype 的不可枚举属性，例如 String 的 indexOf()  方法或者 Object 的 toString 方法。循环将迭代对象的所有可枚举属性和从它的构造函数的 prototype 继承而来的（包括被覆盖的内建属性）。<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/for...in#描述" target="_blank" rel="noopener">来自MDN</a></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">let  o = &#123;</span><br><span class="line">    &apos;name&apos;: &apos;huixisheng&apos;,</span><br><span class="line">    &apos;mail&apos;:  &apos;huixisheng@gmial.com&apos;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">for(let i in o) &#123;</span><br><span class="line">    console.log(&apos;%s: %s&apos;, i, o[i]);</span><br><span class="line">    // name: huixisheng</span><br><span class="line">    // mail: huixisheng@gmial.com</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>仅迭代自身的属性<br>如果你只要考虑对象本身的属性，而不是它的原型，那么使用 getOwnPropertyNames() 或执行  hasOwnProperty() 来确定某属性是否是对象本身的属性 (也能使用propertyIsEnumerable)。另外，如果你知道外部不存在任何的干扰代码，你可以扩展内置原型与检查方法。 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/for...in#仅迭代自身的属性" target="_blank" rel="noopener">来自MDN</a></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">let  o = &#123;</span><br><span class="line">  &apos;name&apos;: &apos;huixisheng&apos;,</span><br><span class="line">  &apos;mail&apos;: &apos;huixisheng@gmial.com&apos;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function Person() &#123;</span><br><span class="line">  this.city = &apos;hangzhou&apos;;</span><br><span class="line">&#125;</span><br><span class="line">Person.prototype = o;</span><br><span class="line"></span><br><span class="line">const objPerson = new Person();</span><br><span class="line"></span><br><span class="line">for (let prop in objPerson) &#123;</span><br><span class="line">  // propertyIsEnumerable 返回一个布尔值，表明指定的属性名是否是当前对象可枚举的自身属性。</span><br><span class="line">  if (objPerson.hasOwnProperty(prop)) &#123;</span><br><span class="line">    // objPerson.city: hangzhou</span><br><span class="line">    // 原型链上的属性不会显示</span><br><span class="line">    console.log(&apos;objPerson.%s: %s&apos;, prop, objPerson[prop]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">for(let prop1 in objPerson)&#123;</span><br><span class="line">  console.log(&apos;objPerson.%s: %s&apos;, prop1, objPerson[prop1]);</span><br><span class="line">&#125;</span><br><span class="line">//objPerson.city: hangzhou</span><br><span class="line">//objPerson.name: huixisheng</span><br><span class="line">//objPerson.mail: huixisheng@gmial.com</span><br></pre></td></tr></table></figure><h2 id="Object-getOwnPropertyNames"><a href="#Object-getOwnPropertyNames" class="headerlink" title="Object.getOwnPropertyNames()"></a><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames" target="_blank" rel="noopener">Object.getOwnPropertyNames()</a></h2><blockquote><p>object.getOwnPropertyNames 返回一个数组，该数组对元素是 obj 自身拥有的枚举或不可枚举属性名称字符串。 数组中枚举属性的顺序与通过 for…in 循环（或 Object.keys）迭代该对象属性时一致。 数组中不可枚举属性的顺序未定义。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//不可枚举属性</span><br><span class="line">var my_obj = Object.create(&#123;&#125;, &#123;</span><br><span class="line">  getFoo: &#123;</span><br><span class="line">    value: function() &#123; return this.foo; &#125;,</span><br><span class="line">    enumerable: false</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">my_obj.foo = 1;</span><br><span class="line"></span><br><span class="line">console.log(Object.getOwnPropertyNames(my_obj).sort()); // [&quot;foo&quot;, &quot;getFoo&quot;]</span><br><span class="line">console.log(Object.keys(my_obj)); // [ &apos;foo&apos; ]</span><br><span class="line">for (var i in my_obj) &#123;</span><br><span class="line">  console.log(i, my_obj[i]); // foo 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">let  o = &#123;</span><br><span class="line">  &apos;name&apos;: &apos;huixisheng&apos;,</span><br><span class="line">  &apos;mail&apos;: &apos;huixisheng@gmial.com&apos;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">console.log(Object.getOwnPropertyNames(o)); // [ &apos;name&apos;, &apos;mail&apos; ]</span><br><span class="line">console.log(Object.getOwnPropertyNames(Object).join(&apos;,&apos;)); // length,name,arguments,caller,prototype,assign,create,freeze,getOwnPropertyDescriptor,getOwnPropertyNames,getOwnPropertySymbols,is,isExtensible,isFrozen,isSealed,keys,preventExtensions,seal,defineProperty,defineProperties,getPrototypeOf,setPrototypeOf</span><br><span class="line">console.log(Object.getOwnPropertyNames(Array).join(&apos;,&apos;)); // length,name,arguments,caller,prototype,isArray,from,of</span><br><span class="line">console.log(Object.getOwnPropertyNames(Function).join(&apos;,&apos;)); // length,name,arguments,caller,prototype</span><br><span class="line">console.log(Object.getOwnPropertyNames(Map).join(&apos;,&apos;)); // length,name,arguments,caller,prototype</span><br></pre></td></tr></table></figure><h2 id="for-…-of"><a href="#for-…-of" class="headerlink" title="for … of"></a><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/for...of" target="_blank" rel="noopener">for … of</a></h2><blockquote><p>for…of语句在<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/iterable" target="_blank" rel="noopener">可迭代对象</a>(包括 Array, Map, Set, String, TypedArray，arguments 对象等等)上创建一个迭代循环，对每个不同属性的属性值,调用一个自定义的有执行语句的迭代挂钩.</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">let iterable = new Map([[&quot;a&quot;, 1], [&quot;b&quot;, 2], [&quot;c&quot;, 3]]);</span><br><span class="line"></span><br><span class="line">for (let entry of iterable) &#123;</span><br><span class="line">  console.log(entry);</span><br><span class="line">&#125;</span><br><span class="line">// [a, 1]</span><br><span class="line">// [b, 2]</span><br><span class="line">// [c, 3]</span><br><span class="line"></span><br><span class="line">for (let [key, value] of iterable) &#123;</span><br><span class="line">  console.log(value);</span><br><span class="line">&#125;</span><br><span class="line">// 1</span><br><span class="line">// 2</span><br><span class="line">// 3</span><br></pre></td></tr></table></figure><h2 id="Object-values-ES7"><a href="#Object-values-ES7" class="headerlink" title="Object.values() ES7"></a><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/values" target="_blank" rel="noopener">Object.values() ES7</a></h2><blockquote><p>Object.values() 方法返回一个给定对象自己的所有可枚举属性值的数组，值的顺序与使用for…in循环的顺序相同 ( 区别在于for-in循环枚举原型链中的属性 )。<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/values#描述" target="_blank" rel="noopener">来自MDN</a></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">let  o = &#123;</span><br><span class="line">  &apos;name&apos;: &apos;huixisheng&apos;,</span><br><span class="line">  &apos;mail&apos;: &apos;huixisheng@gmial.com&apos;</span><br><span class="line">&#125;;</span><br><span class="line">Object.values(o); // [&apos;huixisheng&apos;, &apos;huixisheng@gmial.com&apos;]</span><br></pre></td></tr></table></figure><p>兼容性:</p><ul><li><a href="http://node.green/#ES2017-features-Object-static-methods-Object-values" target="_blank" rel="noopener">http://node.green/#ES2017-features-Object-static-methods-Object-values</a></li><li><a href="http://kangax.github.io/compat-table/es2016plus/#test-Object_static_methods" target="_blank" rel="noopener">http://kangax.github.io/compat-table/es2016plus/#test-Object_static_methods</a></li><li><a href="http://www.webbrowsercompatibility.com/" target="_blank" rel="noopener">http://www.webbrowsercompatibility.com/</a></li></ul><p>Polyfill :</p><ul><li><a href="https://github.com/es-shims/Object.values/blob/18562676e8aa606a47116753c323dd28619dea50/implementation.js" target="_blank" rel="noopener">shims/Object.values  </a></li><li><a href="https://github.com/tc39/proposal-object-values-entries/blob/master/polyfill.js" target="_blank" rel="noopener">tc39/proposal-object-values-entries</a></li></ul><h2 id="Object-entries-ES7"><a href="#Object-entries-ES7" class="headerlink" title="Object.entries  ES7"></a><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/entries" target="_blank" rel="noopener">Object.entries  ES7</a></h2><p>兼容性</p><ul><li><a href="http://node.green/#ES2017-features-Object-static-methods-Object-entries" target="_blank" rel="noopener">http://node.green/#ES2017-features-Object-static-methods-Object-entries</a></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">let  o = &#123;</span><br><span class="line">  &apos;name&apos;: &apos;huixisheng&apos;,</span><br><span class="line">  &apos;mail&apos;: &apos;huixisheng@gmial.com&apos;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">for(let [key, value] of Object.entries(o)) &#123;</span><br><span class="line">  console.log(key, value);</span><br><span class="line">&#125;</span><br><span class="line">// name huixisheng</span><br><span class="line">// mail huixisheng@gmial.com</span><br></pre></td></tr></table></figure><h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><ol><li><a href="https://segmentfault.com/q/1010000004580095" target="_blank" rel="noopener">Object.keys()与 for…in 遍历对象，输出的结果为什么是顺序的</a></li><li><a href="http://www.cnblogs.com/ZSG-DoBestMe/p/5279045.html" target="_blank" rel="noopener">ES6之6种遍历对象属性的方法</a></li><li><a href="https://www.w3cplus.com/javascript/how-do-i-enumerate-the-properties-of-a-javascript-object.html" target="_blank" rel="noopener">JavaScript学习笔记：对象属性的枚举</a></li><li><a href="http://huangtengfei.com/2015/03/the-standard-library-of-javascript/" target="_blank" rel="noopener">JavaScript 学习系列二：Object 对象</a></li><li><a href="https://juejin.im/entry/586a418e61ff4b006bc6a0de" target="_blank" rel="noopener">Object 对象和 Array 对象</a></li><li><a href="http://yanhaijing.com/javascript/2015/05/09/diff-between-keys-getOwnPropertyNames-forin/" target="_blank" rel="noopener">详解forin，Object.keys和Object.getOwnPropertyNames的区别</a></li><li><a href="https://imququ.com/post/set-map-weakmap-in-es6.html" target="_blank" rel="noopener">ES6 中的 Set、Map 和 WeakMap</a></li><li><a href="http://yanhaijing.com/javascript/2015/05/08/member-of-object/" target="_blank" rel="noopener">http://yanhaijing.com/javascript/2015/05/08/member-of-object/</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;遍历对象的方法:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;for … in&lt;/li&gt;
&lt;li&gt;Object.getOwnPropertyNames&lt;/li&gt;
&lt;li&gt;Object.keys&lt;/li&gt;
&lt;li&gt;for … of ES6&lt;/li&gt;
&lt;li&gt;Object.values ES7&lt;
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://huixisheng.github.io/tags/JavaScript/"/>
    
      <category term="Object" scheme="http://huixisheng.github.io/tags/Object/"/>
    
  </entry>
  
  <entry>
    <title>mac相关技巧整理</title>
    <link href="http://huixisheng.github.io/mac-skill/"/>
    <id>http://huixisheng.github.io/mac-skill/</id>
    <published>2017-05-30T12:00:05.000Z</published>
    <updated>2017-05-30T14:21:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>整理工作中容易遗忘的小技巧和碰到的问题。</p><h2 id="屏幕共享"><a href="#屏幕共享" class="headerlink" title="屏幕共享"></a>屏幕共享</h2><p>打开 系统偏好设置 -&gt; 共享 -&gt; 屏幕共享。在另外的电脑打开 Finder -&gt; 前往 -&gt; 连接服务器 -&gt; 输入 <code>vnc://ip</code> 访问。或者<code>⌘+K</code></p><p>相关的远程控制s软件<a href="https://www.splashtop.com/" target="_blank" rel="noopener">splashtop</a>，<a href="https://www.teamviewer.com/zhCN/?pid=google.tv.teamviewer_exact_tv12.s.cn&amp;gclid=CjwKEAjwsLTJBRCvibaW9bGLtUESJAC4wKw1SIUYoaX5pTKGqwkFSR1I9L_kaccieEqLupNb_WIQ-hoCFp_w_wcB" target="_blank" rel="noopener">teamviewer</a></p><h2 id="找回Sierra允许”任何来源”的应用"><a href="#找回Sierra允许”任何来源”的应用" class="headerlink" title="找回Sierra允许”任何来源”的应用"></a>找回Sierra允许”任何来源”的应用</h2><p><code>sudo spctl --master-disable</code></p><h2 id="屏幕截图"><a href="#屏幕截图" class="headerlink" title="屏幕截图"></a>屏幕截图</h2><p><code>Command＋shift＋3</code> 全屏截图，保存截图到桌面<br><code>Command＋shift＋4</code> 鼠标选定区域截图，保存截图到桌面</p><p>相关的扩展阅读:</p><ul><li><a href="http://irising.me/2011/11/12135/" target="_blank" rel="noopener">你所不知道的Mac截图的强大</a></li><li><a href="https://www.zhihu.com/question/19550327" target="_blank" rel="noopener">OS X 系统自带的截图快捷键有哪些？</a></li></ul><h2 id="如何重置-Mac-上的-NVRAM"><a href="#如何重置-Mac-上的-NVRAM" class="headerlink" title="如何重置 Mac 上的 NVRAM"></a>如何重置 Mac 上的 NVRAM</h2><p>Option + Command + P + R + Power</p><ul><li><a href="https://support.apple.com/zh-cn/HT204063" target="_blank" rel="noopener">https://support.apple.com/zh-cn/HT204063</a></li><li><a href="https://www.zhihu.com/question/20401972" target="_blank" rel="noopener">https://www.zhihu.com/question/20401972</a></li></ul><h2 id="Apache"><a href="#Apache" class="headerlink" title="Apache"></a>Apache</h2><p>查看是否开启<code>apache</code>服务 <code>ps aux | grep httpd</code> 或者 <code>apachectl status</code></p><p>开启Apache<code>sudo apachectl start</code></p><p>相关的设置目录 <code>/etc/apache2/</code></p><p>扩展阅读</p><ul><li><a href="https://www.zhihu.com/question/20916296" target="_blank" rel="noopener">Mac OS X Lion 如何删除自带的 apache php？</a></li><li><a href="http://www.jianshu.com/p/d006a34a343f" target="_blank" rel="noopener">Mac OS X 启用 Web 服务器</a></li></ul><h2 id="如何查看对于窗口的程序"><a href="#如何查看对于窗口的程序" class="headerlink" title="如何查看对于窗口的程序"></a>如何查看对于窗口的程序</h2><p><code>sudo lsof -iTCP:80 | grep LISTEN</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">➜  apache2 sudo lsof -iTCP:80 | grep LISTEN</span><br><span class="line">httpd     48016       root    4u  IPv6 0x89923b92a98a82b9      0t0  TCP *:http (LISTEN)</span><br><span class="line">httpd     48040       _www    4u  IPv6 0x89923b92a98a82b9      0t0  TCP *:http (LISTEN)</span><br><span class="line">httpd     48506       _www    4u  IPv6 0x89923b92a98a82b9      0t0  TCP *:http (LISTEN)</span><br><span class="line">httpd     48507       _www    4u  IPv6 0x89923b92a98a82b9      0t0  TCP *:http (LISTEN)</span><br><span class="line">httpd     48508       _www    4u  IPv6 0x89923b92a98a82b9      0t0  TCP *:http (LISTEN)</span><br></pre></td></tr></table></figure><p><code>sudo lsof -n -i4TCP:80 | grep LISTEN</code></p><p>查看当前所有监听的端口以及对应的Command和PID</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">➜  apache2 sudo  lsof -nP -iTCP -sTCP:LISTEN</span><br><span class="line">COMMAND     PID       USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME</span><br><span class="line">java         76 huixisheng  160u  IPv6 0x89923b92a98a8d39      0t0  TCP *:9999 (LISTEN)</span><br><span class="line">java         76 huixisheng  431u  IPv6 0x89923b92b82f0d39      0t0  TCP *:49493 (LISTEN)</span><br><span class="line">Dash       5123 huixisheng   18u  IPv4 0x89923b92b1000c41      0t0  TCP *:50621 (LISTEN)</span><br><span class="line">Dash       5123 huixisheng   21u  IPv6 0x89923b92a98a87f9      0t0  TCP *:50621 (LISTEN)</span><br><span class="line">Shadowsoc  7093 huixisheng    4u  IPv4 0x89923b92aa812159      0t0  TCP *:8090 (LISTEN)</span><br><span class="line">Shadowsoc  7093 huixisheng    7u  IPv4 0x89923b92a3c75c41      0t0  TCP 127.0.0.1:1080 (LISTEN)</span><br><span class="line">phpstorm  10310 huixisheng  143u  IPv4 0x89923b92af530159      0t0  TCP 127.0.0.1:6942 (LISTEN)</span><br><span class="line">phpstorm  10310 huixisheng  336u  IPv4 0x89923b92a60cd349      0t0  TCP 127.0.0.1:63342 (LISTEN)</span><br><span class="line">plugin_ho 12471 huixisheng   37u  IPv4 0x89923b92aaa35a51      0t0  TCP 127.0.0.1:54000 (LISTEN)</span><br><span class="line">�\x9c\x89 24465 huixisheng   12u  IPv4 0x89923b92b5a30159      0t0  TCP *:32445 (LISTEN)</span><br><span class="line">httpd     48016       root    4u  IPv6 0x89923b92a98a82b9      0t0  TCP *:80 (LISTEN)</span><br><span class="line">httpd     48040       _www    4u  IPv6 0x89923b92a98a82b9      0t0  TCP *:80 (LISTEN)</span><br><span class="line">httpd     48506       _www    4u  IPv6 0x89923b92a98a82b9      0t0  TCP *:80 (LISTEN)</span><br><span class="line">httpd     48507       _www    4u  IPv6 0x89923b92a98a82b9      0t0  TCP *:80 (LISTEN)</span><br><span class="line">httpd     48508       _www    4u  IPv6 0x89923b92a98a82b9      0t0  TCP *:80 (LISTEN)</span><br></pre></td></tr></table></figure><h2 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">➜  desktop brew install nginx</span><br><span class="line">Docroot is: /usr/local/var/www</span><br><span class="line"></span><br><span class="line">The default port has been set in /usr/local/etc/nginx/nginx.conf to 8080 so that</span><br><span class="line">nginx can run without sudo.</span><br><span class="line"></span><br><span class="line">nginx will load all files in /usr/local/etc/nginx/servers/.</span><br><span class="line"></span><br><span class="line">To have launchd start nginx now and restart at login:</span><br><span class="line">  brew services start nginx</span><br><span class="line">Or, if you don&apos;t want/need a background service you can just run:</span><br><span class="line">  nginx</span><br><span class="line">==&gt; Summary</span><br><span class="line">🍺  /usr/local/Cellar/nginx/1.12.0_1: 23 files, 1MB</span><br><span class="line">➜  desktop which nginx</span><br><span class="line">/usr/local/bin/nginx</span><br><span class="line">➜  desktop sudo brew services start nginx</span><br></pre></td></tr></table></figure><blockquote><p>不过试了一下，不是超级用户登陆，而是普通用户登陆，并且监听的端口在1024以下的（例如把默认的8080端口改为了80端口），nginx 开机是启动不了。因此，要 nginx 开机启动的话，需要给予它管理员权限：<br>sudo chown root:wheel /usr/local/Cellar/nginx/1.2.6/sbin/nginx<br>sudo chmod u+s /usr/local/Cellar/nginx/1.2.6/sbin/nginx</p></blockquote><p>来自: <a href="http://dhq.me/mac-install-nginx-mysql-php-fpm" target="_blank" rel="noopener">http://dhq.me/mac-install-nginx-mysql-php-fpm</a></p><h2 id="相关资源"><a href="#相关资源" class="headerlink" title="相关资源"></a>相关资源</h2><ul><li><a href="http://www.ifanr.com/481651" target="_blank" rel="noopener">让 Mac 变成神兵利器的软件清单</a></li><li><a href="http://frankorz.com/2016/10/21/new-time-tracking-app-on-macOS/" target="_blank" rel="noopener">macOS 上的时间跟踪软件</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;整理工作中容易遗忘的小技巧和碰到的问题。&lt;/p&gt;
&lt;h2 id=&quot;屏幕共享&quot;&gt;&lt;a href=&quot;#屏幕共享&quot; class=&quot;headerlink&quot; title=&quot;屏幕共享&quot;&gt;&lt;/a&gt;屏幕共享&lt;/h2&gt;&lt;p&gt;打开 系统偏好设置 -&amp;gt; 共享 -&amp;gt; 屏幕共享。在另外的
      
    
    </summary>
    
    
      <category term="MacOSX" scheme="http://huixisheng.github.io/tags/MacOSX/"/>
    
  </entry>
  
  <entry>
    <title>vue @input事件</title>
    <link href="http://huixisheng.github.io/vue-input/"/>
    <id>http://huixisheng.github.io/vue-input/</id>
    <published>2017-05-27T15:30:32.000Z</published>
    <updated>2018-03-14T01:17:16.944Z</updated>
    
    <content type="html"><![CDATA[<p>今天有同事过来问我，给<code>el-input</code> 加了<code>@input</code>参数<code>$event</code>变成了<code>input</code>变化后的值(v-model)。大致伪代码如下:</p><iframe scrolling="no" width="100%" height="300" src="//jsfiddle.net/k5uf5fa0/embedded/js,resources,html,css,result/light" frameborder="0" allowfullscreen></iframe><p>对于<code>@input</code>的印象是:</p><p>Vue2.x去除了<code>.sync</code>,需要双向绑定就用到了<code>@input</code> <code>.sync</code>在<a href="https://github.com/vuejs/vue/releases/tag/v2.3.0" target="_blank" rel="noopener">2.3.0又回来了</a></p><blockquote><p>所以要让组件的 v-model 生效，它必须：<br>接受一个 value 属性<br>在有新的 value 时触发 input 事件</p></blockquote><p>于是去看下<code>el-input</code><a href="https://github.com/ElemeFE/element/blob/d3bf30b48c66649e659c29df80844daa7992f1d9/packages/input/src/input.vue#L35-L49" target="_blank" rel="noopener">源码</a>，截取的伪代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;input ref=&quot;input&quot; @input=&quot;handleInput&quot;&gt;</span><br><span class="line"></span><br><span class="line">methods: &#123;</span><br><span class="line">  handleInput(event) &#123;</span><br><span class="line">    const value = event.target.value;</span><br><span class="line">    this.$emit(&apos;input&apos;, value);</span><br><span class="line">    this.setCurrentValue(value);</span><br><span class="line">    this.$emit(&apos;change&apos;, value);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以理解<code>$event</code>为<code>v-model</code>没有问题，可是<code>handlerInput($event, index) {</code> 第一反应index的值应该没有才对。于是去<a href="https://github.com/vuejs/vue/blob/dev/dist/vue.js" target="_blank" rel="noopener">Vue的源码</a>找答案，Vue的源码并不是晦涩难懂，相反而是通俗易懂，当然精髓的代码还没有完全参透。接下来要抽段时间好好品味一番。@TODO</p><p>打了断点，大致明白了点，不会像一开始那么迷茫。</p><p><img src="/images/vue/@input1.jpeg" alt=""></p><h2 id="input事件"><a href="#input事件" class="headerlink" title="input事件"></a>input事件</h2><p>参阅了下资料:</p><blockquote><p>当 <code>&lt;input&gt;</code> 或 <code>&lt;textarea&gt;</code> 元素的值更改时，DOM input 事件会同步触发。(对于 type = checkbox 或 type = radio 的输入元素，当用户单击控件时，输入事件不会触发，因为value属性不会更改。) 此外，当内容更改时，它会在 contenteditable 的编辑器上触发。在这种情况下，事件目标是编辑主机元素。如果有两个或多个具有 contenteditable 的元素为真，“编辑主机”是其父级不可编辑的最近的祖先元素。同样，它也会在  designMode 编辑器的根元素上触发。</p></blockquote><p>来自: <a href="https://developer.mozilla.org/zh-CN/docs/Web/Events/input" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/Events/input</a></p><blockquote><p>最后需要注意的是：oninput 和 onpropertychange 这两个事件在 IE9 中都有个小BUG，那就是通过右键菜单菜单中的剪切和删除命令删除内容的时候不会触发，而 IE 其他版本都是正常的，目前还没有很好的解决方案。不过 oninput &amp; onpropertychange 仍然是监听输入框值变化的最佳方案，如果大家有更好的方法，欢迎参与讨论。</p></blockquote><p>来自: <a href="http://www.cnblogs.com/lhb25/archive/2012/11/30/oninput-and-onpropertychange-event-for-input.html" target="_blank" rel="noopener">http://www.cnblogs.com/lhb25/archive/2012/11/30/oninput-and-onpropertychange-event-for-input.html</a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://github.com/ElemeFE/element/blob/d3bf30b48c66649e659c29df80844daa7992f1d9/packages/input/src/input.vue" target="_blank" rel="noopener">https://github.com/ElemeFE/element/blob/d3bf30b48c66649e659c29df80844daa7992f1d9/packages/input/src/input.vue</a></li><li><a href="https://github.com/tiimgreen/github-cheat-sheet/blob/master/README.zh-cn.md#%E6%95%B4%E8%A1%8C%E9%AB%98%E4%BA%AE" target="_blank" rel="noopener">https://github.com/tiimgreen/github-cheat-sheet/blob/master/README.zh-cn.md#%E6%95%B4%E8%A1%8C%E9%AB%98%E4%BA%AE</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/Events/input" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/Events/input</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天有同事过来问我，给&lt;code&gt;el-input&lt;/code&gt; 加了&lt;code&gt;@input&lt;/code&gt;参数&lt;code&gt;$event&lt;/code&gt;变成了&lt;code&gt;input&lt;/code&gt;变化后的值(v-model)。大致伪代码如下:&lt;/p&gt;
&lt;iframe scrol
      
    
    </summary>
    
    
      <category term="Vue" scheme="http://huixisheng.github.io/tags/Vue/"/>
    
      <category term="Event" scheme="http://huixisheng.github.io/tags/Event/"/>
    
      <category term="input" scheme="http://huixisheng.github.io/tags/input/"/>
    
  </entry>
  
  <entry>
    <title>MacOSX安装多版本php</title>
    <link href="http://huixisheng.github.io/MacOSX-php/"/>
    <id>http://huixisheng.github.io/MacOSX-php/</id>
    <published>2017-05-26T13:22:26.000Z</published>
    <updated>2018-03-27T12:52:49.074Z</updated>
    
    <content type="html"><![CDATA[<p>由于lavarel的环境homestead升级成了7.x,导致在外面跑<code>composer update</code>会报错，很麻烦，于是需要升级系统自带php的版本。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">➜  bin /usr/bin/php -v</span><br><span class="line">PHP 5.6.30 (cli) (built: Feb  7 2017 16:06:52)</span><br><span class="line">Copyright (c) 1997-2016 The PHP Group</span><br><span class="line">Zend Engine v2.6.0, Copyright (c) 1998-2016 Zend Technologies</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 添加brew的php源</span><br><span class="line">brew tap homebrew/php</span><br><span class="line">brew tap homebrew/dupes</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 安装php71</span><br><span class="line">brew install php71</span><br><span class="line">brew link php71</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">➜  huixisheng.github.com git:(dev) ✗ php -v</span><br><span class="line">PHP 7.1.5 (cli) (built: May 13 2017 13:30:32) ( NTS )</span><br><span class="line">Copyright (c) 1997-2017 The PHP Group</span><br><span class="line">Zend Engine v3.1.0, Copyright (c) 1998-2017 Zend Technologies</span><br></pre></td></tr></table></figure><h2 id="缺少mongodb的扩展报错"><a href="#缺少mongodb的扩展报错" class="headerlink" title="缺少mongodb的扩展报错"></a>缺少mongodb的扩展报错</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Problem 1</span><br><span class="line">  - jenssegers/mongodb v3.2.2 requires mongodb/mongodb ^1.0.0 -&gt; satisfiable by mongodb/mongodb[1.1.2, 1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.1.0, 1.1.1].</span><br><span class="line">  - jenssegers/mongodb v3.2.0 requires mongodb/mongodb ^1.0.0 -&gt; satisfiable by mongodb/mongodb[1.1.2, 1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.1.0, 1.1.1].</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew search mongodb</span><br><span class="line">brew install php71-mongodb</span><br></pre></td></tr></table></figure><p>居然不用手动配置<code>php.ini</code></p><h2 id="删除MaxOSX自带的php"><a href="#删除MaxOSX自带的php" class="headerlink" title="删除MaxOSX自带的php"></a>删除MaxOSX自带的php</h2><blockquote><p>Mac默认安装了较低版本的php，删除之，统一使用brew管理</p></blockquote><h1 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h1><p>$ php -v<br>PHP 5.6.25 (cli) (built: Sep 19 2016 15:45:41)<br>Copyright (c) 1997-2016 The PHP Group<br>Zend Engine v2.6.0, Copyright (c) 1998-2016 Zend Technologies</p><h1 id="删除之"><a href="#删除之" class="headerlink" title="删除之"></a>删除之</h1><p>$ sudo rm -rf /private/etc/php-fpm.conf.default /private/etc/php.ini php.ini.default<br>$ sudo rm -rf /usr/bin/php /usr/bin/php-config /usr/bin/phpdoc /usr/bin/phpize<br>$ sudo rm -rf /usr/include/php<br>$ sudo rm -rf /usr/lib/php<br>$ sudo rm -rf /usr/sbin/php-fpm<br>$ sudo rm -rf /usr/share/php<br>$ sudo rm -rf /usr/share/man/man1/php-config.1 /usr/share/man/man1/php.1 /usr/share/man/man1/phpize.1<br>$ sudo rm -rf /usr/share/man/man8/php-fpm.8</p><ul><li>来自<a href="http://www.jianshu.com/p/81a6d5253d48" target="_blank" rel="noopener">http://www.jianshu.com/p/81a6d5253d48</a></li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/local/Cellar/nginx/1.10.3/html</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sudo php-fpm -c /usr/local/etc/php/7.1/php.ini -y /usr/local/etc/php/7.1/php-fpm.conf</span><br><span class="line">Password:</span><br><span class="line">[27-Mar-2018 16:25:00] ERROR: failed to open error_log (/usr/var/log/php-fpm.log): No such file or directory (2)</span><br><span class="line">[27-Mar-2018 16:25:00] ERROR: failed to post process the configuration</span><br><span class="line">[27-Mar-2018 16:25:00] ERROR: FPM initialization failed</span><br></pre></td></tr></table></figure><p>修改<code>php-fpm.conf</code> 的配置 <code>error_log</code>为绝对绝对地址</p><h2 id="配置nginx解析php"><a href="#配置nginx解析php" class="headerlink" title="配置nginx解析php"></a>配置nginx解析php</h2><p>记得开启<code>php-fpm</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">location ~ \.php$ &#123;</span><br><span class="line">    root           html;</span><br><span class="line">    fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">    fastcgi_index  index.php;</span><br><span class="line">    fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class="line">    # 取消默认的配置无法解析</span><br><span class="line">    # fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span><br><span class="line">    include        fastcgi_params;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="http://www.jianshu.com/p/66d1d4ee172c" target="_blank" rel="noopener">http://www.jianshu.com/p/66d1d4ee172c</a></li><li><a href="https://github.com/Homebrew/homebrew-php" target="_blank" rel="noopener">https://github.com/Homebrew/homebrew-php</a></li><li><a href="http://nodejh.com/post/macos-sierra-apache-multiple-php-versions/" target="_blank" rel="noopener">http://nodejh.com/post/macos-sierra-apache-multiple-php-versions/</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;由于lavarel的环境homestead升级成了7.x,导致在外面跑&lt;code&gt;composer update&lt;/code&gt;会报错，很麻烦，于是需要升级系统自带php的版本。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;t
      
    
    </summary>
    
    
      <category term="mysql" scheme="http://huixisheng.github.io/tags/mysql/"/>
    
      <category term="MacOSX" scheme="http://huixisheng.github.io/tags/MacOSX/"/>
    
  </entry>
  
  <entry>
    <title>phpstorm相关配置</title>
    <link href="http://huixisheng.github.io/phpstorm/"/>
    <id>http://huixisheng.github.io/phpstorm/</id>
    <published>2017-05-26T12:39:44.000Z</published>
    <updated>2017-05-29T15:37:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>值得开心的事: <a href="https://www.jetbrains.com/phpstorm/features/html_css_js_editor.html" target="_blank" rel="noopener">在最新的2017.1版本中，PhpStorm/WebStorm已经对Vue.js 进行了原生支持</a></p><h2 id="相关问题"><a href="#相关问题" class="headerlink" title="相关问题"></a>相关问题</h2><h3 id="PhpStorm与WebStorm关系"><a href="#PhpStorm与WebStorm关系" class="headerlink" title="PhpStorm与WebStorm关系"></a>PhpStorm与WebStorm关系</h3><p>引用官网说明:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PhpStorm = WebStorm + PHP + DB/SQL</span><br><span class="line"></span><br><span class="line">All the features of WebStorm are included into PhpStorm, and full-fledged support for PHP and Databases/SQL support are added on top.</span><br></pre></td></tr></table></figure><h3 id="php文件的语法高亮设置"><a href="#php文件的语法高亮设置" class="headerlink" title=".php文件的语法高亮设置"></a>.php文件的语法高亮设置</h3><p>.php 文件不高亮 <code>Editor-&gt;file types</code> 里面可以设置相同的类的代码高亮。<br>php类，可以增加：<code>php4,php5,html,phtml</code>等</p><h3 id="phpstorm注释的时候的斜线位置不在缩进的位置"><a href="#phpstorm注释的时候的斜线位置不在缩进的位置" class="headerlink" title="phpstorm注释的时候的斜线位置不在缩进的位置"></a>phpstorm注释的时候的斜线位置不在缩进的位置</h3><p>phpstorm注释的代码在Sublime中打开，收起代码的时候很不友好，估计有强迫症用户更是受不了吧。</p><p><code>Preferences-&gt;Editor-&gt;Code Style-&gt;PHP-&gt;Other</code> 里面取消 <code>Line comment at first column</code>之前的勾选就行了！</p><p><img src="/images/tools/phpstorm.jpeg" alt=""></p><h3 id="如何修改phpstorm新建文件默认模版注释"><a href="#如何修改phpstorm新建文件默认模版注释" class="headerlink" title="如何修改phpstorm新建文件默认模版注释"></a>如何修改phpstorm新建文件默认模版注释</h3><p>默认注释:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">/**</span><br><span class="line"> * Created by PhpStorm.</span><br><span class="line"> * User: huixisheng</span><br><span class="line"> * Date: 2017/5/26</span><br><span class="line"> * Time: 21:00</span><br><span class="line"> */</span><br></pre></td></tr></table></figure></p><p><img src="/images/tools/phpstorm-header.jpeg" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">/**</span><br><span class="line"> *</span><br><span class="line"> * @date 2017-05-26 21:06</span><br><span class="line"> * @author huixisheng &lt;huixisheng@gmail.com&gt;</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><h3 id="配置Laravel代码跳转"><a href="#配置Laravel代码跳转" class="headerlink" title="配置Laravel代码跳转"></a>配置Laravel代码跳转</h3><p>安装<code>Laravel Plugin</code>。执行<code>php artisan ide-helper:generate</code></p><ul><li><a href="https://github.com/barryvdh/laravel-ide-helper" target="_blank" rel="noopener">https://github.com/barryvdh/laravel-ide-helper</a></li></ul><h2 id="常用的快捷键"><a href="#常用的快捷键" class="headerlink" title="常用的快捷键"></a>常用的快捷键</h2><table><thead><tr><th>快捷键</th><th>描述</th></tr></thead><tbody><tr><td>shift+command+↑</td><td>代码行上移</td></tr><tr><td>control+g</td><td>选中相同单词</td></tr><tr><td>Commond+d</td><td>复制行到下一行</td></tr><tr><td>Command+delete</td><td>删除当前行</td></tr></tbody></table><p>苹果键盘修饰键</p><blockquote><p>Command ⌘<br>Shift ⇧<br>Option ⌥<br>Control ⌃<br>Caps Lock ⇪<br>Fn</p></blockquote><ul><li><a href="https://support.apple.com/zh-cn/HT201236" target="_blank" rel="noopener">Mac 键盘快捷键</a></li><li><a href="http://newping.cn/457" target="_blank" rel="noopener">认识Mac下的那些符号!</a></li></ul><h2 id="如何打特殊符号"><a href="#如何打特殊符号" class="headerlink" title="如何打特殊符号"></a>如何打特殊符号</h2><p>搜狗输入法-&gt;详情表情和符号</p><h2 id="切换至ES6规范"><a href="#切换至ES6规范" class="headerlink" title="切换至ES6规范"></a>切换至ES6规范</h2><p>在项目中开启ES6 <code>Preferences-&gt;Languages &amp; Frameworks-&gt;JavaScript-&gt;JavaScript language version-&gt;ECMAScript 6</code>。 难找的话直接搜索<code>JavaScript</code></p><h2 id="主题相关文章介绍"><a href="#主题相关文章介绍" class="headerlink" title="主题相关文章介绍"></a>主题相关文章介绍</h2><ul><li><a href="http://chinagdg.org/2016/02/ttt2-seti-ui/" target="_blank" rel="noopener">http://chinagdg.org/2016/02/ttt2-seti-ui/</a></li><li><a href="https://www.zhihu.com/question/37762479" target="_blank" rel="noopener">https://www.zhihu.com/question/37762479</a></li><li><a href="https://www.zhihu.com/question/35413120" target="_blank" rel="noopener">https://www.zhihu.com/question/35413120</a></li><li><a href="https://www.zhihu.com/question/35203203" target="_blank" rel="noopener">https://www.zhihu.com/question/35203203</a> mac下intellij idea 变得特别卡该如何解决？</li><li><a href="http://www.webstormthemes.com/themes-list?title=&amp;field_tags_tid=All" target="_blank" rel="noopener">http://www.webstormthemes.com/themes-list?title=&amp;field_tags_tid=All</a></li><li><a href="http://www.jianshu.com/p/10f5f0055715" target="_blank" rel="noopener">http://www.jianshu.com/p/10f5f0055715</a></li><li><a href="https://blog.fazero.me/2015/07/25/WebStorm%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98%E5%92%8C%E4%BF%AE%E6%94%B9%E5%AD%97%E4%BD%93%E6%A0%B7%E5%BC%8F/" target="_blank" rel="noopener">https://blog.fazero.me/2015/07/25/WebStorm%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98%E5%92%8C%E4%BF%AE%E6%94%B9%E5%AD%97%E4%BD%93%E6%A0%B7%E5%BC%8F/</a></li><li><a href="https://www.zhihu.com/question/35413120" target="_blank" rel="noopener">https://www.zhihu.com/question/35413120</a></li><li><a href="https://plugins.jetbrains.com/plugin/8006-material-theme-ui" target="_blank" rel="noopener">https://plugins.jetbrains.com/plugin/8006-material-theme-ui</a></li><li><a href="http://color-themes.com/?view=index&amp;layout=Generic&amp;order=popular&amp;search=&amp;page=2" target="_blank" rel="noopener">http://color-themes.com/?view=index&amp;layout=Generic&amp;order=popular&amp;search=&amp;page=2</a></li></ul><h2 id="相关文章"><a href="#相关文章" class="headerlink" title="相关文章"></a>相关文章</h2><ul><li>新特性 <a href="https://www.jetbrains.com/webstorm/whatsnew/#v2017-1-completion-in-webpackconfigjs" target="_blank" rel="noopener">https://www.jetbrains.com/webstorm/whatsnew/#v2017-1-completion-in-webpackconfigjs</a></li><li>jsdoc <a href="https://www.jetbrains.com/help/webstorm/2017.1/creating-jsdoc-comments.html" target="_blank" rel="noopener">https://www.jetbrains.com/help/webstorm/2017.1/creating-jsdoc-comments.html</a>  <a href="http://blog.lxjwlt.com/2016/09/11/jsdoc.html" target="_blank" rel="noopener">http://blog.lxjwlt.com/2016/09/11/jsdoc.html</a></li><li><a href="http://xwartz.xyz/pupa/2016/05/my-workflow-in-sublime/" target="_blank" rel="noopener">http://xwartz.xyz/pupa/2016/05/my-workflow-in-sublime/</a></li><li>WebStorm 有哪些过人之处？ <a href="https://www.zhihu.com/question/20936155" target="_blank" rel="noopener">https://www.zhihu.com/question/20936155</a></li><li>eslint <a href="http://laichuanfeng.com/work/use-eslint-in-webstorm/" target="_blank" rel="noopener">http://laichuanfeng.com/work/use-eslint-in-webstorm/</a></li><li><a href="https://plugins.jetbrains.com" target="_blank" rel="noopener">https://plugins.jetbrains.com</a></li><li><a href="https://laravel-china.org/topics/1692/how-to-use-phpstorm-gracefully" target="_blank" rel="noopener">如何优雅的使用 phpStorm</a></li></ul><h2 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h2><p>2017-05-28 01:02:06</p><ul><li>添加主题和相关介绍文章</li><li>添加碰到的问题</li><li>添加常用的快捷键</li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="http://lightcss.com/get-vuejs-support-in-webstorm-and-phpstorm/" target="_blank" rel="noopener">http://lightcss.com/get-vuejs-support-in-webstorm-and-phpstorm/</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;值得开心的事: &lt;a href=&quot;https://www.jetbrains.com/phpstorm/features/html_css_js_editor.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;在最新的2017.1版本中，PhpSto
      
    
    </summary>
    
    
      <category term="开发工具" scheme="http://huixisheng.github.io/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
      <category term="phpstorm" scheme="http://huixisheng.github.io/tags/phpstorm/"/>
    
  </entry>
  
  <entry>
    <title>项目碰到的问题整理</title>
    <link href="http://huixisheng.github.io/webapp-tips/"/>
    <id>http://huixisheng.github.io/webapp-tips/</id>
    <published>2016-12-04T01:33:15.000Z</published>
    <updated>2017-03-13T06:42:21.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li>兼容性</li><li>项目总结</li><li>webapck</li><li>sticky</li><li>Vue</li></ul><hr><p>近期做的项目零零散散的问题的总结。主要是使用webpack,vue碰到的问题。</p><a id="more"></a><h2 id="条件判断优化"><a href="#条件判断优化" class="headerlink" title="条件判断优化"></a>条件判断优化</h2><p>当逻辑一复杂，下面的代码就会显得很懊糟，难以维护。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;button class=&quot;jfbtn jfbtn-disable jfbtn-block&quot; v-show=&quot;detail.btn_info.type == &apos;disable&apos;&quot; v-text=&quot;detail.btn_info.text&quot;&gt;&lt;/button&gt;</span><br><span class="line">&lt;button class=&quot;jfbtn jfbtn-disable jfbtn-block&quot; @click=&quot;btnAction&quot; v-show=&quot;detail.btn_info.type == &apos;alertable&apos;&quot; v-text=&quot;detail.btn_info.text&quot;&gt;&lt;/button&gt;</span><br><span class="line">&lt;button class=&quot;jfbtn jfbtn-primary jfbtn-block&quot; @click=&quot;exchangeBtn&quot; v-show=&quot;detail.btn_info.type == &apos;clickable&apos;&quot; v-text=&quot;detail.btn_info.text&quot;&gt;&lt;/button&gt;</span><br><span class="line">&lt;button node-type=&quot;countdown-btn&quot; class=&quot;jfbtn jfbtn-disable jfbtn-block&quot; v-show=&quot;detail.btn_info.type == &apos;countdown&apos;&quot;&gt;&lt;/button&gt;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;button @click=&quot;btnClick&quot; :class=&quot;btnClass&quot; v-text=&quot;btn_info.text&quot;&gt;&lt;/button&gt;</span><br></pre></td></tr></table></figure><p>绑定class配合计算属性使得代码逻辑很清新。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">computed: &#123;</span><br><span class="line">  btnClass () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      &apos;jfbtn&apos;: true,</span><br><span class="line">      &apos;jfbtn-block&apos;: true,</span><br><span class="line">      &apos;jfbtn-disable&apos;: this.showBtnDisableClass,</span><br><span class="line">      &apos;jfbtn-primary&apos;: this.showBtnPrimaryClass</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  showBtnDisableClass () &#123;</span><br><span class="line">    const type = this.btn_info.type;</span><br><span class="line">    if (type === &apos;disable&apos; || type === &apos;alertable&apos;</span><br><span class="line">      || type === &apos;countdown&apos; || type === &apos;auth_check&apos;) &#123;</span><br><span class="line">      return true;</span><br><span class="line">    &#125;</span><br><span class="line">    return false;</span><br><span class="line">  &#125;,</span><br><span class="line">  showBtnPrimaryClass () &#123;</span><br><span class="line">    const type = this.btn_info.type;</span><br><span class="line">    return type === &apos;clickable&apos;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="vue组件-mount报错"><a href="#vue组件-mount报错" class="headerlink" title=".vue组件$mount报错"></a>.vue组件$mount报错</h2><p>按如下方式挂载组件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &apos;vue&apos;;</span><br><span class="line">import Detail from &apos;./views/detail&apos;;</span><br><span class="line">import &apos;./common&apos;;</span><br><span class="line">const cDetail = Vue.extend(Detail);</span><br><span class="line">new cDetail().$mount(&apos;#app&apos;);</span><br></pre></td></tr></table></figure></p><p>报错<code>Cannot read property &#39;tagName&#39; of null</code>。跟踪代码进行调试，并没有找到问题所在。挂载组件的方式不对，还是打包配置不对，导致生成的组件有问题？尝试不同版本的<code>Vue</code>写简单的组件去挂载并没有什么问题。<code>cDetail</code>配合<code>vue-router</code>使用也是没有问题的。单独挂载就是会报错。后面发现<code>.vue</code>文件多个结构没有容器包含引起的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div class=&quot;x1&quot;&gt;内容1&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;x2&quot;&gt;内容2&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  ...</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>修改如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">  &lt;div class=&quot;x1&quot;&gt;内容1&lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;x2&quot;&gt;内容2&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  ...</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><ul><li><a href="https://github.com/vuejs/vue/issues/3212" target="_blank" rel="noopener">https://github.com/vuejs/vue/issues/3212</a></li></ul><h2 id="使用vue-router导致app里面的网页title无法修改"><a href="#使用vue-router导致app里面的网页title无法修改" class="headerlink" title="使用vue-router导致app里面的网页title无法修改"></a>使用vue-router导致app里面的网页title无法修改</h2><p>ios微信6.3.31测试通过,但是在美妆心得app中不行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">route: &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    // document.title = &apos;往期秒杀&apos;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">const iframeLoad = function (src) &#123;</span><br><span class="line">  const iframe = document.createElement(&apos;iframe&apos;);</span><br><span class="line">  iframe.style.display = &apos;none&apos;;</span><br><span class="line">  iframe.src = src;</span><br><span class="line">  document.body.appendChild(iframe);</span><br><span class="line">  iframe.addEventListener(&apos;load&apos;, function () &#123;</span><br><span class="line">    setTimeout(function () &#123;</span><br><span class="line">      iframe.remove();</span><br><span class="line">    &#125;, 0);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">router.afterEach(function (transition) &#123;</span><br><span class="line">  document.title = transition.to.title || &apos;积分商城&apos;;</span><br><span class="line">  // https://segmentfault.com/a/1190000006712234?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io</span><br><span class="line">  if (F.UA.cosmeapp) &#123;</span><br><span class="line">    iframeLoad(&apos;/favicon.ico&apos;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>参考</p><ul><li><a href="https://github.com/miaolz123/vue-helmet/issues/3" target="_blank" rel="noopener">https://github.com/miaolz123/vue-helmet/issues/3</a></li><li><a href="http://silverd.cn/2016/05/14/vue-first-project.html" target="_blank" rel="noopener">http://silverd.cn/2016/05/14/vue-first-project.html</a></li><li><a href="https://segmentfault.com/a/1190000006712234?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io" target="_blank" rel="noopener">https://segmentfault.com/a/1190000006712234?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io</a></li><li><a href="https://gist.github.com/wszgxa/48eefb02650ea011ab28a116643890a9" target="_blank" rel="noopener">https://gist.github.com/wszgxa/48eefb02650ea011ab28a116643890a9</a></li><li><a href="https://segmentfault.com/a/1190000007387556" target="_blank" rel="noopener">https://segmentfault.com/a/1190000007387556</a></li></ul><h2 id="express配置post请求接口"><a href="#express配置post请求接口" class="headerlink" title="express配置post请求接口"></a>express配置post请求接口</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">app.post(&apos;/mock/new-task-price.json&apos;, function (req, res) &#123;</span><br><span class="line">  res.send(&apos;&#123;&quot;status&quot;: &quot;1&quot;,&quot;msg&quot;: &quot;成功领取积分奖励, 请在积分明细中查看哦!&quot;&#125;&apos;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="webpack添加模拟请求"><a href="#webpack添加模拟请求" class="headerlink" title="webpack添加模拟请求"></a>webpack添加模拟请求</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">proxyTable: &#123;</span><br><span class="line">  &apos;/api/credit/index&apos;: &#123;</span><br><span class="line">    target: host + &apos;/mock/api_credit_index.json&apos;,</span><br><span class="line">    changeOrigin: true,</span><br><span class="line">    pathRewrite: &#123;</span><br><span class="line">      &apos;^/api/credit/index&apos;: &apos;&apos;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="webpack入口页面设置标题"><a href="#webpack入口页面设置标题" class="headerlink" title="webpack入口页面设置标题"></a>webpack入口页面设置标题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;title&gt;&lt;%= htmlWebpackPlugin.options.title %&gt;&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">new HtmlWebpackPlugin(&#123;</span><br><span class="line">  filename: &apos;index.html&apos;,</span><br><span class="line">  // 必须是.ejs结尾的文件，.html的文件不会解析。或者模板的loader</span><br><span class="line">  template: &apos;index.ejs&apos;,</span><br><span class="line">  title: &apos;积分商城&apos;,</span><br><span class="line">&#125;),</span><br></pre></td></tr></table></figure><ul><li><a href="https://github.com/ampedandwired/html-webpack-plugin/blob/master/docs/template-option.md" target="_blank" rel="noopener">https://github.com/ampedandwired/html-webpack-plugin/blob/master/docs/template-option.md</a></li><li><a href="http://www.html-js.com/article/shiyongzhishang-webpackduoyeyingyongjiagouxilieshierliyongwebpackshengchengHTMLputongwangyeyemianmoban%203784" target="_blank" rel="noopener">webpack多页应用架构系列（十二）：利用webpack生成HTML普通网页&amp;页面模板</a></li></ul><h2 id="webpack多页面入口配置"><a href="#webpack多页面入口配置" class="headerlink" title="webpack多页面入口配置"></a>webpack多页面入口配置</h2><p>添加多个enter<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">entry: &#123;</span><br><span class="line">  index: &apos;./src/index.js&apos;,</span><br><span class="line">  detail: &apos;./src/detail.js&apos;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></p><p>配置多个<code>HtmlWebpackPlugin</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">new HtmlWebpackPlugin(&#123;</span><br><span class="line">  filename: &apos;index.html&apos;,</span><br><span class="line">  template: &apos;index.ejs&apos;,</span><br><span class="line">  inject: true,</span><br><span class="line">  title: &apos;积分商城&apos;,</span><br><span class="line">  minify: &#123;</span><br><span class="line">    removeComments: true,</span><br><span class="line">    collapseWhitespace: true</span><br><span class="line">  &#125;,</span><br><span class="line">  chunks: [&apos;index&apos;]</span><br><span class="line">&#125;),</span><br><span class="line">new HtmlWebpackPlugin(&#123;</span><br><span class="line">  filename: &apos;detail.html&apos;,</span><br><span class="line">  template: &apos;index.ejs&apos;,</span><br><span class="line">  inject: true,</span><br><span class="line">  title: &apos;商品详情&apos;,</span><br><span class="line">  minify: &#123;</span><br><span class="line">    removeComments: false,</span><br><span class="line">    collapseWhitespace: false</span><br><span class="line">  &#125;,</span><br><span class="line">  chunks: [&apos;detail&apos;]</span><br><span class="line">&#125;),</span><br></pre></td></tr></table></figure></p><p>入口文件和模板文件可以采用遍历的目录，这样就不要单独一个个配置。</p><p>多页面配置扩展阅读</p><ul><li><a href="https://github.com/lpreterite/multiple-page-vue-webpack-example" target="_blank" rel="noopener">https://github.com/lpreterite/multiple-page-vue-webpack-example</a></li><li><a href="https://github.com/yaoyao1987/vue-cli-multipage" target="_blank" rel="noopener">https://github.com/yaoyao1987/vue-cli-multipage</a></li><li><a href="https://github.com/cnu4/Webpack-Vue-MultiplePage" target="_blank" rel="noopener">https://github.com/cnu4/Webpack-Vue-MultiplePage</a></li><li><a href="http://xjinjin.net/2016/08/20/webpack-multiple-page-static/" target="_blank" rel="noopener">http://xjinjin.net/2016/08/20/webpack-multiple-page-static/</a></li></ul><h2 id="position-sticky失效"><a href="#position-sticky失效" class="headerlink" title="position: sticky失效"></a><code>position: sticky</code>失效</h2><p>原因是<code>html, body{ overflow: auto }</code></p><p>最初是想实现滚动某个位置的时候导航滚定在顶部。给相关的滚动元素绑定<code>scroll</code>事件快速滑动的时候存在细微的抖动效果。尝试了<code>touchmove touchend</code>等事件、<code>_.throttle</code>函数节流，结果还是不顺畅。发现<a href="https://h5.m.taobao.com/app/tjb/www/index3.html?locate=icon-8&amp;spm=a215s.7406091.icons.8&amp;scm=2027.1.2.1004" target="_blank" rel="noopener">淘宝的淘金币页面</a>却是丝般丝般顺滑。导致是用了什么黑科技，看下源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">var n = $(window)</span><br><span class="line">  , i = function o(t) &#123;</span><br><span class="line">    var e = $(t.el)</span><br><span class="line">      , i = this;</span><br><span class="line">    i.top = t.top || 0;</span><br><span class="line">    var o = &quot;static&quot;;</span><br><span class="line">    if (e.css(&#123;</span><br><span class="line">        position: &quot;-webkit-sticky&quot;,</span><br><span class="line">        top: i.top + &quot;px&quot;,</span><br><span class="line">        zIndex: 1e3</span><br><span class="line">    &#125;),</span><br><span class="line">    &quot;boolean&quot; != typeof t.isStatic || t.isStatic || (o = e.css(&quot;position&quot;)),</span><br><span class="line">    &quot;string&quot; == typeof t.addStickyClass &amp;&amp; (i.addStickyClass = t.addStickyClass),</span><br><span class="line">    e.length &gt; 0 &amp;&amp; e.css(&quot;position&quot;).indexOf(&quot;sticky&quot;) == -1) &#123;</span><br><span class="line">        var r, a;</span><br><span class="line">        !function() &#123;</span><br><span class="line">            var t = function s() &#123;</span><br><span class="line">                n.scrollTop() &gt; i.ScrollTop ? (r.show(),</span><br><span class="line">                i.addStickyClass &amp;&amp; e.addClass(i.addStickyClass),</span><br><span class="line">                e.css(&quot;position&quot;, &quot;fixed&quot;)) : (r.hide(),</span><br><span class="line">                i.addStickyClass &amp;&amp; e.removeClass(i.addStickyClass),</span><br><span class="line">                e.css(&quot;position&quot;, o))</span><br><span class="line">            &#125;;</span><br><span class="line">            i.nav = e,</span><br><span class="line">            i.setPlaceHolder(),</span><br><span class="line">            r = i.placeHolder,</span><br><span class="line">            i.ScrollTop = e.offset().top,</span><br><span class="line">            setTimeout(function() &#123;</span><br><span class="line">                i.ScrollTop = e.offset().top - i.top</span><br><span class="line">            &#125;, 10),</span><br><span class="line">            a = window.requestAnimationFrame || window.webkitRequestAnimationFrame || function(t) &#123;</span><br><span class="line">                setTimeout(t, 1 / 60 * 1e3)</span><br><span class="line">            &#125;</span><br><span class="line">            ,</span><br><span class="line">            n.on(&quot;scroll&quot;, function() &#123;</span><br><span class="line">                a(t)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>原来顺滑用的是<code>sticky</code>。然而由于项目之前用的是<code>html,body{overflow: hidden;}</code>,改成了<code>html, body{ overflow: auto }</code>。结果我修改代码用上<code>sticky</code>就悲剧了。</p><blockquote><p>已知的几个问题，外层overflow设置成auto,scroll,hidden会失效。 -<a href="http://wenbinzhou.lofter.com/post/65a3d_6f55339" target="_blank" rel="noopener">http://wenbinzhou.lofter.com/post/65a3d_6f55339</a></p></blockquote><h3 id="javascript检测是否支持"><a href="#javascript检测是否支持" class="headerlink" title="javascript检测是否支持"></a>javascript检测是否支持</h3><ul><li>来自<a href="https://segmentfault.com/a/1190000007183209?_ea=1288008" target="_blank" rel="noopener">https://segmentfault.com/a/1190000007183209?_ea=1288008</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if (CSS.supports(&quot;position&quot;, &quot;sticky&quot;) || CSS.supports(&quot;position&quot;, &quot;-webkit-sticky&quot;)) &#123;</span><br><span class="line">    // 支持 sticky</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>或者</p><ul><li>来自 <a href="http://efe.baidu.com/blog/position-sticky/" target="_blank" rel="noopener">http://efe.baidu.com/blog/position-sticky/</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">function isSupportSticky() &#123;</span><br><span class="line">    var prefixTestList = [&apos;&apos;, &apos;-webkit-&apos;, &apos;-ms-&apos;, &apos;-moz-&apos;, &apos;-o-&apos;];</span><br><span class="line">    var stickyText = &apos;&apos;;</span><br><span class="line">    for (var i = 0; i &lt; prefixTestList.length; i++ ) &#123;</span><br><span class="line">        stickyText += &apos;position:&apos; + prefixTestList[i] + &apos;sticky;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    // 创建一个dom来检查</span><br><span class="line">    var div = document.createElement(&apos;div&apos;);</span><br><span class="line">    var body = document.body;</span><br><span class="line">    div.style.cssText = &apos;display:none;&apos; + stickyText;</span><br><span class="line">    body.appendChild(div);</span><br><span class="line">    var isSupport = /sticky/i.test(window.getComputedStyle(div).position);</span><br><span class="line">    body.removeChild(div);</span><br><span class="line">    div = null;</span><br><span class="line">    return isSupport;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="绑定scroll事件在ios设备不顺畅原因"><a href="#绑定scroll事件在ios设备不顺畅原因" class="headerlink" title="绑定scroll事件在ios设备不顺畅原因"></a>绑定scroll事件在ios设备不顺畅原因</h3><ul><li>来自 <a href="http://feg.netease.com/archives/377.html" target="_blank" rel="noopener">http://feg.netease.com/archives/377.html</a><blockquote><p>上面这种方法在chrome模拟手机浏览器的表现很好，但是在移动端浏览器上粘顶的效果就没有那么平滑，尤其是在ios设备上，ios下的浏览器会在页面滚动的时候，暂停所有js的执行，直到滚动停止才会继续去执行js（注意暂停了所有js的执行，所以考虑用setTimeout或setInterval也是没有用的）。所以页面滚动时，scroll事件在iOS的浏览器下并不会持续被触发，而是在页面滚动停止后，才会去触发一次scroll事件。</p></blockquote></li></ul><h3 id="sticky满足以下条件才能生效"><a href="#sticky满足以下条件才能生效" class="headerlink" title="sticky满足以下条件才能生效"></a>sticky满足以下条件才能生效</h3><ul><li>来自 <a href="http://www.ghugo.com/position-sticky-how-to-use/" target="_blank" rel="noopener">http://www.ghugo.com/position-sticky-how-to-use/</a><blockquote><p>1、具有sticky属性的元素，其父级高度必须大于sticky元素的高度。<br>2、sticky元素的底部，不能和父级底部重叠。（这条不好表述，文后详细说明）<br>3、sticky元素的所有父级不能含有overflow:hidden 和 overflow:auto 属性<br>4、必须具有top，或 bottom 属性。<br>同时要注意，sticky元素仅在他父级容器内有效，超出容器范围则不再生效了。</p></blockquote></li></ul><h3 id="相关sticky插件"><a href="#相关sticky插件" class="headerlink" title="相关sticky插件"></a>相关<code>sticky</code>插件</h3><ul><li>aralejs/sticky</li><li>garand/sticky</li><li>matthewp/position–sticky-</li><li>filamentgroup/fixed-sticky</li><li><a href="http://stickyjs.com/" target="_blank" rel="noopener">http://stickyjs.com/</a></li><li><a href="http://kissygalleryteam.github.io/sticky/doc/guide/index.html" target="_blank" rel="noopener">http://kissygalleryteam.github.io/sticky/doc/guide/index.html</a><br><a href="https://github.com/search?utf8=%E2%9C%93&amp;q=position+sticky&amp;type=Repositories&amp;ref=searchresults" target="_blank" rel="noopener">https://github.com/search?utf8=%E2%9C%93&amp;q=position+sticky&amp;type=Repositories&amp;ref=searchresults</a></li></ul><h2 id="iphone屏幕录制如何导出gif"><a href="#iphone屏幕录制如何导出gif" class="headerlink" title="iphone屏幕录制如何导出gif"></a>iphone屏幕录制如何导出gif</h2><p>用Mac自带的<code>QuickTime Player</code>录制视频。用软件<code>GIF Brewery</code>导出gif。写了篇简单的<a href="https://huixisheng.github.io/mac-iphone-screen-record/">]总结文章</a></p><h2 id="键盘弹起引起input-fixed定位失效"><a href="#键盘弹起引起input-fixed定位失效" class="headerlink" title="键盘弹起引起input fixed定位失效"></a>键盘弹起引起input fixed定位失效</h2><p>flex方法测试</p><p>测试结果:ios10.2 在微信中，safari切换为讯飞输入法有问题，输入框会被键盘遮挡</p><blockquote><p>在iOS移动设备下当虚拟键盘打开打开上会导致页面内的Fixed元素出现渲染异常。有几种可以绕过这个bug的方法：为Fixed元素设置 position:absolute; 通过设置定时器focus input元素。 -<a href="https://www.dragonvally.com/2016/04/09/ios-fixed-input-bug/" target="_blank" rel="noopener">https://www.dragonvally.com/2016/04/09/ios-fixed-input-bug/</a>  -<a href="http://getbootstrap.com/getting-started/#virtual-keyboards" target="_blank" rel="noopener">http://getbootstrap.com/getting-started/#virtual-keyboards</a></p></blockquote><p>目前想到解决办法:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">setTimeout(function()&#123;</span><br><span class="line">    var $doc = $(document);</span><br><span class="line">    var height = $doc.height();</span><br><span class="line">    $doc.scrollTop(height)</span><br><span class="line">&#125;, 300);</span><br></pre></td></tr></table></figure><p><a href="https://huixisheng.github.io/lab/demos/fixed-input/flex-fixed-input.html">demo地址-flex实现input fixed</a></p><h2 id="border-none在ie7无效"><a href="#border-none在ie7无效" class="headerlink" title="border:none在ie7无效"></a><code>border:none</code>在ie7无效</h2><p>好久没有处理过ie的兼容问题了，在做公司官网的时候发现<code>border:none</code>在ie7无效</p><p>以下内容引用在<a href="http://blog.sina.com.cn/s/blog_5ed90bcd0101l4kc.html" target="_blank" rel="noopener">ie6 ie7中input标签隐藏边框(border:none与border：0的异同) </a></p><blockquote><p>border:none;与border:0;的区别体现有两点：一是理论上的性能差异二是浏览器兼容性的差异。<br> 1.性能差异<br>【border:0;】把border设为“0”像素虽然在页面上看不见，但按border默认值理解，浏览器依然对border-width/border-color进行了渲染，即已经占用了内存值。<br>【border:none;】把border设为“none”即没有，浏览器解析“none”时将不作出渲染动作，即不会消耗内存值。<br> 2.兼容性差异<br>【border:none;】当border为“none”时对IE6/7无效边框依然存在<br>【border:0;】当border为“0”时，所有浏览器都一致把边框隐藏<br> 总结：</p><ol><li>对比border:0;与border:none;之间的区别在于有渲染和没渲染，感觉他们和display:none;与visibility:hidden;的关系类似，而对于border属性的渲染性能对比暂时没找测试的方法，虽然认为他们存在渲染性能上的差异但也只能说是理论上。<ol><li>如何让border:none;实现全兼容？只需要在同一选择符上添加背景属性即可<br>3.对于border:0;与border:none;个人更向于使用,border:none;，因为border:none;毕竟在性能消耗没有争议，而且兼容性可用背景属性解决不足以成为障碍。</li></ol></li></ol></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;兼容性&lt;/li&gt;
&lt;li&gt;项目总结&lt;/li&gt;
&lt;li&gt;webapck&lt;/li&gt;
&lt;li&gt;sticky&lt;/li&gt;
&lt;li&gt;Vue&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;近期做的项目零零散散的问题的总结。主要是使用webpack,vue碰到的问题。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>iphone屏幕录制导出gif</title>
    <link href="http://huixisheng.github.io/mac-iphone-screen-record/"/>
    <id>http://huixisheng.github.io/mac-iphone-screen-record/</id>
    <published>2016-11-30T12:09:08.000Z</published>
    <updated>2016-11-30T14:38:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>gif图片可用于博客中文章demo的展示，聊天不发几个表情都不好意思去聊天。</p><p>当你做app测试的时候发现了bug，用干巴巴的文字记录，不好描述，或许你的藐视开发人员有可能不懂你在说什么。所以有图有真相，这样方便开发人员重现问题，万一他们自己的设备就是没有问题呢。有图在就不好甩锅了。</p><p>Mac系统自带的<code>QuickTime Player</code>可用于电脑和iphone手机的 屏幕录制导出视频，结合软件可以导出gif图片。</p><a id="more"></a><h2 id="QuickTime-Player导出视频"><a href="#QuickTime-Player导出视频" class="headerlink" title="QuickTime Player导出视频"></a><code>QuickTime Player</code>导出视频</h2><p>大致的步骤:</p><ol><li>打开<code>QuickTime Player</code></li><li>文件-&gt;新建屏幕录制</li><li>点击红色按钮/iphone的话用数据线连接到电脑</li><li>点击红色按钮停止录制</li><li>导出视频</li></ol><p>步骤截图见<a href="http://js.sunansheng.com/p/545014e51ad5?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=mobile_all_hots&amp;utm_source=recommendation" target="_blank" rel="noopener">Mac屏幕录制与gif图片制作教程</a></p><h2 id="导出gif"><a href="#导出gif" class="headerlink" title="导出gif"></a>导出gif</h2><h3 id="GIF-Brewery"><a href="#GIF-Brewery" class="headerlink" title="GIF Brewery"></a>GIF Brewery</h3><blockquote><p>近期，知名 GIF 动图制作软件 GIF Brewery 宣告其已经被动图资源托管平台 Gfycat 收购，软件调整为<strong>免费下载</strong>，正式将其产品定位选择为 Gfycat 桌面客户端，用户可将制作好的动图直接上传到 Gfycat，部分用户期待的文件保存管理工作终于得到了解决。-<a href="http://www.waerfa.com/gif-brewery-3-review" target="_blank" rel="noopener">http://www.waerfa.com/gif-brewery-3-review</a></p></blockquote><p><img src="/images/mac/screen-record-GIF Brewery.jpeg" alt=""></p><p>导出的gif:<br><img src="/images/mac/screen-record-gif.gif" alt=""></p><p><a href="https://itunes.apple.com/cn/app/gif-brewery-3-by-gfycat/id1081413713?mt=12" target="_blank" rel="noopener">下载地址</a></p><h3 id="其他软件"><a href="#其他软件" class="headerlink" title="其他软件"></a>其他软件</h3><ul><li><a href="https://itunes.apple.com/cn/app/picgif-lite/id844918735?mt=12" target="_blank" rel="noopener">PicGIF</a></li><li><a href="http://www.uisdc.com/3-mac-gif-screencasts-tools" target="_blank" rel="noopener">MAC党看过来！3款超实用的GIF录屏软件推荐</a></li><li><a href="http://s.weibo.com/weibo/gif%2520%25E5%25B1%258F%25E5%25B9%2595%25E5%25BD%2595%25E5%2588%25B6&amp;b=1&amp;page=1" target="_blank" rel="noopener">http://s.weibo.com/weibo/gif%2520%25E5%25B1%258F%25E5%25B9%2595%25E5%25BD%2595%25E5%2588%25B6&amp;b=1&amp;page=1</a></li><li><a href="http://sspai.com/29175" target="_blank" rel="noopener">http://sspai.com/29175</a></li><li>Vidyo</li><li>GifLab</li><li>Apowersoft苹果录屏王</li><li><a href="http://sspai.com/33686" target="_blank" rel="noopener">在 iPhone 上直接录屏，又一个新选择：AirShou</a></li><li><a href="https://segmentfault.com/a/1190000004461659" target="_blank" rel="noopener">Android分享：录制屏幕并制作GIF文件</a></li><li><a href="http://www.isofts.org/?s=gif" target="_blank" rel="noopener">http://www.isofts.org/?s=gif</a></li><li><a href="http://sspai.com/29175" target="_blank" rel="noopener">http://sspai.com/29175</a></li><li><a href="http://recordit.co/" target="_blank" rel="noopener">Recordit</a></li><li>licecap</li><li>AirServer</li><li>Reflector</li><li>ScreenFlow</li><li>Hype 3 强大的 HTML 5 动画制作软件</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;gif图片可用于博客中文章demo的展示，聊天不发几个表情都不好意思去聊天。&lt;/p&gt;
&lt;p&gt;当你做app测试的时候发现了bug，用干巴巴的文字记录，不好描述，或许你的藐视开发人员有可能不懂你在说什么。所以有图有真相，这样方便开发人员重现问题，万一他们自己的设备就是没有问题呢。有图在就不好甩锅了。&lt;/p&gt;
&lt;p&gt;Mac系统自带的&lt;code&gt;QuickTime Player&lt;/code&gt;可用于电脑和iphone手机的 屏幕录制导出视频，结合软件可以导出gif图片。&lt;/p&gt;
    
    </summary>
    
    
      <category term="MacOSX" scheme="http://huixisheng.github.io/tags/MacOSX/"/>
    
      <category term="软件" scheme="http://huixisheng.github.io/tags/%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>jenkins发送自定义内容邮件</title>
    <link href="http://huixisheng.github.io/jenkins-email/"/>
    <id>http://huixisheng.github.io/jenkins-email/</id>
    <published>2016-11-25T16:43:05.000Z</published>
    <updated>2016-11-25T16:43:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文介绍了<code>groovy</code>脚本自定义构建完成后通知邮件的标题和内容。</p><a id="more"></a><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p><a href="https://wiki.jenkins-ci.org/display/JENKINS/Email-ext+plugin" target="_blank" rel="noopener">Email Extension Plugin</a></p><h2 id="配置邮件地址"><a href="#配置邮件地址" class="headerlink" title="配置邮件地址"></a>配置邮件地址</h2><p><img src="/images/jenkins/jenkins-mail-1.jpeg" alt=""><br><img src="/images/jenkins/jenkins-mail-2.jpeg" alt=""></p><p><strong>注意</strong>管理员的邮件地址要用户名邮件地址一致，不然发不了邮件</p><p><img src="/images/jenkins/jenkins-mail-3.jpeg" alt=""></p><h2 id="自定义邮件内容"><a href="#自定义邮件内容" class="headerlink" title="自定义邮件内容"></a>自定义邮件内容</h2><p>希望邮件的标题是含有<code>plist</code>或者<code>AndroidManifest.xml</code>的版本信息。下载地址是蒲公英的历史地址，而不是最终的固定地址。</p><p><img src="/images/jenkins/jenkins-mail-4.jpeg" alt=""></p><p><strong>注意设置</strong><code>Content Type:HTML(text/html)</code></p><h3 id="变更记录"><a href="#变更记录" class="headerlink" title="变更记录"></a>变更记录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;h2&gt;变更记录&lt;/h2&gt;</span><br><span class="line">&lt;ol&gt;</span><br><span class="line">$&#123;CHANGES_SINCE_LAST_SUCCESS,reverse=true, format=&quot;&quot;,showPaths=true,changesFormat=&quot;&lt;li&gt;&lt;pre&gt;[%a]&lt;br /&gt;%m&lt;/pre&gt;&lt;/li&gt;&quot;,pathFormat=&quot;    %p&quot;&#125;</span><br><span class="line">&lt;/ol&gt;</span><br><span class="line">[参考来自](http://m.blog.csdn.net/article/details?id=50595720)</span><br></pre></td></tr></table></figure><p>通过搜索<code>CHANGES_SINCE_LAST_SUCCESS</code>找到</p><blockquote><p>${CHANGES_SINCE_LAST_SUCCESS} -显示上一次成功构建之后的变化。<br> reverse在顶部标示新近的构建。默认false。<br> format遍历构建信息，一个包含%X的字符串，其中%c为所有的改变，%n为构建编号。默认”Changes for Build #%n\n%c\n”。<br> showPaths,changesFormat,pathFormat分别定义如${CHANGES}的showPaths、format和pathFormat参数。<br> 来自:<a href="http://www.cnblogs.com/zz0412/p/jenkins_jj_01.html" target="_blank" rel="noopener">http://www.cnblogs.com/zz0412/p/jenkins_jj_01.html</a></p></blockquote><h3 id="项目信息"><a href="#项目信息" class="headerlink" title="项目信息"></a>项目信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">    &lt;li&gt;项目名称 ： $&#123;PROJECT_NAME&#125;&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;构建编号 ： 第$&#123;BUILD_NUMBER&#125;次构建&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;SVN 版本： $&#123;SVN_REVISION&#125;&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;触发原因： $&#123;CAUSE&#125;&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;构建日志： &lt;a href=&quot;$&#123;BUILD_URL&#125;console&quot;&gt;$&#123;BUILD_URL&#125;console&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;构建  Url ： &lt;a href=&quot;$&#123;BUILD_URL&#125;&quot;&gt;$&#123;BUILD_URL&#125;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;工作目录 ： &lt;a href=&quot;$&#123;PROJECT_URL&#125;ws&quot;&gt;$&#123;PROJECT_URL&#125;ws&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;项目  Url ： &lt;a href=&quot;$&#123;PROJECT_URL&#125;&quot;&gt;$&#123;PROJECT_URL&#125;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><h3 id="系统变量"><a href="#系统变量" class="headerlink" title="系统变量"></a>系统变量</h3><ul><li><a href="https://wiki.jenkins-ci.org/display/JENKINS/Building+a+software+project" target="_blank" rel="noopener">https://wiki.jenkins-ci.org/display/JENKINS/Building+a+software+project</a></li><li>查看jenkins相关的变量<a href="http://192.168.6.100:9999/env-vars.html/" target="_blank" rel="noopener">http://192.168.6.100:9999/env-vars.html/</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">__CF_USER_TEXT_ENCODING:0x1F5:0x19:0x34</span><br><span class="line">ANDROID_HOME:/Users/huixisheng/Library/Android/sdk</span><br><span class="line">BUILD_DISPLAY_NAME:#19</span><br><span class="line">BUILD_ID:19</span><br><span class="line">BUILD_NUMBER:19</span><br><span class="line">BUILD_TAG:jenkins-mail-test-19</span><br><span class="line">BUILD_URL:http://localhost:9999/job/mail-test/19/</span><br><span class="line">CLASSPATH:</span><br><span class="line">com.apple.java.jvmTask:CommandLine</span><br><span class="line">EXECUTOR_NUMBER:1</span><br><span class="line">GIT_BRANCH:origin/master</span><br><span class="line">GIT_COMMIT:869c988fd3b4124d8e7c6accc50d73df225ce4f9</span><br><span class="line">GIT_PREVIOUS_COMMIT:869c988fd3b4124d8e7c6accc50d73df225ce4f9</span><br><span class="line">GIT_PREVIOUS_SUCCESSFUL_COMMIT:869c988fd3b4124d8e7c6accc50d73df225ce4f9</span><br><span class="line">GIT_URL:git@git.coding.net:huixisheng/wapApp.git</span><br><span class="line">HOME:/Users/huixisheng</span><br><span class="line">HUDSON_HOME:/Users/Shared/Jenkins/Home</span><br><span class="line">HUDSON_SERVER_COOKIE:83752ef1802c9c47</span><br><span class="line">HUDSON_URL:http://localhost:9999/</span><br><span class="line">JAVA_ARCH:x86_64</span><br><span class="line">JAVA_MAIN_CLASS_64:Main</span><br><span class="line">JENKINS_HOME:/Users/Shared/Jenkins/Home</span><br><span class="line">JENKINS_SERVER_COOKIE:83752ef1802c9c47</span><br><span class="line">JENKINS_URL:http://localhost:9999/</span><br><span class="line">JOB_BASE_NAME:mail-test</span><br><span class="line">JOB_NAME:mail-test</span><br><span class="line">JOB_URL:http://localhost:9999/job/mail-test/</span><br><span class="line">LOGNAME:huixisheng</span><br><span class="line">NODE_LABELS:master</span><br><span class="line">NODE_NAME:master</span><br><span class="line">PATH:/Users/huixisheng/.rvm/gems/ruby-2.3.0/bin:/Users/huixisheng/.rvm/gems/ruby-2.3.0@global/bin:/Users/huixisheng/.rvm/rubies/ruby-2.3.0/bin:/Users/huixisheng/Library/Android/sdk/tools:/Users/huixisheng/Library/Android/sdk/platform-tools:/Users/huixisheng/.sdkman/candidates/gradle/current/bin:/Users/huixisheng/bin:/usr/local/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/huixisheng/.rvm/bin:/Users/huixisheng/.rvm/bin</span><br><span class="line">PWD:/</span><br><span class="line">SHELL:/bin/zsh</span><br><span class="line">SHLVL:0</span><br><span class="line">TMPDIR:/var/folders/1f/pt5xk8yn1ybgnp9tsjhwtn4h0000gn/T/</span><br><span class="line">USER:huixisheng</span><br><span class="line">WORKSPACE:/Users/Shared/Jenkins/Home/workspace/mail-test</span><br><span class="line">XPC_FLAGS:0x0</span><br><span class="line">XPC_SERVICE_NAME:org.jenkins-ci</span><br><span class="line">----------FF--</span><br></pre></td></tr></table></figure></li></ul><h3 id="groovy自定义邮件标题"><a href="#groovy自定义邮件标题" class="headerlink" title="groovy自定义邮件标题"></a>groovy自定义邮件标题</h3><p><code>Pre-send Script</code>添加<code>groovy</code>脚本可以设置自定义邮件标题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">import java.util.regex.Matcher</span><br><span class="line">import java.util.regex.Pattern</span><br><span class="line"></span><br><span class="line">def var = build.getEnvVars()</span><br><span class="line"></span><br><span class="line">def plist = var.get(&quot;JENKINS_HOME&quot;) + &apos;/workspace/app-ios/Other Sources/Info.plist&apos;</span><br><span class="line">def text = new File(plist).text</span><br><span class="line"></span><br><span class="line">def pattern = ~/CFBundleShortVersionString.*\n.*&lt;string&gt;(.*)&lt;\/string&gt;/</span><br><span class="line">assert pattern instanceof Pattern</span><br><span class="line"></span><br><span class="line">def matcher = pattern.matcher(text)</span><br><span class="line">def subject = msg.getSubject()</span><br><span class="line"></span><br><span class="line">// 修改邮件标题</span><br><span class="line">subject = &quot;#&quot; + var.get(&quot;BUILD_NUMBER&quot;) + &quot; IOS-&quot; + matcher[0][1] + &apos;测试包构建于&apos; + new Date().format(&apos;MM月dd日 HH:mm:ss&apos;)</span><br><span class="line"></span><br><span class="line">msg.setSubject(subject)</span><br><span class="line"></span><br><span class="line">// 修改邮件内容</span><br><span class="line">def qrfile = var.get(&quot;WORKSPACE&quot;) + &apos;/appQRCodeURL.html&apos;</span><br><span class="line">def qrtext = new File(qrfile).text</span><br><span class="line"></span><br><span class="line">def downurlfile = var.get(&quot;WORKSPACE&quot;) + &apos;/appDownloadPageURL.html&apos;</span><br><span class="line">def downurl= new File(downurlfile).text</span><br><span class="line"></span><br><span class="line">def emailContent = msg.getContent().getBodyPart(0).getContent()</span><br><span class="line">emailContent = emailContent.replaceAll(&apos;固定的蒲公英二维码下载地址&apos;, qrtext)</span><br><span class="line">emailContent = emailContent.replaceAll(&apos;固定的蒲公英下载地址&apos;, downurl)</span><br><span class="line">msg.setContent(emailContent, &quot;text/html; charset=utf-8&quot;);</span><br></pre></td></tr></table></figure><p>起初想着是通过<code>groovy</code>去解析<code>plist</code>文件，结果没驾驭好这个脚本语言，实现不了。想到的办法只能通过正则去匹配，这个语言的正则跟我接触最多的<code>javascript</code>稍稍有点不一样。折腾了好久，主要的问题应该是对<code>java</code>不熟悉。</p><p>以下是<code>groovy</code>相关的一些资料:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">解析plist文件相关参考文章</span><br><span class="line">- https://gist.github.com/vgrichina/1604592</span><br><span class="line">- http://stackoverflow.com/questions/7484163/how-to-parse-plist-file-in-java</span><br><span class="line">- https://codegists.com/code/groovy-xml-parser-slurper/</span><br><span class="line"></span><br><span class="line">开启GUI命令`groovyConsole`</span><br><span class="line"></span><br><span class="line">groovy文档</span><br><span class="line">- http://groovy.zeroleaf.com/</span><br><span class="line">- one-tab地址集合: http://www.one-tab.com/page/DI5TcLLgQJOKapjvx0FOHQ</span><br></pre></td></tr></table></figure></p><p>后期会专门的文章去介绍<code>groovy</code>,先给自己挖个坑。</p><h3 id="groovy自定义邮件内容"><a href="#groovy自定义邮件内容" class="headerlink" title="groovy自定义邮件内容"></a>groovy自定义邮件内容</h3><p>上传蒲公英是用<code>python</code>写的，上传完成接口返回的地址信息怎么给<code>groovy</code>。最初以为是设置<code>os.environ</code>，然后<code>groory</code>通过<code>build.getEnvVars()</code>去获取就可以。结果是不行的。想了折中的方法，地址写入文件然后读取。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>勉强实现了按自己的要求去自定义了<code>jenkins</code>的邮件内容。从问题的提出，找资料，苦恼，问题解决等过程中学到了很多，对<code>groovy</code>有了个简单的认识，后期的总结回顾很重要，最好的产物是输出。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="http://m.blog.csdn.net/article/details?id=50595720" target="_blank" rel="noopener">http://m.blog.csdn.net/article/details?id=50595720</a></li><li><a href="http://www.jianshu.com/p/e4e8ec2d8504" target="_blank" rel="noopener">http://www.jianshu.com/p/e4e8ec2d8504</a></li><li><a href="http://liuhongjiang.github.io/hexotech/2015/12/04/jenkins-send-email-after-build/" target="_blank" rel="noopener">配置jenkins发送邮件</a> 这篇文章对我的启发很大</li><li><a href="http://www.cnblogs.com/zz0412/p/jenkins_jj_01.html" target="_blank" rel="noopener">http://www.cnblogs.com/zz0412/p/jenkins_jj_01.html</a></li><li><a href="http://www.cnblogs.com/GGHHLL/p/jenkins.html" target="_blank" rel="noopener">http://www.cnblogs.com/GGHHLL/p/jenkins.html</a></li><li><a href="http://wenku.baidu.com/view/a71a9281b9d528ea81c77953.html" target="_blank" rel="noopener">http://wenku.baidu.com/view/a71a9281b9d528ea81c77953.html</a></li><li><a href="http://www.lai18.com/content/4985104.html?from=cancel" target="_blank" rel="noopener">http://www.lai18.com/content/4985104.html?from=cancel</a></li></ol><p>感谢互联网的创造作们</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文介绍了&lt;code&gt;groovy&lt;/code&gt;脚本自定义构建完成后通知邮件的标题和内容。&lt;/p&gt;
    
    </summary>
    
    
      <category term="持续集成" scheme="http://huixisheng.github.io/tags/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
    
      <category term="jenkins" scheme="http://huixisheng.github.io/tags/jenkins/"/>
    
      <category term="groovy" scheme="http://huixisheng.github.io/tags/groovy/"/>
    
  </entry>
  
  <entry>
    <title>npm直接安装github仓库代码</title>
    <link href="http://huixisheng.github.io/npm-install/"/>
    <id>http://huixisheng.github.io/npm-install/</id>
    <published>2016-10-23T06:35:01.000Z</published>
    <updated>2016-10-23T07:48:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>npm是nodejs的官方包管理，有成千上万的包，方便了前端模块化开发。但有些前端库并没有发布到npm,但有时候项目又需要它。本文介绍通过npm如何安装github仓库代码。从而达到模块化开发的目的。</p><a id="more"></a><h2 id="初始化npm-init"><a href="#初始化npm-init" class="headerlink" title="初始化npm init"></a>初始化<code>npm init</code></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$ npm init</span><br><span class="line">name: (tmp2016)</span><br><span class="line">version: (1.0.0)</span><br><span class="line">description:</span><br><span class="line">entry point: (index.js)</span><br><span class="line">test command:</span><br><span class="line">git repository:</span><br><span class="line">keywords:</span><br><span class="line">author:</span><br><span class="line">license: (ISC)</span><br><span class="line">About to write to /Users/huixisheng/Desktop/tmp2016/package.json:</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;tmp2016&quot;,</span><br><span class="line">  &quot;version&quot;: &quot;1.0.0&quot;,</span><br><span class="line">  &quot;description&quot;: &quot;&quot;,</span><br><span class="line">  &quot;main&quot;: &quot;index.js&quot;,</span><br><span class="line">  &quot;scripts&quot;: &#123;</span><br><span class="line">    &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;author&quot;: &quot;&quot;,</span><br><span class="line">  &quot;license&quot;: &quot;ISC&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Is this ok? (yes) yes</span><br></pre></td></tr></table></figure><h2 id="安装依赖-npm-install"><a href="#安装依赖-npm-install" class="headerlink" title="安装依赖 npm install"></a>安装依赖 npm install</h2><h3 id="npm-install-lt-git-remote-url-gt"><a href="#npm-install-lt-git-remote-url-gt" class="headerlink" title="npm install &lt;git remote url&gt;"></a><code>npm install &lt;git remote url&gt;</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;protocol&gt;://[&lt;user&gt;[:&lt;password&gt;]@]&lt;hostname&gt;[:&lt;port&gt;][:][/]&lt;path&gt;[#&lt;commit-ish&gt;]</span><br><span class="line">&lt;protocol&gt; is one of git, git+ssh, git+http, git+https, or git+file. If no &lt;commit-ish&gt; is specified, then master is used.</span><br></pre></td></tr></table></figure><p>示例:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install git://git@github.com:huixisheng/zepto-lazyload.git</span><br><span class="line">$ npm install https://github.com/huixisheng/zepto-lazyload.git</span><br></pre></td></tr></table></figure></p><p><code>package.json</code>配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;dependencies&quot;: &#123;</span><br><span class="line">  &quot;zepto-lazyload&quot;: &quot;git://git@github.com:huixisheng/zepto-lazyload.git&quot;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>定义包的版本</p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&quot;dependencies&quot;: &#123;</span><br><span class="line">  &quot;package1&quot;: &quot;1.0.0&quot;,         // 只接受1.0.0的版本</span><br><span class="line">  &quot;package2&quot;: &quot;1.0.x&quot;,         // 接受1.0版本的bug修复或小更新</span><br><span class="line">  &quot;package3&quot;: &quot;*&quot;,             // 最新的版本，不推荐</span><br><span class="line">  &quot;package4&quot;: &quot;&gt;=1.0.0&quot;,       // 接受任何1.0.0版本后的更新</span><br><span class="line">  &quot;package5&quot;: &quot;&lt;1.9.0&quot;,        // 接受不超过1.9.0版本的更新</span><br><span class="line">  &quot;package6&quot;: &quot;~1.8.0&quot;,        // 接受 &gt;= 1.8.0 并 &lt; 1.9.0 的版本</span><br><span class="line">  &quot;package7&quot;: &quot;^1.1.0&quot;,        // 接受 &gt;=1.1.0 并 &lt; 2.0.0 的版本</span><br><span class="line">  &quot;package8&quot;: &quot;latest&quot;,        // tag name for latest version</span><br><span class="line">  &quot;package9&quot;: &quot;&quot;,              // 同 * 即最新版本。</span><br><span class="line">  &quot;packageX&quot;: &quot;&lt;1.0.0 || &gt;=2.3.1 &lt;2.4.5 || &gt;=2.5.2 &lt;3.0.0&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><a href="http://huangbingbing.com/2015/06/24/NPM-node-js%E7%9A%84%E5%8C%85%E7%AE%A1%E7%90%86/" target="_blank" rel="noopener">来自</a></p></blockquote><p>具体配置可以看官方<a href="https://docs.npmjs.com/misc/semver" target="_blank" rel="noopener">npm语义化文档</a></p><h2 id="命令说明"><a href="#命令说明" class="headerlink" title="命令说明"></a>命令说明</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">npm install gitlab:&lt;gitlabname&gt;/&lt;gitlabrepo&gt;[#&lt;commit-ish&gt;]</span><br><span class="line">npm install bitbucket:&lt;bitbucketname&gt;/&lt;bitbucketrepo&gt;[#&lt;commit-ish&gt;]</span><br><span class="line">npm install gist:[&lt;githubname&gt;/]&lt;gistID&gt;[#&lt;commit-ish&gt;]</span><br><span class="line">npm install github:&lt;githubname&gt;/&lt;githubrepo&gt;[#&lt;commit-ish&gt;]</span><br><span class="line">npm install &lt;githubname&gt;/&lt;githubrepo&gt;[#&lt;commit-ish&gt;]</span><br><span class="line">npm install &lt;git remote url&gt;</span><br><span class="line">npm install (with no args, in package dir)</span><br><span class="line">npm install [&lt;@scope&gt;/]&lt;name&gt;</span><br><span class="line">npm install [&lt;@scope&gt;/]&lt;name&gt;@&lt;tag&gt;</span><br><span class="line">npm install [&lt;@scope&gt;/]&lt;name&gt;@&lt;version&gt;</span><br><span class="line">npm install [&lt;@scope&gt;/]&lt;name&gt;@&lt;version range&gt;</span><br><span class="line">npm install &lt;tarball file&gt;</span><br><span class="line">npm install &lt;tarball url&gt;</span><br><span class="line">npm install &lt;folder&gt;</span><br></pre></td></tr></table></figure><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><h3 id="npm-install-github仓库报错"><a href="#npm-install-github仓库报错" class="headerlink" title="npm install github仓库报错"></a>npm install github仓库报错</h3><p>执行如下命令:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install git://github.com/theicebear/npm-basic-usage.git</span><br></pre></td></tr></table></figure></p><p>报错:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm ERR! eisdir EISDIR: illegal operation on a directory, read</span><br><span class="line">npm ERR! eisdir This is most likely not a problem with npm itself</span><br><span class="line">npm ERR! eisdir and is related to npm not being able to find a package.json in</span><br><span class="line">npm ERR! eisdir a package you are trying to install.</span><br></pre></td></tr></table></figure></p><p>为了解决这个报错执行了命令<a href="https://github.com/npm/npm/issues/9856" target="_blank" rel="noopener"><code>npm config set -g cafile</code> </a>就悲剧了。<code>npm</code>的命令全部不行了。解放办法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/etc/npmrc</span><br><span class="line">delete cafile = &apos;&apos; it works</span><br></pre></td></tr></table></figure><p>解决思路</p><ol><li>直接通过报错<code>google</code>。尝试无果，还发生悲剧</li><li>在github搜索，看了npm的相关issue</li><li>期间重装过<code>nodejs</code>，删除了npm相关的缓存</li><li>最后想到的办法是重置npm的配置。</li></ol><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[npm获取配置有6种方式，优先级由高到底。](http://www.cnblogs.com/huang0925/archive/2013/05/17/3083207.html)</span><br><span class="line">命令行参数。 --proxy http://server:port即将proxy的值设为http://server:port。</span><br><span class="line">环境变量。 以npm_config_为前缀的环境变量将会被认为是npm的配置属性。如设置proxy可以加入这样的环境变量npm_config_proxy=http://server:port。</span><br><span class="line">用户配置文件。可以通过npm config get userconfig查看文件路径。如果是mac系统的话默认路径就是$HOME/.npmrc。</span><br><span class="line">全局配置文件。可以通过npm config get globalconfig查看文件路径。mac系统的默认路径是/usr/local/etc/npmrc。</span><br><span class="line">内置配置文件。安装npm的目录下的npmrc文件。</span><br><span class="line">默认配置。 npm本身有默认配置参数，如果以上5条都没设置，则npm会使用默认配置参数。</span><br></pre></td></tr></table></figure></blockquote><p><a href="https://docs.npmjs.com/files/npmrc" target="_blank" rel="noopener">npm配置的官方说明</a></p><p>报错原因:<br>github参考不包含<code>package.json</code>文件</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="http://www.cnblogs.com/huang0925/archive/2013/05/17/3083207.html" target="_blank" rel="noopener">http://www.cnblogs.com/huang0925/archive/2013/05/17/3083207.html</a></li><li><a href="http://huangbingbing.com/2015/06/24/NPM-node-js%E7%9A%84%E5%8C%85%E7%AE%A1%E7%90%86/" target="_blank" rel="noopener">http://huangbingbing.com/2015/06/24/NPM-node-js%E7%9A%84%E5%8C%85%E7%AE%A1%E7%90%86/</a></li><li><a href="https://github.com/ericdum/mujiang.info/issues/6" target="_blank" rel="noopener">https://github.com/ericdum/mujiang.info/issues/6</a></li><li><a href="https://docs.npmjs.com/files/npmrc" target="_blank" rel="noopener">https://docs.npmjs.com/files/npmrc</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;npm是nodejs的官方包管理，有成千上万的包，方便了前端模块化开发。但有些前端库并没有发布到npm,但有时候项目又需要它。本文介绍通过npm如何安装github仓库代码。从而达到模块化开发的目的。&lt;/p&gt;
    
    </summary>
    
    
      <category term="npm" scheme="http://huixisheng.github.io/tags/npm/"/>
    
      <category term="nodejs" scheme="http://huixisheng.github.io/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>spawn和exec简单介绍</title>
    <link href="http://huixisheng.github.io/nodejs-spawn-exec/"/>
    <id>http://huixisheng.github.io/nodejs-spawn-exec/</id>
    <published>2016-10-22T13:02:45.000Z</published>
    <updated>2016-10-22T13:10:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>谷歌搜了下网上介绍spawn和exec区别的文章还是很详细的，引用相关主要的提到的点。同时结合项目中使用过的脚步了解相关的使用方法。</p><a id="more"></a><h2 id="spawn"><a href="#spawn" class="headerlink" title="spawn"></a>spawn</h2><blockquote><p>spawn方法创建一个子进程来执行特定命令，用法与execFile方法类似，但是没有回调函数，只能通过监听事件，来获取运行结果。它属于异步执行，适用于子进程长时间运行的情况。<a href="http://javascript.ruanyifeng.com/nodejs/child-process.html#toc3" target="_blank" rel="noopener">来自Child Process模块</a></p></blockquote><p>在<code>node v0.11.12</code>相应的同步方法。记得不支持同步方法<code>node</code>版本中有对应的模块<a href="https://www.npmjs.com/package/spawn-sync" target="_blank" rel="noopener">spawn-sync</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">child_process.spawnSync(command[, args][, options])</span><br><span class="line">Added in: v0.11.12</span><br></pre></td></tr></table></figure><p>早期简单实现了同步读取数据</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> cp = <span class="built_in">require</span>(<span class="string">'child_process'</span>);</span><br><span class="line"><span class="keyword">var</span> assert = <span class="built_in">require</span>(<span class="string">'assert'</span>);</span><br><span class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">var</span> input = &#123;</span><br><span class="line">    <span class="string">"prid"</span> : productId</span><br><span class="line">&#125;;</span><br><span class="line">input = <span class="built_in">JSON</span>.stringify(input);</span><br><span class="line">args = args || &#123;&#125;;</span><br><span class="line"><span class="keyword">var</span> requestPath = path.join(__dirname, <span class="string">'queryProduct.js'</span>);</span><br><span class="line"><span class="keyword">var</span> cmd = process.execPath;</span><br><span class="line"><span class="keyword">var</span> _args = [requestPath, input];</span><br><span class="line"><span class="keyword">var</span> res = cp.spawnSync(cmd, _args, &#123;</span><br><span class="line">    timeout: (args.timeout || <span class="number">3000</span>) + <span class="number">1000</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// console.log(res.stdout.toString('utf8'));</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">JSON</span>.parse(res.stdout.toString(<span class="string">'utf8'</span>));</span><br></pre></td></tr></table></figure><p>queryProduct.js<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">async.series([</span><br><span class="line">    function(cb)&#123;</span><br><span class="line">        conn.query(sql, function(err, res)&#123;</span><br><span class="line">            var row = res[0];</span><br><span class="line">            cb(null, row);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">], function(err, result)&#123;</span><br><span class="line">    if( err )&#123;</span><br><span class="line">        console.error(err.message);</span><br><span class="line">        process.exit(1);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        console.log(JSON.stringify(result[0]));</span><br><span class="line">    &#125;</span><br><span class="line">    conn.end();</span><br><span class="line">    process.exit(0);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><h2 id="exec"><a href="#exec" class="headerlink" title="exec"></a>exec</h2><p>有对于的同步方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">child_process.execSync(command[, options])#</span><br><span class="line">Added in: v0.11.12</span><br></pre></td></tr></table></figure></p><p><code>child_process.execSync</code><br>使用实例，合并当前的操作分支到test,并推送到远程的test分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env node</span><br><span class="line"></span><br><span class="line">// chmod +x</span><br><span class="line">var child = require(&apos;child_process&apos;);</span><br><span class="line">var execSync = require(&apos;child_process&apos;).execSync;</span><br><span class="line"></span><br><span class="line">// @todo</span><br><span class="line">var gstOutput = spawnSync(&apos;git branch&apos;, []);</span><br><span class="line">var currentBranch = getCurrentBranch();</span><br><span class="line">console.log(&apos;切换到test分支:&apos;);</span><br><span class="line">var gcOutput = execSync(&apos;git checkout test&apos;);</span><br><span class="line">console.log(&apos;合并分支&apos; + currentBranch);</span><br><span class="line">var megerOutPut = execSync(&apos;git merge &apos; + currentBranch);</span><br><span class="line">console.log(&apos;推送test分支&apos;);</span><br><span class="line">execSync(&apos;git pull origin test &amp;&amp; git push origin test &amp;&amp; npm run sync&apos;);</span><br><span class="line">console.log(&apos;切换到&apos; + currentBranch);</span><br><span class="line">execSync(&apos;git checkout &apos; + currentBranch);</span><br><span class="line"></span><br><span class="line">// git branch | grep &quot;*&quot;  简写</span><br><span class="line">function getCurrentBranch()&#123;</span><br><span class="line">  var execOutput = execSync(&apos;git branch&apos;, &#123;&#125;);</span><br><span class="line">  var outputContent = execOutput.toString();</span><br><span class="line">  var arr = outputContent.split(&apos;\n&apos;);</span><br><span class="line">  for(var i = arr.length - 1; i &gt;= 0; i--)&#123;</span><br><span class="line">    if( arr[i].indexOf(&apos;*&apos;) &gt;= 0 )&#123;</span><br><span class="line">      return arr[i].replace(&apos;*&apos;, &apos;&apos;).trim();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  return &apos;&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>exec方法用于执行bash命令，它的参数是一个命令字符串。<br>如果用户输入恶意代码，将会带来安全风险。因此，在有用户输入的情况下，最好不使用exec方法，而是使用execFile方法。</p></blockquote><h2 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h2><blockquote><p>虽然在上面的文档用法中，spwan和exec的最终回调方式有区别，但是在node的实现中，其实两者的实现方式是一致的，exec也可以像spawn一样使用，只不过exec在触发stderr和stdout的data事件的时候，会把数据写到字符串中，到执行结束或者错误退出的时候通过回调函数传递出来，实现了exec这种便捷用法。<a href="http://deadhorse.me/nodejs/2011/12/18/nodejs%E4%B8%ADchild_process%E6%A8%A1%E5%9D%97%E7%9A%84exec%E6%96%B9%E6%B3%95%E5%92%8Cspawn%E6%96%B9%E6%B3%95.html" target="_blank" rel="noopener">来自exec与spawn方法的区别与陷阱</a></p></blockquote><blockquote><p>使用exec默认最大是200k。<br>超出时会报一个错误： “Error: maxBuffer exceeded”</p></blockquote><p><a href="http://div.io/topic/1516" target="_blank" rel="noopener">使用node子进程spawn,exec踩过的坑</a> 提到exec和spawn的源码区分</p><blockquote><p>断点进去看后，豁然开朗，exec是对execFile的封装，execFile又是对spawn的封装。</p></blockquote><h3 id="exec和spawn的使用区分来自使用node子进程spawn-exec踩过的坑"><a href="#exec和spawn的使用区分来自使用node子进程spawn-exec踩过的坑" class="headerlink" title="exec和spawn的使用区分来自使用node子进程spawn,exec踩过的坑"></a>exec和spawn的使用区分<a href="http://div.io/topic/1516" target="_blank" rel="noopener">来自使用node子进程spawn,exec踩过的坑</a></h3><p>不过exec确实比spawn在使用上面要好很多</p><p>例如我们执行一个命令</p><p>使用exec</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">require(&apos;child_process&apos;).exec(&apos;edp webserver start&apos;);</span><br></pre></td></tr></table></figure><p>使用spawn</p><p>linux下这么搞</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var child = require(&apos;child_process&apos;).spawn(</span><br><span class="line">&apos;/bin/sh&apos;, [&apos;-c&apos;,&apos;edp webserver start&apos;], &#123; cwd: null, env: null, windowsVerbatimArguments: false &#125; );</span><br></pre></td></tr></table></figure><p>win下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> var child = require(&apos;child_process&apos;).spawn(</span><br><span class="line">&apos;cmd.exe&apos;, [&apos;/s&apos;, &apos;/c&apos;, &apos;edp webserver start&apos;], &#123; cwd: null, env: null, windowsVerbatimArguments: true &#125; );</span><br></pre></td></tr></table></figure><p>可见spawn还是比较麻烦的。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;谷歌搜了下网上介绍spawn和exec区别的文章还是很详细的，引用相关主要的提到的点。同时结合项目中使用过的脚步了解相关的使用方法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="nodejs" scheme="http://huixisheng.github.io/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>兼容性解决方案整理</title>
    <link href="http://huixisheng.github.io/compatibility-solution/"/>
    <id>http://huixisheng.github.io/compatibility-solution/</id>
    <published>2016-10-22T13:02:45.000Z</published>
    <updated>2016-12-23T03:08:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>移动互联网的今天，告别了ie6。</p><p>以下来自原先项目<del>psc</del>。<del>psc</del>已经删除，<del>使用issues继续整理</del>。相信这是一个更好的开始。整理到博客汇总。</p><a id="more"></a><p>浏览器的兼容性问题是前端开发人员最头痛的，PCS 收集并整理完美兼容的解决方案。低版本浏览器添加过多的脚本或者更多的代码势必会带来性能，维护成本。其实PCS 并非是完美的解法办法，最完美的是浏览器本身符合<a href="http://baike.baidu.com/view/459077.htm?fr=wordsearch" target="_blank" rel="noopener">w3c标准</a>。当然这不现实，要不要所有浏览器都真的完全表现一样，其实还要视项目而定，或许我们可以选择<a href="http://baike.baidu.com/view/1172014.htm" target="_blank" rel="noopener">优雅降级</a>处理。凡是一切都在权衡。</p><h2 id="CSS-CSS3"><a href="#CSS-CSS3" class="headerlink" title="CSS/CSS3"></a>CSS/CSS3</h2><h3 id="Respond"><a href="#Respond" class="headerlink" title="Respond"></a><a href="https://github.com/scottjehl/Respond" target="_blank" rel="noopener">Respond</a></h3><h2 id="inline-block"><a href="#inline-block" class="headerlink" title="inline-block"></a><a href="http://ued.taobao.org/blog/2012/08/inline-block/" target="_blank" rel="noopener">inline-block</a></h2><pre><code>.dib-wrap {    font-size:0;/* 所有浏览器 */    *word-spacing:-1px;/* IE6、7 */}.dib-wrap .dib{    font-size: 12px;    letter-spacing: normal;    word-spacing: normal;    vertical-align:top;}@media screen and (-webkit-min-device-pixel-ratio:0){    /* firefox 中 letter-spacing 会导致脱离普通流的元素水平位移 */    .dib-wrap{    letter-spacing:-5px;/* Safari 等不支持字体大小为 0 的浏览器, N 根据父级字体调节*/    }}.dib {    display: inline-block;    *display:inline;    *zoom:1;}</code></pre><h2 id="css3-gradient"><a href="#css3-gradient" class="headerlink" title="css3-gradient"></a><a href="http://www.w3cplus.com/content/css3-gradient" target="_blank" rel="noopener">css3-gradient</a></h2><ol><li><a href="http://www.colorzilla.com/gradient-editor/" target="_blank" rel="noopener">css3 渐变在线生成工具Ultimate CSS Gradient Generator</a></li></ol><h2 id="HTML-HTML5"><a href="#HTML-HTML5" class="headerlink" title="HTML/HTML5"></a>HTML/HTML5</h2><h2 id="html5shiv"><a href="#html5shiv" class="headerlink" title="html5shiv"></a>html5shiv</h2><p>The <a href="https://github.com/aFarkas/html5shiv" target="_blank" rel="noopener">HTML5 Shiv</a> enables use of HTML5 sectioning elements in legacy Internet Explorer and provides basic HTML5 styling for Internet Explorer 6-9, Safari 4.x (and iPhone 3.x), and Firefox 3.x.</p><h2 id="html5demos"><a href="#html5demos" class="headerlink" title="html5demos"></a><a href="https://github.com/remy/html5demos" target="_blank" rel="noopener">html5demos</a></h2><p>A collection of HTML5 experiments I’ve created, now open source and on GitHub, so please go ahead and help me hack this resource in to a wealth of demos that other authors can learn from.</p><h2 id="HTML5-History-API"><a href="#HTML5-History-API" class="headerlink" title="HTML5-History-API"></a><a href="https://github.com/remy/html5demos" target="_blank" rel="noopener">HTML5-History-API</a></h2><h2 id="video-js"><a href="#video-js" class="headerlink" title="video.js"></a><a href="https://github.com/videojs/video.js" target="_blank" rel="noopener">video.js</a></h2><h2 id="jQuery-html5-placeholder"><a href="#jQuery-html5-placeholder" class="headerlink" title=" jQuery-html5-placeholder"></a><a href="https://github.com/Topener/jQuery-html5-placeholder" target="_blank" rel="noopener"> jQuery-html5-placeholder</a></h2><h2 id="HTML5-Desktop-Notifications"><a href="#HTML5-Desktop-Notifications" class="headerlink" title="HTML5 Desktop Notifications"></a><a href="https://github.com/ttsvetko/HTML5-Desktop-Notifications" target="_blank" rel="noopener">HTML5 Desktop Notifications</a></h2><h2 id="localstorage"><a href="#localstorage" class="headerlink" title="localstorage"></a>localstorage</h2><p><a href="https://github.com/marcuswestin/store.js" target="_blank" rel="noopener">store.js</a> exposes a simple API for cross browser local storage</p><h2 id="JavaScritp-ECMAScript"><a href="#JavaScritp-ECMAScript" class="headerlink" title="JavaScritp/ECMAScript"></a>JavaScritp/ECMAScript</h2><h2 id="es5-shim"><a href="#es5-shim" class="headerlink" title="es5-shim"></a>es5-shim</h2><p><a href="https://github.com/es-shims/es5-shim" target="_blank" rel="noopener"><code>es5-shim.js</code></a> and <code>es5-shim.min.js</code> monkey-patch a JavaScript context to<br>contain all EcmaScript 5 methods that can be faithfully emulated with a<br>legacy JavaScript engine.</p><h2 id="IE-IE6-IE7-IE8"><a href="#IE-IE6-IE7-IE8" class="headerlink" title="IE/IE6/IE7/IE8"></a>IE/IE6/IE7/IE8</h2><h3 id="PIE"><a href="#PIE" class="headerlink" title="PIE"></a>PIE</h3><p>(PIE)(<a href="http://css3pie.com/" target="_blank" rel="noopener">http://css3pie.com/</a>) makes Internet Explorer 6-9 capable of rendering several of the most useful CSS3 decoration features.</p><p>通过脚本可以使得ie6/7/8/9 支持css3 的 border-radius、box-shadow、linear-gradient。</p><h3 id="DD-belatedPNG"><a href="#DD-belatedPNG" class="headerlink" title="DD_belatedPNG"></a><a href="http://www.dillerdesign.com/experiment/DD_belatedPNG/" target="_blank" rel="noopener">DD_belatedPNG</a></h3><p>This is a Javascript library that sandwiches PNG image support into IE6 without much fuss.</p><p>处理ie6不支持png24。</p><pre><code>DD_belatedPNG.fix(&apos;.png_bg, .png24&apos;); // argument is a CSS selectorDD_belatedPNG.fixPng( someNode ); // argument is an HTMLDomElement</code></pre><h4 id="更多solution"><a href="#更多solution" class="headerlink" title="更多solution"></a>更多solution</h4><ol><li><a href="http://www.w3cfuns.com/thread-297-1-1.html" target="_blank" rel="noopener">IE6 PNG透明终极解决方案（打造W3Cfuns-IE6PNG最强帖）</a></li></ol><h3 id="IE下-z-index的层级问题"><a href="#IE下-z-index的层级问题" class="headerlink" title="IE下 z-index的层级问题"></a>IE下 z-index的层级问题</h3><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ol><li><a href="http://www.cnblogs.com/Darren_code/archive/2012/03/05/z-index.html" target="_blank" rel="noopener">IE下 z-index 的各种坑</a></li><li><a href="http://www.zhangxinxu.com/wordpress/2009/12/ie6%E4%B8%8Bz-index%E7%8A%AF%E7%99%AB%E4%B8%8D%E8%B5%B7%E4%BD%9C%E7%94%A8bug%E7%9A%84%E5%88%9D%E6%AD%A5%E7%A0%94%E7%A9%B6/" target="_blank" rel="noopener">IE6下z-index犯癫不起作用bug的初步研究</a></li><li><a href="http://www.w3help.org/zh-cn/causes/RM8015" target="_blank" rel="noopener">IE6 IE7 IE8(Q) 中定位元素 ‘z-index’ 为默认值在某些情况下会产生新的层叠上下文</a></li></ol><h3 id="ie6-不支持positon-fixed"><a href="#ie6-不支持positon-fixed" class="headerlink" title="ie6 不支持positon: fixed"></a>ie6 不支持<code>positon: fixed</code></h3><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><ol><li><a href="http://www.w3help.org/zh-cn/causes/RM8013" target="_blank" rel="noopener">RM8013: IE6 IE7(Q) IE8(Q) 不支持固定定位（position:fixed）</a></li><li><a href="http://www.cnblogs.com/hooray/archive/2011/05/20/2052269.html" target="_blank" rel="noopener">完美解决IE6不支持position:fixed的bug</a></li></ol><h3 id="透明度-opacity-rgba"><a href="#透明度-opacity-rgba" class="headerlink" title="透明度 opacity/rgba"></a>透明度 opacity/rgba</h3><p>opacity设置的透明度对子元素都有影响。ie可以使用 filter 处理</p><pre><code>.opacity{    background: rgb(255,255,0);    opacity: 0.4;    filter:alpha(opacity=40);}.rgba{    filter:progid:DXImageTransform.Microsoft.gradient(enabled=&apos;true&apos;,startColorstr=&apos;#7F000000&apos;, endColorstr=&apos;#7F000000&apos;);}:root  .rgba{    filter:none;     /*处理IE9浏览器中的滤镜效果*/    background-color:rgba(0,0,0,0.5);}</code></pre><ol><li><a href="http://www.w3help.org/zh-cn/causes/BT9011" target="_blank" rel="noopener">BT9011: 只有 IE 支持 CSS Filter</a></li><li><a href="http://www.w3cplus.com/content/css3-rgba" target="_blank" rel="noopener">CSS3 RGBA</a></li><li><a href="http://www.linxz.de/css_tool/hex_color.html" target="_blank" rel="noopener">css3-rgba ie下可透明的背景颜色转换工具</a></li></ol><h3 id="ie6-max-width-max-height-min-height-min-width"><a href="#ie6-max-width-max-height-min-height-min-width" class="headerlink" title="ie6 max-width/max-height/min-height/min-width"></a>ie6 max-width/max-height/min-height/min-width</h3><pre><code>.maxh{ max-height:300px; _height: expression(this.scrollHeight &gt;= 300? &apos;300px&apos; : &apos;auto&apos;);  }.maxw{ max-width: 300px; _width: expression(this.clientWidth &gt;= 300 ? &apos;300px&apos; : &apos;auto&apos;); }.minh{ min-height: 300px; height:auto !important; _height: 300px; }.minw{ min-width: 300px; _width: expression(this.clientWidth &lt;= 300 ? &apos;300px&apos; : &apos;auto&apos;); }</code></pre><ol><li><a href="http://ziren.org/html-css/ie6-support-min-width-and-max-width.html" target="_blank" rel="noopener">让IE6支持min-width和max-width的方法</a></li></ol><h2 id="css3-mediaqueries-js"><a href="#css3-mediaqueries-js" class="headerlink" title="css3-mediaqueries-js"></a>css3-mediaqueries-js</h2><p><a href="http://css3-mediaqueries-js.googlecode.com/svn/trunk/css3-mediaqueries.js" target="_blank" rel="noopener">css3-mediaqueries-js</a></p><h2 id="ieBetter"><a href="#ieBetter" class="headerlink" title="ieBetter"></a>ieBetter</h2><p><a href="http://www.zhangxinxu.com/wordpress/2013/12/iebetter-js-make-ie6-ie8-like-modern-browser-ie9-chrome/" target="_blank" rel="noopener">ieBetter.js-让IE6-IE8拥有IE9+,Chrome等浏览器特性</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;移动互联网的今天，告别了ie6。&lt;/p&gt;
&lt;p&gt;以下来自原先项目&lt;del&gt;psc&lt;/del&gt;。&lt;del&gt;psc&lt;/del&gt;已经删除，&lt;del&gt;使用issues继续整理&lt;/del&gt;。相信这是一个更好的开始。整理到博客汇总。&lt;/p&gt;
    
    </summary>
    
    
      <category term="兼容性" scheme="http://huixisheng.github.io/tags/%E5%85%BC%E5%AE%B9%E6%80%A7/"/>
    
      <category term="前端库" scheme="http://huixisheng.github.io/tags/%E5%89%8D%E7%AB%AF%E5%BA%93/"/>
    
  </entry>
  
</feed>
